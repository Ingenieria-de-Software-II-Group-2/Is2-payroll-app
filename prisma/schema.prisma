// prisma/schema.prisma

generator client {
  provider = "prisma-client-js"
}
// prisma/schema.prisma
datasource db {
  provider  = "postgresql"
  url  	    = env("DATABASE_URL") 
  // uncomment next line if you use Prisma <5.10
   directUrl = env("DATABASE_URL_UNPOOLED")
}

 

// === Modelos ordenados para evitar errores ===

model categoria_salarial {
  id_categoria_salarial Int     @id @default(autoincrement())
  monto                 Int
  cargos                cargo[]
}

model rol_usuario {
  id_rol_usuario        Int           @id @default(autoincrement())
  nombre                String        @db.VarChar(50)
  descripcion_rol       String        @db.VarChar(50)
  usuarios              usuario[]
}

model nomina {
  id_nomina             Int                 @id @default(autoincrement())
  anho                  Int
  fecha_generacion      DateTime            @db.Date
  estado                String              @db.VarChar(20)
  mes                   Int
  detalle_nominas       detalle_nomina[]
}

model tipo_concepto_salarial {
  id_concepto_salarial  Int                   @id @default(autoincrement())
  descripcion           String                @db.VarChar(255)
  conceptos_salariales  concepto_salarial[]
}

model estado_civil {
  id_estado             Int           @id @default(autoincrement())
  descripcion           String        @db.VarChar(20)
  empleados             empleado[]
}

model departamento {
  id_departamento       Int           @id @default(autoincrement())
  nombre                String        @db.VarChar(50)
  ubicacion             String        @db.VarChar(100)
  cargos                cargo[]
}

model empleado {
  id_empleado           Int                     @id @default(autoincrement())
  nombre                String                  @db.VarChar(50)
  cedula                String                  @db.VarChar(15)
  apellido              String                  @db.VarChar(50)
  fecha_nacimiento      DateTime                @db.Date
  correo                String                  @db.VarChar(50)
  fecha_ingreso         DateTime                @db.Date
  telefono              String                  @db.VarChar(13)
  fecha_egreso          DateTime?               @db.Date
  direccion             String                  @db.VarChar(100)
  afiliado_IPS          Boolean
  id_estado_civil       Int
  estado_civil          estado_civil            @relation(fields: [id_estado_civil], references: [id_estado])
  hijos                 hijo[]
  historial_cargos      historial_cargo[]
  usuario               usuario?
  conceptos_empleado    concepto_empleado[]
  detalle_nominas       detalle_nomina[]
}

model concepto_salarial {
  id_concepto             Int                       @id @default(autoincrement())
  nombre                  String                    @db.VarChar(50)
  recurrente              Boolean
  afecta_IPS              Boolean
  afecta_aguinaldo        Boolean
  id_concepto_salarial    Int
  tipo_concepto_salarial  tipo_concepto_salarial    @relation(fields: [id_concepto_salarial], references: [id_concepto_salarial])
  conceptos_empleado      concepto_empleado[]
  detalle_conceptos       detalle_nomina_concepto[]
}

model cargo {
  id_cargo                Int                       @id @default(autoincrement())
  nombre_cargo            String                    @db.VarChar(50)
  departamento            String                    @db.VarChar(50)
  id_departamento         Int
  Activo                  Boolean
  id_categoria_salarial   Int
  departamento_rel        departamento              @relation(fields: [id_departamento], references: [id_departamento])
  categoria_salarial      categoria_salarial        @relation(fields: [id_categoria_salarial], references: [id_categoria_salarial])
  historial_cargos        historial_cargo[]
}

model usuario {
  id_usuario            Int           @id @default(autoincrement())
  nombre_usuario        String        @db.VarChar(50)
  estado                Boolean
  clave                 String        @db.VarChar(255)
  id_rol_usuario        Int
  id_empleado           Int           @unique
  rol_usuario           rol_usuario   @relation(fields: [id_rol_usuario], references: [id_rol_usuario])
  empleado              empleado      @relation(fields: [id_empleado], references: [id_empleado])
  registro_accesos      registro_acceso[]
  detalle_nominas       detalle_nomina[]
}

model detalle_nomina {
  id_detalle            Int                     @id @default(autoincrement())
  total_descuentos      Decimal                 @db.Decimal(12,2)
  total_bonificaciones  Decimal                 @db.Decimal(12,2)
  neto_a_cobrar         Int
  creado_por            Int
  id_nomina             Int
  id_empleado           Int
  usuario               usuario                 @relation(fields: [creado_por], references: [id_usuario])
  nomina                nomina                  @relation(fields: [id_nomina], references: [id_nomina])
  empleado              empleado                @relation(fields: [id_empleado], references: [id_empleado])
  detalle_conceptos     detalle_nomina_concepto[]
}

model detalle_nomina_concepto {
  id_detalle_conceptos  Int                     @id
  monto                 Decimal                 @db.Decimal(12,2)
  id_concepto           Int
  id_detalle            Int
  origen                String                  @db.VarChar(10)
  concepto_salarial     concepto_salarial       @relation(fields: [id_concepto], references: [id_concepto])
  detalle_nomina        detalle_nomina          @relation(fields: [id_detalle], references: [id_detalle])
}

model registro_acceso {
  id_registro           Int           @id @default(autoincrement())
  id_usuario            Int
  ip_origen             String        @db.VarChar(15)
  accion                String        @db.VarChar(255)
  fecha_hora            DateTime
  usuario               usuario       @relation(fields: [id_usuario], references: [id_usuario])
}

model hijo {
  id_hijo                       Int           @id @default(autoincrement())
  nombre                      String        @db.VarChar(50)
  certificado_vida_residencia String
  fecha_vencimiento_certificado DateTime    @db.Date
  id_empleado                 Int
  discapacidad                Boolean
  fecha_nacimiento            DateTime      @db.Date
  certificado_nacimiento      String
  empleado                    empleado      @relation(fields: [id_empleado], references: [id_empleado])
}

model historial_cargo {
  id_historial        Int           @id @default(autoincrement())
  id_empleado         Int
  Fecha_Inicio        DateTime      @db.Date
  fecha_fin           DateTime?     @db.Date
  Salario_Asignado    Int
  id_cargo            Int
  empleado            empleado      @relation(fields: [id_empleado], references: [id_empleado])
  cargo               cargo         @relation(fields: [id_cargo], references: [id_cargo])
}

model concepto_empleado {
  id_concepto_empleado  Int           @id @default(autoincrement())
  monto                 Decimal       @db.Decimal(12,2)
  id_empleado           Int
  observacion           String        @db.VarChar(255)
  activo                Boolean
  id_concepto           Int
  empleado              empleado      @relation(fields: [id_empleado], references: [id_empleado])
  concepto_salarial     concepto_salarial @relation(fields: [id_concepto], references: [id_concepto])
}