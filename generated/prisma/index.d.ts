
/**
 * Client
**/

import * as runtime from './runtime/library.js';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model cargo
 * 
 */
export type cargo = $Result.DefaultSelection<Prisma.$cargoPayload>
/**
 * Model categoria_salarial
 * 
 */
export type categoria_salarial = $Result.DefaultSelection<Prisma.$categoria_salarialPayload>
/**
 * Model concepto_empleado
 * 
 */
export type concepto_empleado = $Result.DefaultSelection<Prisma.$concepto_empleadoPayload>
/**
 * Model concepto_salarial
 * 
 */
export type concepto_salarial = $Result.DefaultSelection<Prisma.$concepto_salarialPayload>
/**
 * Model departamento
 * 
 */
export type departamento = $Result.DefaultSelection<Prisma.$departamentoPayload>
/**
 * Model detalle_nomina
 * 
 */
export type detalle_nomina = $Result.DefaultSelection<Prisma.$detalle_nominaPayload>
/**
 * Model detalle_nomina_concepto
 * 
 */
export type detalle_nomina_concepto = $Result.DefaultSelection<Prisma.$detalle_nomina_conceptoPayload>
/**
 * Model empleado
 * 
 */
export type empleado = $Result.DefaultSelection<Prisma.$empleadoPayload>
/**
 * Model estado_civil
 * 
 */
export type estado_civil = $Result.DefaultSelection<Prisma.$estado_civilPayload>
/**
 * Model hijo
 * 
 */
export type hijo = $Result.DefaultSelection<Prisma.$hijoPayload>
/**
 * Model historial_cargo
 * 
 */
export type historial_cargo = $Result.DefaultSelection<Prisma.$historial_cargoPayload>
/**
 * Model nomina
 * 
 */
export type nomina = $Result.DefaultSelection<Prisma.$nominaPayload>
/**
 * Model registro_acceso
 * 
 */
export type registro_acceso = $Result.DefaultSelection<Prisma.$registro_accesoPayload>
/**
 * Model rol_usuario
 * 
 */
export type rol_usuario = $Result.DefaultSelection<Prisma.$rol_usuarioPayload>
/**
 * Model tipo_concepto_salarial
 * 
 */
export type tipo_concepto_salarial = $Result.DefaultSelection<Prisma.$tipo_concepto_salarialPayload>
/**
 * Model usuario
 * 
 */
export type usuario = $Result.DefaultSelection<Prisma.$usuarioPayload>

/**
 * ##  Prisma Client ʲˢ
 *
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Cargos
 * const cargos = await prisma.cargo.findMany()
 * ```
 *
 *
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  ClientOptions extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  const U = 'log' extends keyof ClientOptions ? ClientOptions['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<ClientOptions['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   *
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more Cargos
   * const cargos = await prisma.cargo.findMany()
   * ```
   *
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<ClientOptions, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): PrismaClient;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;


  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<"extends", Prisma.TypeMapCb<ClientOptions>, ExtArgs, $Utils.Call<Prisma.TypeMapCb<ClientOptions>, {
    extArgs: ExtArgs
  }>>

      /**
   * `prisma.cargo`: Exposes CRUD operations for the **cargo** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Cargos
    * const cargos = await prisma.cargo.findMany()
    * ```
    */
  get cargo(): Prisma.cargoDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.categoria_salarial`: Exposes CRUD operations for the **categoria_salarial** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Categoria_salarials
    * const categoria_salarials = await prisma.categoria_salarial.findMany()
    * ```
    */
  get categoria_salarial(): Prisma.categoria_salarialDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.concepto_empleado`: Exposes CRUD operations for the **concepto_empleado** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Concepto_empleados
    * const concepto_empleados = await prisma.concepto_empleado.findMany()
    * ```
    */
  get concepto_empleado(): Prisma.concepto_empleadoDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.concepto_salarial`: Exposes CRUD operations for the **concepto_salarial** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Concepto_salarials
    * const concepto_salarials = await prisma.concepto_salarial.findMany()
    * ```
    */
  get concepto_salarial(): Prisma.concepto_salarialDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.departamento`: Exposes CRUD operations for the **departamento** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Departamentos
    * const departamentos = await prisma.departamento.findMany()
    * ```
    */
  get departamento(): Prisma.departamentoDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.detalle_nomina`: Exposes CRUD operations for the **detalle_nomina** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Detalle_nominas
    * const detalle_nominas = await prisma.detalle_nomina.findMany()
    * ```
    */
  get detalle_nomina(): Prisma.detalle_nominaDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.detalle_nomina_concepto`: Exposes CRUD operations for the **detalle_nomina_concepto** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Detalle_nomina_conceptos
    * const detalle_nomina_conceptos = await prisma.detalle_nomina_concepto.findMany()
    * ```
    */
  get detalle_nomina_concepto(): Prisma.detalle_nomina_conceptoDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.empleado`: Exposes CRUD operations for the **empleado** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Empleados
    * const empleados = await prisma.empleado.findMany()
    * ```
    */
  get empleado(): Prisma.empleadoDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.estado_civil`: Exposes CRUD operations for the **estado_civil** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Estado_civils
    * const estado_civils = await prisma.estado_civil.findMany()
    * ```
    */
  get estado_civil(): Prisma.estado_civilDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.hijo`: Exposes CRUD operations for the **hijo** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Hijos
    * const hijos = await prisma.hijo.findMany()
    * ```
    */
  get hijo(): Prisma.hijoDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.historial_cargo`: Exposes CRUD operations for the **historial_cargo** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Historial_cargos
    * const historial_cargos = await prisma.historial_cargo.findMany()
    * ```
    */
  get historial_cargo(): Prisma.historial_cargoDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.nomina`: Exposes CRUD operations for the **nomina** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Nominas
    * const nominas = await prisma.nomina.findMany()
    * ```
    */
  get nomina(): Prisma.nominaDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.registro_acceso`: Exposes CRUD operations for the **registro_acceso** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Registro_accesos
    * const registro_accesos = await prisma.registro_acceso.findMany()
    * ```
    */
  get registro_acceso(): Prisma.registro_accesoDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.rol_usuario`: Exposes CRUD operations for the **rol_usuario** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Rol_usuarios
    * const rol_usuarios = await prisma.rol_usuario.findMany()
    * ```
    */
  get rol_usuario(): Prisma.rol_usuarioDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.tipo_concepto_salarial`: Exposes CRUD operations for the **tipo_concepto_salarial** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Tipo_concepto_salarials
    * const tipo_concepto_salarials = await prisma.tipo_concepto_salarial.findMany()
    * ```
    */
  get tipo_concepto_salarial(): Prisma.tipo_concepto_salarialDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.usuario`: Exposes CRUD operations for the **usuario** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Usuarios
    * const usuarios = await prisma.usuario.findMany()
    * ```
    */
  get usuario(): Prisma.usuarioDelegate<ExtArgs, ClientOptions>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql



  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 6.16.2
   * Query Engine version: 1c57fdcd7e44b29b9313256c76699e91c3ac3c43
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion

  /**
   * Utility Types
   */


  export import JsonObject = runtime.JsonObject
  export import JsonArray = runtime.JsonArray
  export import JsonValue = runtime.JsonValue
  export import InputJsonObject = runtime.InputJsonObject
  export import InputJsonArray = runtime.InputJsonArray
  export import InputJsonValue = runtime.InputJsonValue

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  type SelectAndOmit = {
    select: any
    omit: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : T extends SelectAndOmit
        ? 'Please either choose `select` or `omit`.'
        : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? P : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    cargo: 'cargo',
    categoria_salarial: 'categoria_salarial',
    concepto_empleado: 'concepto_empleado',
    concepto_salarial: 'concepto_salarial',
    departamento: 'departamento',
    detalle_nomina: 'detalle_nomina',
    detalle_nomina_concepto: 'detalle_nomina_concepto',
    empleado: 'empleado',
    estado_civil: 'estado_civil',
    hijo: 'hijo',
    historial_cargo: 'historial_cargo',
    nomina: 'nomina',
    registro_acceso: 'registro_acceso',
    rol_usuario: 'rol_usuario',
    tipo_concepto_salarial: 'tipo_concepto_salarial',
    usuario: 'usuario'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }

  interface TypeMapCb<ClientOptions = {}> extends $Utils.Fn<{extArgs: $Extensions.InternalArgs }, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs'], ClientOptions extends { omit: infer OmitOptions } ? OmitOptions : {}>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> = {
    globalOmitOptions: {
      omit: GlobalOmitOptions
    }
    meta: {
      modelProps: "cargo" | "categoria_salarial" | "concepto_empleado" | "concepto_salarial" | "departamento" | "detalle_nomina" | "detalle_nomina_concepto" | "empleado" | "estado_civil" | "hijo" | "historial_cargo" | "nomina" | "registro_acceso" | "rol_usuario" | "tipo_concepto_salarial" | "usuario"
      txIsolationLevel: Prisma.TransactionIsolationLevel
    }
    model: {
      cargo: {
        payload: Prisma.$cargoPayload<ExtArgs>
        fields: Prisma.cargoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.cargoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cargoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.cargoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cargoPayload>
          }
          findFirst: {
            args: Prisma.cargoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cargoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.cargoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cargoPayload>
          }
          findMany: {
            args: Prisma.cargoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cargoPayload>[]
          }
          create: {
            args: Prisma.cargoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cargoPayload>
          }
          createMany: {
            args: Prisma.cargoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.cargoCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cargoPayload>[]
          }
          delete: {
            args: Prisma.cargoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cargoPayload>
          }
          update: {
            args: Prisma.cargoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cargoPayload>
          }
          deleteMany: {
            args: Prisma.cargoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.cargoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.cargoUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cargoPayload>[]
          }
          upsert: {
            args: Prisma.cargoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cargoPayload>
          }
          aggregate: {
            args: Prisma.CargoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCargo>
          }
          groupBy: {
            args: Prisma.cargoGroupByArgs<ExtArgs>
            result: $Utils.Optional<CargoGroupByOutputType>[]
          }
          count: {
            args: Prisma.cargoCountArgs<ExtArgs>
            result: $Utils.Optional<CargoCountAggregateOutputType> | number
          }
        }
      }
      categoria_salarial: {
        payload: Prisma.$categoria_salarialPayload<ExtArgs>
        fields: Prisma.categoria_salarialFieldRefs
        operations: {
          findUnique: {
            args: Prisma.categoria_salarialFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$categoria_salarialPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.categoria_salarialFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$categoria_salarialPayload>
          }
          findFirst: {
            args: Prisma.categoria_salarialFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$categoria_salarialPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.categoria_salarialFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$categoria_salarialPayload>
          }
          findMany: {
            args: Prisma.categoria_salarialFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$categoria_salarialPayload>[]
          }
          create: {
            args: Prisma.categoria_salarialCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$categoria_salarialPayload>
          }
          createMany: {
            args: Prisma.categoria_salarialCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.categoria_salarialCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$categoria_salarialPayload>[]
          }
          delete: {
            args: Prisma.categoria_salarialDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$categoria_salarialPayload>
          }
          update: {
            args: Prisma.categoria_salarialUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$categoria_salarialPayload>
          }
          deleteMany: {
            args: Prisma.categoria_salarialDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.categoria_salarialUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.categoria_salarialUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$categoria_salarialPayload>[]
          }
          upsert: {
            args: Prisma.categoria_salarialUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$categoria_salarialPayload>
          }
          aggregate: {
            args: Prisma.Categoria_salarialAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCategoria_salarial>
          }
          groupBy: {
            args: Prisma.categoria_salarialGroupByArgs<ExtArgs>
            result: $Utils.Optional<Categoria_salarialGroupByOutputType>[]
          }
          count: {
            args: Prisma.categoria_salarialCountArgs<ExtArgs>
            result: $Utils.Optional<Categoria_salarialCountAggregateOutputType> | number
          }
        }
      }
      concepto_empleado: {
        payload: Prisma.$concepto_empleadoPayload<ExtArgs>
        fields: Prisma.concepto_empleadoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.concepto_empleadoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$concepto_empleadoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.concepto_empleadoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$concepto_empleadoPayload>
          }
          findFirst: {
            args: Prisma.concepto_empleadoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$concepto_empleadoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.concepto_empleadoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$concepto_empleadoPayload>
          }
          findMany: {
            args: Prisma.concepto_empleadoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$concepto_empleadoPayload>[]
          }
          create: {
            args: Prisma.concepto_empleadoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$concepto_empleadoPayload>
          }
          createMany: {
            args: Prisma.concepto_empleadoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.concepto_empleadoCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$concepto_empleadoPayload>[]
          }
          delete: {
            args: Prisma.concepto_empleadoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$concepto_empleadoPayload>
          }
          update: {
            args: Prisma.concepto_empleadoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$concepto_empleadoPayload>
          }
          deleteMany: {
            args: Prisma.concepto_empleadoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.concepto_empleadoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.concepto_empleadoUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$concepto_empleadoPayload>[]
          }
          upsert: {
            args: Prisma.concepto_empleadoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$concepto_empleadoPayload>
          }
          aggregate: {
            args: Prisma.Concepto_empleadoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateConcepto_empleado>
          }
          groupBy: {
            args: Prisma.concepto_empleadoGroupByArgs<ExtArgs>
            result: $Utils.Optional<Concepto_empleadoGroupByOutputType>[]
          }
          count: {
            args: Prisma.concepto_empleadoCountArgs<ExtArgs>
            result: $Utils.Optional<Concepto_empleadoCountAggregateOutputType> | number
          }
        }
      }
      concepto_salarial: {
        payload: Prisma.$concepto_salarialPayload<ExtArgs>
        fields: Prisma.concepto_salarialFieldRefs
        operations: {
          findUnique: {
            args: Prisma.concepto_salarialFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$concepto_salarialPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.concepto_salarialFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$concepto_salarialPayload>
          }
          findFirst: {
            args: Prisma.concepto_salarialFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$concepto_salarialPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.concepto_salarialFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$concepto_salarialPayload>
          }
          findMany: {
            args: Prisma.concepto_salarialFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$concepto_salarialPayload>[]
          }
          create: {
            args: Prisma.concepto_salarialCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$concepto_salarialPayload>
          }
          createMany: {
            args: Prisma.concepto_salarialCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.concepto_salarialCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$concepto_salarialPayload>[]
          }
          delete: {
            args: Prisma.concepto_salarialDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$concepto_salarialPayload>
          }
          update: {
            args: Prisma.concepto_salarialUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$concepto_salarialPayload>
          }
          deleteMany: {
            args: Prisma.concepto_salarialDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.concepto_salarialUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.concepto_salarialUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$concepto_salarialPayload>[]
          }
          upsert: {
            args: Prisma.concepto_salarialUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$concepto_salarialPayload>
          }
          aggregate: {
            args: Prisma.Concepto_salarialAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateConcepto_salarial>
          }
          groupBy: {
            args: Prisma.concepto_salarialGroupByArgs<ExtArgs>
            result: $Utils.Optional<Concepto_salarialGroupByOutputType>[]
          }
          count: {
            args: Prisma.concepto_salarialCountArgs<ExtArgs>
            result: $Utils.Optional<Concepto_salarialCountAggregateOutputType> | number
          }
        }
      }
      departamento: {
        payload: Prisma.$departamentoPayload<ExtArgs>
        fields: Prisma.departamentoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.departamentoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$departamentoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.departamentoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$departamentoPayload>
          }
          findFirst: {
            args: Prisma.departamentoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$departamentoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.departamentoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$departamentoPayload>
          }
          findMany: {
            args: Prisma.departamentoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$departamentoPayload>[]
          }
          create: {
            args: Prisma.departamentoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$departamentoPayload>
          }
          createMany: {
            args: Prisma.departamentoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.departamentoCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$departamentoPayload>[]
          }
          delete: {
            args: Prisma.departamentoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$departamentoPayload>
          }
          update: {
            args: Prisma.departamentoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$departamentoPayload>
          }
          deleteMany: {
            args: Prisma.departamentoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.departamentoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.departamentoUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$departamentoPayload>[]
          }
          upsert: {
            args: Prisma.departamentoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$departamentoPayload>
          }
          aggregate: {
            args: Prisma.DepartamentoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateDepartamento>
          }
          groupBy: {
            args: Prisma.departamentoGroupByArgs<ExtArgs>
            result: $Utils.Optional<DepartamentoGroupByOutputType>[]
          }
          count: {
            args: Prisma.departamentoCountArgs<ExtArgs>
            result: $Utils.Optional<DepartamentoCountAggregateOutputType> | number
          }
        }
      }
      detalle_nomina: {
        payload: Prisma.$detalle_nominaPayload<ExtArgs>
        fields: Prisma.detalle_nominaFieldRefs
        operations: {
          findUnique: {
            args: Prisma.detalle_nominaFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$detalle_nominaPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.detalle_nominaFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$detalle_nominaPayload>
          }
          findFirst: {
            args: Prisma.detalle_nominaFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$detalle_nominaPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.detalle_nominaFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$detalle_nominaPayload>
          }
          findMany: {
            args: Prisma.detalle_nominaFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$detalle_nominaPayload>[]
          }
          create: {
            args: Prisma.detalle_nominaCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$detalle_nominaPayload>
          }
          createMany: {
            args: Prisma.detalle_nominaCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.detalle_nominaCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$detalle_nominaPayload>[]
          }
          delete: {
            args: Prisma.detalle_nominaDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$detalle_nominaPayload>
          }
          update: {
            args: Prisma.detalle_nominaUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$detalle_nominaPayload>
          }
          deleteMany: {
            args: Prisma.detalle_nominaDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.detalle_nominaUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.detalle_nominaUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$detalle_nominaPayload>[]
          }
          upsert: {
            args: Prisma.detalle_nominaUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$detalle_nominaPayload>
          }
          aggregate: {
            args: Prisma.Detalle_nominaAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateDetalle_nomina>
          }
          groupBy: {
            args: Prisma.detalle_nominaGroupByArgs<ExtArgs>
            result: $Utils.Optional<Detalle_nominaGroupByOutputType>[]
          }
          count: {
            args: Prisma.detalle_nominaCountArgs<ExtArgs>
            result: $Utils.Optional<Detalle_nominaCountAggregateOutputType> | number
          }
        }
      }
      detalle_nomina_concepto: {
        payload: Prisma.$detalle_nomina_conceptoPayload<ExtArgs>
        fields: Prisma.detalle_nomina_conceptoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.detalle_nomina_conceptoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$detalle_nomina_conceptoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.detalle_nomina_conceptoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$detalle_nomina_conceptoPayload>
          }
          findFirst: {
            args: Prisma.detalle_nomina_conceptoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$detalle_nomina_conceptoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.detalle_nomina_conceptoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$detalle_nomina_conceptoPayload>
          }
          findMany: {
            args: Prisma.detalle_nomina_conceptoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$detalle_nomina_conceptoPayload>[]
          }
          create: {
            args: Prisma.detalle_nomina_conceptoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$detalle_nomina_conceptoPayload>
          }
          createMany: {
            args: Prisma.detalle_nomina_conceptoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.detalle_nomina_conceptoCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$detalle_nomina_conceptoPayload>[]
          }
          delete: {
            args: Prisma.detalle_nomina_conceptoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$detalle_nomina_conceptoPayload>
          }
          update: {
            args: Prisma.detalle_nomina_conceptoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$detalle_nomina_conceptoPayload>
          }
          deleteMany: {
            args: Prisma.detalle_nomina_conceptoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.detalle_nomina_conceptoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.detalle_nomina_conceptoUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$detalle_nomina_conceptoPayload>[]
          }
          upsert: {
            args: Prisma.detalle_nomina_conceptoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$detalle_nomina_conceptoPayload>
          }
          aggregate: {
            args: Prisma.Detalle_nomina_conceptoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateDetalle_nomina_concepto>
          }
          groupBy: {
            args: Prisma.detalle_nomina_conceptoGroupByArgs<ExtArgs>
            result: $Utils.Optional<Detalle_nomina_conceptoGroupByOutputType>[]
          }
          count: {
            args: Prisma.detalle_nomina_conceptoCountArgs<ExtArgs>
            result: $Utils.Optional<Detalle_nomina_conceptoCountAggregateOutputType> | number
          }
        }
      }
      empleado: {
        payload: Prisma.$empleadoPayload<ExtArgs>
        fields: Prisma.empleadoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.empleadoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$empleadoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.empleadoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$empleadoPayload>
          }
          findFirst: {
            args: Prisma.empleadoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$empleadoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.empleadoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$empleadoPayload>
          }
          findMany: {
            args: Prisma.empleadoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$empleadoPayload>[]
          }
          create: {
            args: Prisma.empleadoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$empleadoPayload>
          }
          createMany: {
            args: Prisma.empleadoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.empleadoCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$empleadoPayload>[]
          }
          delete: {
            args: Prisma.empleadoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$empleadoPayload>
          }
          update: {
            args: Prisma.empleadoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$empleadoPayload>
          }
          deleteMany: {
            args: Prisma.empleadoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.empleadoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.empleadoUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$empleadoPayload>[]
          }
          upsert: {
            args: Prisma.empleadoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$empleadoPayload>
          }
          aggregate: {
            args: Prisma.EmpleadoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateEmpleado>
          }
          groupBy: {
            args: Prisma.empleadoGroupByArgs<ExtArgs>
            result: $Utils.Optional<EmpleadoGroupByOutputType>[]
          }
          count: {
            args: Prisma.empleadoCountArgs<ExtArgs>
            result: $Utils.Optional<EmpleadoCountAggregateOutputType> | number
          }
        }
      }
      estado_civil: {
        payload: Prisma.$estado_civilPayload<ExtArgs>
        fields: Prisma.estado_civilFieldRefs
        operations: {
          findUnique: {
            args: Prisma.estado_civilFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$estado_civilPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.estado_civilFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$estado_civilPayload>
          }
          findFirst: {
            args: Prisma.estado_civilFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$estado_civilPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.estado_civilFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$estado_civilPayload>
          }
          findMany: {
            args: Prisma.estado_civilFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$estado_civilPayload>[]
          }
          create: {
            args: Prisma.estado_civilCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$estado_civilPayload>
          }
          createMany: {
            args: Prisma.estado_civilCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.estado_civilCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$estado_civilPayload>[]
          }
          delete: {
            args: Prisma.estado_civilDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$estado_civilPayload>
          }
          update: {
            args: Prisma.estado_civilUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$estado_civilPayload>
          }
          deleteMany: {
            args: Prisma.estado_civilDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.estado_civilUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.estado_civilUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$estado_civilPayload>[]
          }
          upsert: {
            args: Prisma.estado_civilUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$estado_civilPayload>
          }
          aggregate: {
            args: Prisma.Estado_civilAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateEstado_civil>
          }
          groupBy: {
            args: Prisma.estado_civilGroupByArgs<ExtArgs>
            result: $Utils.Optional<Estado_civilGroupByOutputType>[]
          }
          count: {
            args: Prisma.estado_civilCountArgs<ExtArgs>
            result: $Utils.Optional<Estado_civilCountAggregateOutputType> | number
          }
        }
      }
      hijo: {
        payload: Prisma.$hijoPayload<ExtArgs>
        fields: Prisma.hijoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.hijoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$hijoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.hijoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$hijoPayload>
          }
          findFirst: {
            args: Prisma.hijoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$hijoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.hijoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$hijoPayload>
          }
          findMany: {
            args: Prisma.hijoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$hijoPayload>[]
          }
          create: {
            args: Prisma.hijoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$hijoPayload>
          }
          createMany: {
            args: Prisma.hijoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.hijoCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$hijoPayload>[]
          }
          delete: {
            args: Prisma.hijoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$hijoPayload>
          }
          update: {
            args: Prisma.hijoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$hijoPayload>
          }
          deleteMany: {
            args: Prisma.hijoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.hijoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.hijoUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$hijoPayload>[]
          }
          upsert: {
            args: Prisma.hijoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$hijoPayload>
          }
          aggregate: {
            args: Prisma.HijoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateHijo>
          }
          groupBy: {
            args: Prisma.hijoGroupByArgs<ExtArgs>
            result: $Utils.Optional<HijoGroupByOutputType>[]
          }
          count: {
            args: Prisma.hijoCountArgs<ExtArgs>
            result: $Utils.Optional<HijoCountAggregateOutputType> | number
          }
        }
      }
      historial_cargo: {
        payload: Prisma.$historial_cargoPayload<ExtArgs>
        fields: Prisma.historial_cargoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.historial_cargoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$historial_cargoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.historial_cargoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$historial_cargoPayload>
          }
          findFirst: {
            args: Prisma.historial_cargoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$historial_cargoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.historial_cargoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$historial_cargoPayload>
          }
          findMany: {
            args: Prisma.historial_cargoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$historial_cargoPayload>[]
          }
          create: {
            args: Prisma.historial_cargoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$historial_cargoPayload>
          }
          createMany: {
            args: Prisma.historial_cargoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.historial_cargoCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$historial_cargoPayload>[]
          }
          delete: {
            args: Prisma.historial_cargoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$historial_cargoPayload>
          }
          update: {
            args: Prisma.historial_cargoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$historial_cargoPayload>
          }
          deleteMany: {
            args: Prisma.historial_cargoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.historial_cargoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.historial_cargoUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$historial_cargoPayload>[]
          }
          upsert: {
            args: Prisma.historial_cargoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$historial_cargoPayload>
          }
          aggregate: {
            args: Prisma.Historial_cargoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateHistorial_cargo>
          }
          groupBy: {
            args: Prisma.historial_cargoGroupByArgs<ExtArgs>
            result: $Utils.Optional<Historial_cargoGroupByOutputType>[]
          }
          count: {
            args: Prisma.historial_cargoCountArgs<ExtArgs>
            result: $Utils.Optional<Historial_cargoCountAggregateOutputType> | number
          }
        }
      }
      nomina: {
        payload: Prisma.$nominaPayload<ExtArgs>
        fields: Prisma.nominaFieldRefs
        operations: {
          findUnique: {
            args: Prisma.nominaFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$nominaPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.nominaFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$nominaPayload>
          }
          findFirst: {
            args: Prisma.nominaFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$nominaPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.nominaFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$nominaPayload>
          }
          findMany: {
            args: Prisma.nominaFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$nominaPayload>[]
          }
          create: {
            args: Prisma.nominaCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$nominaPayload>
          }
          createMany: {
            args: Prisma.nominaCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.nominaCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$nominaPayload>[]
          }
          delete: {
            args: Prisma.nominaDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$nominaPayload>
          }
          update: {
            args: Prisma.nominaUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$nominaPayload>
          }
          deleteMany: {
            args: Prisma.nominaDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.nominaUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.nominaUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$nominaPayload>[]
          }
          upsert: {
            args: Prisma.nominaUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$nominaPayload>
          }
          aggregate: {
            args: Prisma.NominaAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateNomina>
          }
          groupBy: {
            args: Prisma.nominaGroupByArgs<ExtArgs>
            result: $Utils.Optional<NominaGroupByOutputType>[]
          }
          count: {
            args: Prisma.nominaCountArgs<ExtArgs>
            result: $Utils.Optional<NominaCountAggregateOutputType> | number
          }
        }
      }
      registro_acceso: {
        payload: Prisma.$registro_accesoPayload<ExtArgs>
        fields: Prisma.registro_accesoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.registro_accesoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$registro_accesoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.registro_accesoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$registro_accesoPayload>
          }
          findFirst: {
            args: Prisma.registro_accesoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$registro_accesoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.registro_accesoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$registro_accesoPayload>
          }
          findMany: {
            args: Prisma.registro_accesoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$registro_accesoPayload>[]
          }
          create: {
            args: Prisma.registro_accesoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$registro_accesoPayload>
          }
          createMany: {
            args: Prisma.registro_accesoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.registro_accesoCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$registro_accesoPayload>[]
          }
          delete: {
            args: Prisma.registro_accesoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$registro_accesoPayload>
          }
          update: {
            args: Prisma.registro_accesoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$registro_accesoPayload>
          }
          deleteMany: {
            args: Prisma.registro_accesoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.registro_accesoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.registro_accesoUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$registro_accesoPayload>[]
          }
          upsert: {
            args: Prisma.registro_accesoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$registro_accesoPayload>
          }
          aggregate: {
            args: Prisma.Registro_accesoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateRegistro_acceso>
          }
          groupBy: {
            args: Prisma.registro_accesoGroupByArgs<ExtArgs>
            result: $Utils.Optional<Registro_accesoGroupByOutputType>[]
          }
          count: {
            args: Prisma.registro_accesoCountArgs<ExtArgs>
            result: $Utils.Optional<Registro_accesoCountAggregateOutputType> | number
          }
        }
      }
      rol_usuario: {
        payload: Prisma.$rol_usuarioPayload<ExtArgs>
        fields: Prisma.rol_usuarioFieldRefs
        operations: {
          findUnique: {
            args: Prisma.rol_usuarioFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$rol_usuarioPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.rol_usuarioFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$rol_usuarioPayload>
          }
          findFirst: {
            args: Prisma.rol_usuarioFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$rol_usuarioPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.rol_usuarioFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$rol_usuarioPayload>
          }
          findMany: {
            args: Prisma.rol_usuarioFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$rol_usuarioPayload>[]
          }
          create: {
            args: Prisma.rol_usuarioCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$rol_usuarioPayload>
          }
          createMany: {
            args: Prisma.rol_usuarioCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.rol_usuarioCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$rol_usuarioPayload>[]
          }
          delete: {
            args: Prisma.rol_usuarioDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$rol_usuarioPayload>
          }
          update: {
            args: Prisma.rol_usuarioUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$rol_usuarioPayload>
          }
          deleteMany: {
            args: Prisma.rol_usuarioDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.rol_usuarioUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.rol_usuarioUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$rol_usuarioPayload>[]
          }
          upsert: {
            args: Prisma.rol_usuarioUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$rol_usuarioPayload>
          }
          aggregate: {
            args: Prisma.Rol_usuarioAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateRol_usuario>
          }
          groupBy: {
            args: Prisma.rol_usuarioGroupByArgs<ExtArgs>
            result: $Utils.Optional<Rol_usuarioGroupByOutputType>[]
          }
          count: {
            args: Prisma.rol_usuarioCountArgs<ExtArgs>
            result: $Utils.Optional<Rol_usuarioCountAggregateOutputType> | number
          }
        }
      }
      tipo_concepto_salarial: {
        payload: Prisma.$tipo_concepto_salarialPayload<ExtArgs>
        fields: Prisma.tipo_concepto_salarialFieldRefs
        operations: {
          findUnique: {
            args: Prisma.tipo_concepto_salarialFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tipo_concepto_salarialPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.tipo_concepto_salarialFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tipo_concepto_salarialPayload>
          }
          findFirst: {
            args: Prisma.tipo_concepto_salarialFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tipo_concepto_salarialPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.tipo_concepto_salarialFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tipo_concepto_salarialPayload>
          }
          findMany: {
            args: Prisma.tipo_concepto_salarialFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tipo_concepto_salarialPayload>[]
          }
          create: {
            args: Prisma.tipo_concepto_salarialCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tipo_concepto_salarialPayload>
          }
          createMany: {
            args: Prisma.tipo_concepto_salarialCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.tipo_concepto_salarialCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tipo_concepto_salarialPayload>[]
          }
          delete: {
            args: Prisma.tipo_concepto_salarialDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tipo_concepto_salarialPayload>
          }
          update: {
            args: Prisma.tipo_concepto_salarialUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tipo_concepto_salarialPayload>
          }
          deleteMany: {
            args: Prisma.tipo_concepto_salarialDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.tipo_concepto_salarialUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.tipo_concepto_salarialUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tipo_concepto_salarialPayload>[]
          }
          upsert: {
            args: Prisma.tipo_concepto_salarialUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tipo_concepto_salarialPayload>
          }
          aggregate: {
            args: Prisma.Tipo_concepto_salarialAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateTipo_concepto_salarial>
          }
          groupBy: {
            args: Prisma.tipo_concepto_salarialGroupByArgs<ExtArgs>
            result: $Utils.Optional<Tipo_concepto_salarialGroupByOutputType>[]
          }
          count: {
            args: Prisma.tipo_concepto_salarialCountArgs<ExtArgs>
            result: $Utils.Optional<Tipo_concepto_salarialCountAggregateOutputType> | number
          }
        }
      }
      usuario: {
        payload: Prisma.$usuarioPayload<ExtArgs>
        fields: Prisma.usuarioFieldRefs
        operations: {
          findUnique: {
            args: Prisma.usuarioFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usuarioPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.usuarioFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usuarioPayload>
          }
          findFirst: {
            args: Prisma.usuarioFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usuarioPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.usuarioFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usuarioPayload>
          }
          findMany: {
            args: Prisma.usuarioFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usuarioPayload>[]
          }
          create: {
            args: Prisma.usuarioCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usuarioPayload>
          }
          createMany: {
            args: Prisma.usuarioCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.usuarioCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usuarioPayload>[]
          }
          delete: {
            args: Prisma.usuarioDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usuarioPayload>
          }
          update: {
            args: Prisma.usuarioUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usuarioPayload>
          }
          deleteMany: {
            args: Prisma.usuarioDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.usuarioUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.usuarioUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usuarioPayload>[]
          }
          upsert: {
            args: Prisma.usuarioUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usuarioPayload>
          }
          aggregate: {
            args: Prisma.UsuarioAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUsuario>
          }
          groupBy: {
            args: Prisma.usuarioGroupByArgs<ExtArgs>
            result: $Utils.Optional<UsuarioGroupByOutputType>[]
          }
          count: {
            args: Prisma.usuarioCountArgs<ExtArgs>
            result: $Utils.Optional<UsuarioCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<"define", Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Shorthand for `emit: 'stdout'`
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events only
     * log: [
     *   { emit: 'event', level: 'query' },
     *   { emit: 'event', level: 'info' },
     *   { emit: 'event', level: 'warn' }
     *   { emit: 'event', level: 'error' }
     * ]
     * 
     * / Emit as events and log to stdout
     * og: [
     *  { emit: 'stdout', level: 'query' },
     *  { emit: 'stdout', level: 'info' },
     *  { emit: 'stdout', level: 'warn' }
     *  { emit: 'stdout', level: 'error' }
     * 
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
    /**
     * The default values for transactionOptions
     * maxWait ?= 2000
     * timeout ?= 5000
     */
    transactionOptions?: {
      maxWait?: number
      timeout?: number
      isolationLevel?: Prisma.TransactionIsolationLevel
    }
    /**
     * Instance of a Driver Adapter, e.g., like one provided by `@prisma/adapter-planetscale`
     */
    adapter?: runtime.SqlDriverAdapterFactory | null
    /**
     * Global configuration for omitting model fields by default.
     * 
     * @example
     * ```
     * const prisma = new PrismaClient({
     *   omit: {
     *     user: {
     *       password: true
     *     }
     *   }
     * })
     * ```
     */
    omit?: Prisma.GlobalOmitConfig
  }
  export type GlobalOmitConfig = {
    cargo?: cargoOmit
    categoria_salarial?: categoria_salarialOmit
    concepto_empleado?: concepto_empleadoOmit
    concepto_salarial?: concepto_salarialOmit
    departamento?: departamentoOmit
    detalle_nomina?: detalle_nominaOmit
    detalle_nomina_concepto?: detalle_nomina_conceptoOmit
    empleado?: empleadoOmit
    estado_civil?: estado_civilOmit
    hijo?: hijoOmit
    historial_cargo?: historial_cargoOmit
    nomina?: nominaOmit
    registro_acceso?: registro_accesoOmit
    rol_usuario?: rol_usuarioOmit
    tipo_concepto_salarial?: tipo_concepto_salarialOmit
    usuario?: usuarioOmit
  }

  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type CheckIsLogLevel<T> = T extends LogLevel ? T : never;

  export type GetLogType<T> = CheckIsLogLevel<
    T extends LogDefinition ? T['level'] : T
  >;

  export type GetEvents<T extends any[]> = T extends Array<LogLevel | LogDefinition>
    ? GetLogType<T[number]>
    : never;

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'createManyAndReturn'
    | 'update'
    | 'updateMany'
    | 'updateManyAndReturn'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type CargoCountOutputType
   */

  export type CargoCountOutputType = {
    historial_cargo: number
  }

  export type CargoCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    historial_cargo?: boolean | CargoCountOutputTypeCountHistorial_cargoArgs
  }

  // Custom InputTypes
  /**
   * CargoCountOutputType without action
   */
  export type CargoCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CargoCountOutputType
     */
    select?: CargoCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * CargoCountOutputType without action
   */
  export type CargoCountOutputTypeCountHistorial_cargoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: historial_cargoWhereInput
  }


  /**
   * Count Type Categoria_salarialCountOutputType
   */

  export type Categoria_salarialCountOutputType = {
    cargo: number
  }

  export type Categoria_salarialCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cargo?: boolean | Categoria_salarialCountOutputTypeCountCargoArgs
  }

  // Custom InputTypes
  /**
   * Categoria_salarialCountOutputType without action
   */
  export type Categoria_salarialCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Categoria_salarialCountOutputType
     */
    select?: Categoria_salarialCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * Categoria_salarialCountOutputType without action
   */
  export type Categoria_salarialCountOutputTypeCountCargoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: cargoWhereInput
  }


  /**
   * Count Type Concepto_salarialCountOutputType
   */

  export type Concepto_salarialCountOutputType = {
    concepto_empleado: number
    detalle_nomina_concepto: number
  }

  export type Concepto_salarialCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    concepto_empleado?: boolean | Concepto_salarialCountOutputTypeCountConcepto_empleadoArgs
    detalle_nomina_concepto?: boolean | Concepto_salarialCountOutputTypeCountDetalle_nomina_conceptoArgs
  }

  // Custom InputTypes
  /**
   * Concepto_salarialCountOutputType without action
   */
  export type Concepto_salarialCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Concepto_salarialCountOutputType
     */
    select?: Concepto_salarialCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * Concepto_salarialCountOutputType without action
   */
  export type Concepto_salarialCountOutputTypeCountConcepto_empleadoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: concepto_empleadoWhereInput
  }

  /**
   * Concepto_salarialCountOutputType without action
   */
  export type Concepto_salarialCountOutputTypeCountDetalle_nomina_conceptoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: detalle_nomina_conceptoWhereInput
  }


  /**
   * Count Type DepartamentoCountOutputType
   */

  export type DepartamentoCountOutputType = {
    cargo: number
  }

  export type DepartamentoCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cargo?: boolean | DepartamentoCountOutputTypeCountCargoArgs
  }

  // Custom InputTypes
  /**
   * DepartamentoCountOutputType without action
   */
  export type DepartamentoCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DepartamentoCountOutputType
     */
    select?: DepartamentoCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * DepartamentoCountOutputType without action
   */
  export type DepartamentoCountOutputTypeCountCargoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: cargoWhereInput
  }


  /**
   * Count Type Detalle_nominaCountOutputType
   */

  export type Detalle_nominaCountOutputType = {
    detalle_nomina_concepto: number
  }

  export type Detalle_nominaCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    detalle_nomina_concepto?: boolean | Detalle_nominaCountOutputTypeCountDetalle_nomina_conceptoArgs
  }

  // Custom InputTypes
  /**
   * Detalle_nominaCountOutputType without action
   */
  export type Detalle_nominaCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Detalle_nominaCountOutputType
     */
    select?: Detalle_nominaCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * Detalle_nominaCountOutputType without action
   */
  export type Detalle_nominaCountOutputTypeCountDetalle_nomina_conceptoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: detalle_nomina_conceptoWhereInput
  }


  /**
   * Count Type EmpleadoCountOutputType
   */

  export type EmpleadoCountOutputType = {
    concepto_empleado: number
    detalle_nomina: number
    hijo: number
    historial_cargo: number
  }

  export type EmpleadoCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    concepto_empleado?: boolean | EmpleadoCountOutputTypeCountConcepto_empleadoArgs
    detalle_nomina?: boolean | EmpleadoCountOutputTypeCountDetalle_nominaArgs
    hijo?: boolean | EmpleadoCountOutputTypeCountHijoArgs
    historial_cargo?: boolean | EmpleadoCountOutputTypeCountHistorial_cargoArgs
  }

  // Custom InputTypes
  /**
   * EmpleadoCountOutputType without action
   */
  export type EmpleadoCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EmpleadoCountOutputType
     */
    select?: EmpleadoCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * EmpleadoCountOutputType without action
   */
  export type EmpleadoCountOutputTypeCountConcepto_empleadoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: concepto_empleadoWhereInput
  }

  /**
   * EmpleadoCountOutputType without action
   */
  export type EmpleadoCountOutputTypeCountDetalle_nominaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: detalle_nominaWhereInput
  }

  /**
   * EmpleadoCountOutputType without action
   */
  export type EmpleadoCountOutputTypeCountHijoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: hijoWhereInput
  }

  /**
   * EmpleadoCountOutputType without action
   */
  export type EmpleadoCountOutputTypeCountHistorial_cargoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: historial_cargoWhereInput
  }


  /**
   * Count Type Estado_civilCountOutputType
   */

  export type Estado_civilCountOutputType = {
    empleado: number
  }

  export type Estado_civilCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    empleado?: boolean | Estado_civilCountOutputTypeCountEmpleadoArgs
  }

  // Custom InputTypes
  /**
   * Estado_civilCountOutputType without action
   */
  export type Estado_civilCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Estado_civilCountOutputType
     */
    select?: Estado_civilCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * Estado_civilCountOutputType without action
   */
  export type Estado_civilCountOutputTypeCountEmpleadoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: empleadoWhereInput
  }


  /**
   * Count Type NominaCountOutputType
   */

  export type NominaCountOutputType = {
    detalle_nomina: number
  }

  export type NominaCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    detalle_nomina?: boolean | NominaCountOutputTypeCountDetalle_nominaArgs
  }

  // Custom InputTypes
  /**
   * NominaCountOutputType without action
   */
  export type NominaCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the NominaCountOutputType
     */
    select?: NominaCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * NominaCountOutputType without action
   */
  export type NominaCountOutputTypeCountDetalle_nominaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: detalle_nominaWhereInput
  }


  /**
   * Count Type Rol_usuarioCountOutputType
   */

  export type Rol_usuarioCountOutputType = {
    usuario: number
  }

  export type Rol_usuarioCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    usuario?: boolean | Rol_usuarioCountOutputTypeCountUsuarioArgs
  }

  // Custom InputTypes
  /**
   * Rol_usuarioCountOutputType without action
   */
  export type Rol_usuarioCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Rol_usuarioCountOutputType
     */
    select?: Rol_usuarioCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * Rol_usuarioCountOutputType without action
   */
  export type Rol_usuarioCountOutputTypeCountUsuarioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: usuarioWhereInput
  }


  /**
   * Count Type Tipo_concepto_salarialCountOutputType
   */

  export type Tipo_concepto_salarialCountOutputType = {
    concepto_salarial: number
  }

  export type Tipo_concepto_salarialCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    concepto_salarial?: boolean | Tipo_concepto_salarialCountOutputTypeCountConcepto_salarialArgs
  }

  // Custom InputTypes
  /**
   * Tipo_concepto_salarialCountOutputType without action
   */
  export type Tipo_concepto_salarialCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tipo_concepto_salarialCountOutputType
     */
    select?: Tipo_concepto_salarialCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * Tipo_concepto_salarialCountOutputType without action
   */
  export type Tipo_concepto_salarialCountOutputTypeCountConcepto_salarialArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: concepto_salarialWhereInput
  }


  /**
   * Count Type UsuarioCountOutputType
   */

  export type UsuarioCountOutputType = {
    detalle_nomina: number
    registro_acceso: number
  }

  export type UsuarioCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    detalle_nomina?: boolean | UsuarioCountOutputTypeCountDetalle_nominaArgs
    registro_acceso?: boolean | UsuarioCountOutputTypeCountRegistro_accesoArgs
  }

  // Custom InputTypes
  /**
   * UsuarioCountOutputType without action
   */
  export type UsuarioCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UsuarioCountOutputType
     */
    select?: UsuarioCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * UsuarioCountOutputType without action
   */
  export type UsuarioCountOutputTypeCountDetalle_nominaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: detalle_nominaWhereInput
  }

  /**
   * UsuarioCountOutputType without action
   */
  export type UsuarioCountOutputTypeCountRegistro_accesoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: registro_accesoWhereInput
  }


  /**
   * Models
   */

  /**
   * Model cargo
   */

  export type AggregateCargo = {
    _count: CargoCountAggregateOutputType | null
    _avg: CargoAvgAggregateOutputType | null
    _sum: CargoSumAggregateOutputType | null
    _min: CargoMinAggregateOutputType | null
    _max: CargoMaxAggregateOutputType | null
  }

  export type CargoAvgAggregateOutputType = {
    id_cargo: number | null
    id_departamento: number | null
    id_categoria_salarial: number | null
  }

  export type CargoSumAggregateOutputType = {
    id_cargo: number | null
    id_departamento: number | null
    id_categoria_salarial: number | null
  }

  export type CargoMinAggregateOutputType = {
    id_cargo: number | null
    nombre_cargo: string | null
    departamento_nombre: string | null
    id_departamento: number | null
    Activo: boolean | null
    id_categoria_salarial: number | null
  }

  export type CargoMaxAggregateOutputType = {
    id_cargo: number | null
    nombre_cargo: string | null
    departamento_nombre: string | null
    id_departamento: number | null
    Activo: boolean | null
    id_categoria_salarial: number | null
  }

  export type CargoCountAggregateOutputType = {
    id_cargo: number
    nombre_cargo: number
    departamento_nombre: number
    id_departamento: number
    Activo: number
    id_categoria_salarial: number
    _all: number
  }


  export type CargoAvgAggregateInputType = {
    id_cargo?: true
    id_departamento?: true
    id_categoria_salarial?: true
  }

  export type CargoSumAggregateInputType = {
    id_cargo?: true
    id_departamento?: true
    id_categoria_salarial?: true
  }

  export type CargoMinAggregateInputType = {
    id_cargo?: true
    nombre_cargo?: true
    departamento_nombre?: true
    id_departamento?: true
    Activo?: true
    id_categoria_salarial?: true
  }

  export type CargoMaxAggregateInputType = {
    id_cargo?: true
    nombre_cargo?: true
    departamento_nombre?: true
    id_departamento?: true
    Activo?: true
    id_categoria_salarial?: true
  }

  export type CargoCountAggregateInputType = {
    id_cargo?: true
    nombre_cargo?: true
    departamento_nombre?: true
    id_departamento?: true
    Activo?: true
    id_categoria_salarial?: true
    _all?: true
  }

  export type CargoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which cargo to aggregate.
     */
    where?: cargoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of cargos to fetch.
     */
    orderBy?: cargoOrderByWithRelationInput | cargoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: cargoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` cargos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` cargos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned cargos
    **/
    _count?: true | CargoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: CargoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: CargoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CargoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CargoMaxAggregateInputType
  }

  export type GetCargoAggregateType<T extends CargoAggregateArgs> = {
        [P in keyof T & keyof AggregateCargo]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCargo[P]>
      : GetScalarType<T[P], AggregateCargo[P]>
  }




  export type cargoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: cargoWhereInput
    orderBy?: cargoOrderByWithAggregationInput | cargoOrderByWithAggregationInput[]
    by: CargoScalarFieldEnum[] | CargoScalarFieldEnum
    having?: cargoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CargoCountAggregateInputType | true
    _avg?: CargoAvgAggregateInputType
    _sum?: CargoSumAggregateInputType
    _min?: CargoMinAggregateInputType
    _max?: CargoMaxAggregateInputType
  }

  export type CargoGroupByOutputType = {
    id_cargo: number
    nombre_cargo: string
    departamento_nombre: string
    id_departamento: number
    Activo: boolean
    id_categoria_salarial: number
    _count: CargoCountAggregateOutputType | null
    _avg: CargoAvgAggregateOutputType | null
    _sum: CargoSumAggregateOutputType | null
    _min: CargoMinAggregateOutputType | null
    _max: CargoMaxAggregateOutputType | null
  }

  type GetCargoGroupByPayload<T extends cargoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CargoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CargoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CargoGroupByOutputType[P]>
            : GetScalarType<T[P], CargoGroupByOutputType[P]>
        }
      >
    >


  export type cargoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_cargo?: boolean
    nombre_cargo?: boolean
    departamento_nombre?: boolean
    id_departamento?: boolean
    Activo?: boolean
    id_categoria_salarial?: boolean
    categoria_salarial?: boolean | categoria_salarialDefaultArgs<ExtArgs>
    departamento_ref?: boolean | departamentoDefaultArgs<ExtArgs>
    historial_cargo?: boolean | cargo$historial_cargoArgs<ExtArgs>
    _count?: boolean | CargoCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["cargo"]>

  export type cargoSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_cargo?: boolean
    nombre_cargo?: boolean
    departamento_nombre?: boolean
    id_departamento?: boolean
    Activo?: boolean
    id_categoria_salarial?: boolean
    categoria_salarial?: boolean | categoria_salarialDefaultArgs<ExtArgs>
    departamento_ref?: boolean | departamentoDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["cargo"]>

  export type cargoSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_cargo?: boolean
    nombre_cargo?: boolean
    departamento_nombre?: boolean
    id_departamento?: boolean
    Activo?: boolean
    id_categoria_salarial?: boolean
    categoria_salarial?: boolean | categoria_salarialDefaultArgs<ExtArgs>
    departamento_ref?: boolean | departamentoDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["cargo"]>

  export type cargoSelectScalar = {
    id_cargo?: boolean
    nombre_cargo?: boolean
    departamento_nombre?: boolean
    id_departamento?: boolean
    Activo?: boolean
    id_categoria_salarial?: boolean
  }

  export type cargoOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id_cargo" | "nombre_cargo" | "departamento_nombre" | "id_departamento" | "Activo" | "id_categoria_salarial", ExtArgs["result"]["cargo"]>
  export type cargoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    categoria_salarial?: boolean | categoria_salarialDefaultArgs<ExtArgs>
    departamento_ref?: boolean | departamentoDefaultArgs<ExtArgs>
    historial_cargo?: boolean | cargo$historial_cargoArgs<ExtArgs>
    _count?: boolean | CargoCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type cargoIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    categoria_salarial?: boolean | categoria_salarialDefaultArgs<ExtArgs>
    departamento_ref?: boolean | departamentoDefaultArgs<ExtArgs>
  }
  export type cargoIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    categoria_salarial?: boolean | categoria_salarialDefaultArgs<ExtArgs>
    departamento_ref?: boolean | departamentoDefaultArgs<ExtArgs>
  }

  export type $cargoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "cargo"
    objects: {
      categoria_salarial: Prisma.$categoria_salarialPayload<ExtArgs>
      departamento_ref: Prisma.$departamentoPayload<ExtArgs>
      historial_cargo: Prisma.$historial_cargoPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id_cargo: number
      nombre_cargo: string
      departamento_nombre: string
      id_departamento: number
      Activo: boolean
      id_categoria_salarial: number
    }, ExtArgs["result"]["cargo"]>
    composites: {}
  }

  type cargoGetPayload<S extends boolean | null | undefined | cargoDefaultArgs> = $Result.GetResult<Prisma.$cargoPayload, S>

  type cargoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<cargoFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: CargoCountAggregateInputType | true
    }

  export interface cargoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['cargo'], meta: { name: 'cargo' } }
    /**
     * Find zero or one Cargo that matches the filter.
     * @param {cargoFindUniqueArgs} args - Arguments to find a Cargo
     * @example
     * // Get one Cargo
     * const cargo = await prisma.cargo.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends cargoFindUniqueArgs>(args: SelectSubset<T, cargoFindUniqueArgs<ExtArgs>>): Prisma__cargoClient<$Result.GetResult<Prisma.$cargoPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Cargo that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {cargoFindUniqueOrThrowArgs} args - Arguments to find a Cargo
     * @example
     * // Get one Cargo
     * const cargo = await prisma.cargo.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends cargoFindUniqueOrThrowArgs>(args: SelectSubset<T, cargoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__cargoClient<$Result.GetResult<Prisma.$cargoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Cargo that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {cargoFindFirstArgs} args - Arguments to find a Cargo
     * @example
     * // Get one Cargo
     * const cargo = await prisma.cargo.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends cargoFindFirstArgs>(args?: SelectSubset<T, cargoFindFirstArgs<ExtArgs>>): Prisma__cargoClient<$Result.GetResult<Prisma.$cargoPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Cargo that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {cargoFindFirstOrThrowArgs} args - Arguments to find a Cargo
     * @example
     * // Get one Cargo
     * const cargo = await prisma.cargo.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends cargoFindFirstOrThrowArgs>(args?: SelectSubset<T, cargoFindFirstOrThrowArgs<ExtArgs>>): Prisma__cargoClient<$Result.GetResult<Prisma.$cargoPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Cargos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {cargoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Cargos
     * const cargos = await prisma.cargo.findMany()
     * 
     * // Get first 10 Cargos
     * const cargos = await prisma.cargo.findMany({ take: 10 })
     * 
     * // Only select the `id_cargo`
     * const cargoWithId_cargoOnly = await prisma.cargo.findMany({ select: { id_cargo: true } })
     * 
     */
    findMany<T extends cargoFindManyArgs>(args?: SelectSubset<T, cargoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$cargoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Cargo.
     * @param {cargoCreateArgs} args - Arguments to create a Cargo.
     * @example
     * // Create one Cargo
     * const Cargo = await prisma.cargo.create({
     *   data: {
     *     // ... data to create a Cargo
     *   }
     * })
     * 
     */
    create<T extends cargoCreateArgs>(args: SelectSubset<T, cargoCreateArgs<ExtArgs>>): Prisma__cargoClient<$Result.GetResult<Prisma.$cargoPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Cargos.
     * @param {cargoCreateManyArgs} args - Arguments to create many Cargos.
     * @example
     * // Create many Cargos
     * const cargo = await prisma.cargo.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends cargoCreateManyArgs>(args?: SelectSubset<T, cargoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Cargos and returns the data saved in the database.
     * @param {cargoCreateManyAndReturnArgs} args - Arguments to create many Cargos.
     * @example
     * // Create many Cargos
     * const cargo = await prisma.cargo.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Cargos and only return the `id_cargo`
     * const cargoWithId_cargoOnly = await prisma.cargo.createManyAndReturn({
     *   select: { id_cargo: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends cargoCreateManyAndReturnArgs>(args?: SelectSubset<T, cargoCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$cargoPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Cargo.
     * @param {cargoDeleteArgs} args - Arguments to delete one Cargo.
     * @example
     * // Delete one Cargo
     * const Cargo = await prisma.cargo.delete({
     *   where: {
     *     // ... filter to delete one Cargo
     *   }
     * })
     * 
     */
    delete<T extends cargoDeleteArgs>(args: SelectSubset<T, cargoDeleteArgs<ExtArgs>>): Prisma__cargoClient<$Result.GetResult<Prisma.$cargoPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Cargo.
     * @param {cargoUpdateArgs} args - Arguments to update one Cargo.
     * @example
     * // Update one Cargo
     * const cargo = await prisma.cargo.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends cargoUpdateArgs>(args: SelectSubset<T, cargoUpdateArgs<ExtArgs>>): Prisma__cargoClient<$Result.GetResult<Prisma.$cargoPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Cargos.
     * @param {cargoDeleteManyArgs} args - Arguments to filter Cargos to delete.
     * @example
     * // Delete a few Cargos
     * const { count } = await prisma.cargo.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends cargoDeleteManyArgs>(args?: SelectSubset<T, cargoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Cargos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {cargoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Cargos
     * const cargo = await prisma.cargo.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends cargoUpdateManyArgs>(args: SelectSubset<T, cargoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Cargos and returns the data updated in the database.
     * @param {cargoUpdateManyAndReturnArgs} args - Arguments to update many Cargos.
     * @example
     * // Update many Cargos
     * const cargo = await prisma.cargo.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Cargos and only return the `id_cargo`
     * const cargoWithId_cargoOnly = await prisma.cargo.updateManyAndReturn({
     *   select: { id_cargo: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends cargoUpdateManyAndReturnArgs>(args: SelectSubset<T, cargoUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$cargoPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Cargo.
     * @param {cargoUpsertArgs} args - Arguments to update or create a Cargo.
     * @example
     * // Update or create a Cargo
     * const cargo = await prisma.cargo.upsert({
     *   create: {
     *     // ... data to create a Cargo
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Cargo we want to update
     *   }
     * })
     */
    upsert<T extends cargoUpsertArgs>(args: SelectSubset<T, cargoUpsertArgs<ExtArgs>>): Prisma__cargoClient<$Result.GetResult<Prisma.$cargoPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Cargos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {cargoCountArgs} args - Arguments to filter Cargos to count.
     * @example
     * // Count the number of Cargos
     * const count = await prisma.cargo.count({
     *   where: {
     *     // ... the filter for the Cargos we want to count
     *   }
     * })
    **/
    count<T extends cargoCountArgs>(
      args?: Subset<T, cargoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CargoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Cargo.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CargoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CargoAggregateArgs>(args: Subset<T, CargoAggregateArgs>): Prisma.PrismaPromise<GetCargoAggregateType<T>>

    /**
     * Group by Cargo.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {cargoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends cargoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: cargoGroupByArgs['orderBy'] }
        : { orderBy?: cargoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, cargoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCargoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the cargo model
   */
  readonly fields: cargoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for cargo.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__cargoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    categoria_salarial<T extends categoria_salarialDefaultArgs<ExtArgs> = {}>(args?: Subset<T, categoria_salarialDefaultArgs<ExtArgs>>): Prisma__categoria_salarialClient<$Result.GetResult<Prisma.$categoria_salarialPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    departamento_ref<T extends departamentoDefaultArgs<ExtArgs> = {}>(args?: Subset<T, departamentoDefaultArgs<ExtArgs>>): Prisma__departamentoClient<$Result.GetResult<Prisma.$departamentoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    historial_cargo<T extends cargo$historial_cargoArgs<ExtArgs> = {}>(args?: Subset<T, cargo$historial_cargoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$historial_cargoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the cargo model
   */
  interface cargoFieldRefs {
    readonly id_cargo: FieldRef<"cargo", 'Int'>
    readonly nombre_cargo: FieldRef<"cargo", 'String'>
    readonly departamento_nombre: FieldRef<"cargo", 'String'>
    readonly id_departamento: FieldRef<"cargo", 'Int'>
    readonly Activo: FieldRef<"cargo", 'Boolean'>
    readonly id_categoria_salarial: FieldRef<"cargo", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * cargo findUnique
   */
  export type cargoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cargo
     */
    select?: cargoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cargo
     */
    omit?: cargoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cargoInclude<ExtArgs> | null
    /**
     * Filter, which cargo to fetch.
     */
    where: cargoWhereUniqueInput
  }

  /**
   * cargo findUniqueOrThrow
   */
  export type cargoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cargo
     */
    select?: cargoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cargo
     */
    omit?: cargoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cargoInclude<ExtArgs> | null
    /**
     * Filter, which cargo to fetch.
     */
    where: cargoWhereUniqueInput
  }

  /**
   * cargo findFirst
   */
  export type cargoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cargo
     */
    select?: cargoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cargo
     */
    omit?: cargoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cargoInclude<ExtArgs> | null
    /**
     * Filter, which cargo to fetch.
     */
    where?: cargoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of cargos to fetch.
     */
    orderBy?: cargoOrderByWithRelationInput | cargoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for cargos.
     */
    cursor?: cargoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` cargos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` cargos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of cargos.
     */
    distinct?: CargoScalarFieldEnum | CargoScalarFieldEnum[]
  }

  /**
   * cargo findFirstOrThrow
   */
  export type cargoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cargo
     */
    select?: cargoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cargo
     */
    omit?: cargoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cargoInclude<ExtArgs> | null
    /**
     * Filter, which cargo to fetch.
     */
    where?: cargoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of cargos to fetch.
     */
    orderBy?: cargoOrderByWithRelationInput | cargoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for cargos.
     */
    cursor?: cargoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` cargos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` cargos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of cargos.
     */
    distinct?: CargoScalarFieldEnum | CargoScalarFieldEnum[]
  }

  /**
   * cargo findMany
   */
  export type cargoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cargo
     */
    select?: cargoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cargo
     */
    omit?: cargoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cargoInclude<ExtArgs> | null
    /**
     * Filter, which cargos to fetch.
     */
    where?: cargoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of cargos to fetch.
     */
    orderBy?: cargoOrderByWithRelationInput | cargoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing cargos.
     */
    cursor?: cargoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` cargos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` cargos.
     */
    skip?: number
    distinct?: CargoScalarFieldEnum | CargoScalarFieldEnum[]
  }

  /**
   * cargo create
   */
  export type cargoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cargo
     */
    select?: cargoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cargo
     */
    omit?: cargoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cargoInclude<ExtArgs> | null
    /**
     * The data needed to create a cargo.
     */
    data: XOR<cargoCreateInput, cargoUncheckedCreateInput>
  }

  /**
   * cargo createMany
   */
  export type cargoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many cargos.
     */
    data: cargoCreateManyInput | cargoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * cargo createManyAndReturn
   */
  export type cargoCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cargo
     */
    select?: cargoSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the cargo
     */
    omit?: cargoOmit<ExtArgs> | null
    /**
     * The data used to create many cargos.
     */
    data: cargoCreateManyInput | cargoCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cargoIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * cargo update
   */
  export type cargoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cargo
     */
    select?: cargoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cargo
     */
    omit?: cargoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cargoInclude<ExtArgs> | null
    /**
     * The data needed to update a cargo.
     */
    data: XOR<cargoUpdateInput, cargoUncheckedUpdateInput>
    /**
     * Choose, which cargo to update.
     */
    where: cargoWhereUniqueInput
  }

  /**
   * cargo updateMany
   */
  export type cargoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update cargos.
     */
    data: XOR<cargoUpdateManyMutationInput, cargoUncheckedUpdateManyInput>
    /**
     * Filter which cargos to update
     */
    where?: cargoWhereInput
    /**
     * Limit how many cargos to update.
     */
    limit?: number
  }

  /**
   * cargo updateManyAndReturn
   */
  export type cargoUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cargo
     */
    select?: cargoSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the cargo
     */
    omit?: cargoOmit<ExtArgs> | null
    /**
     * The data used to update cargos.
     */
    data: XOR<cargoUpdateManyMutationInput, cargoUncheckedUpdateManyInput>
    /**
     * Filter which cargos to update
     */
    where?: cargoWhereInput
    /**
     * Limit how many cargos to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cargoIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * cargo upsert
   */
  export type cargoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cargo
     */
    select?: cargoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cargo
     */
    omit?: cargoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cargoInclude<ExtArgs> | null
    /**
     * The filter to search for the cargo to update in case it exists.
     */
    where: cargoWhereUniqueInput
    /**
     * In case the cargo found by the `where` argument doesn't exist, create a new cargo with this data.
     */
    create: XOR<cargoCreateInput, cargoUncheckedCreateInput>
    /**
     * In case the cargo was found with the provided `where` argument, update it with this data.
     */
    update: XOR<cargoUpdateInput, cargoUncheckedUpdateInput>
  }

  /**
   * cargo delete
   */
  export type cargoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cargo
     */
    select?: cargoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cargo
     */
    omit?: cargoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cargoInclude<ExtArgs> | null
    /**
     * Filter which cargo to delete.
     */
    where: cargoWhereUniqueInput
  }

  /**
   * cargo deleteMany
   */
  export type cargoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which cargos to delete
     */
    where?: cargoWhereInput
    /**
     * Limit how many cargos to delete.
     */
    limit?: number
  }

  /**
   * cargo.historial_cargo
   */
  export type cargo$historial_cargoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the historial_cargo
     */
    select?: historial_cargoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the historial_cargo
     */
    omit?: historial_cargoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: historial_cargoInclude<ExtArgs> | null
    where?: historial_cargoWhereInput
    orderBy?: historial_cargoOrderByWithRelationInput | historial_cargoOrderByWithRelationInput[]
    cursor?: historial_cargoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Historial_cargoScalarFieldEnum | Historial_cargoScalarFieldEnum[]
  }

  /**
   * cargo without action
   */
  export type cargoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cargo
     */
    select?: cargoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cargo
     */
    omit?: cargoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cargoInclude<ExtArgs> | null
  }


  /**
   * Model categoria_salarial
   */

  export type AggregateCategoria_salarial = {
    _count: Categoria_salarialCountAggregateOutputType | null
    _avg: Categoria_salarialAvgAggregateOutputType | null
    _sum: Categoria_salarialSumAggregateOutputType | null
    _min: Categoria_salarialMinAggregateOutputType | null
    _max: Categoria_salarialMaxAggregateOutputType | null
  }

  export type Categoria_salarialAvgAggregateOutputType = {
    id_categoria_salarial: number | null
    monto: number | null
  }

  export type Categoria_salarialSumAggregateOutputType = {
    id_categoria_salarial: number | null
    monto: number | null
  }

  export type Categoria_salarialMinAggregateOutputType = {
    id_categoria_salarial: number | null
    monto: number | null
  }

  export type Categoria_salarialMaxAggregateOutputType = {
    id_categoria_salarial: number | null
    monto: number | null
  }

  export type Categoria_salarialCountAggregateOutputType = {
    id_categoria_salarial: number
    monto: number
    _all: number
  }


  export type Categoria_salarialAvgAggregateInputType = {
    id_categoria_salarial?: true
    monto?: true
  }

  export type Categoria_salarialSumAggregateInputType = {
    id_categoria_salarial?: true
    monto?: true
  }

  export type Categoria_salarialMinAggregateInputType = {
    id_categoria_salarial?: true
    monto?: true
  }

  export type Categoria_salarialMaxAggregateInputType = {
    id_categoria_salarial?: true
    monto?: true
  }

  export type Categoria_salarialCountAggregateInputType = {
    id_categoria_salarial?: true
    monto?: true
    _all?: true
  }

  export type Categoria_salarialAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which categoria_salarial to aggregate.
     */
    where?: categoria_salarialWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of categoria_salarials to fetch.
     */
    orderBy?: categoria_salarialOrderByWithRelationInput | categoria_salarialOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: categoria_salarialWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` categoria_salarials from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` categoria_salarials.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned categoria_salarials
    **/
    _count?: true | Categoria_salarialCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Categoria_salarialAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Categoria_salarialSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Categoria_salarialMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Categoria_salarialMaxAggregateInputType
  }

  export type GetCategoria_salarialAggregateType<T extends Categoria_salarialAggregateArgs> = {
        [P in keyof T & keyof AggregateCategoria_salarial]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCategoria_salarial[P]>
      : GetScalarType<T[P], AggregateCategoria_salarial[P]>
  }




  export type categoria_salarialGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: categoria_salarialWhereInput
    orderBy?: categoria_salarialOrderByWithAggregationInput | categoria_salarialOrderByWithAggregationInput[]
    by: Categoria_salarialScalarFieldEnum[] | Categoria_salarialScalarFieldEnum
    having?: categoria_salarialScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Categoria_salarialCountAggregateInputType | true
    _avg?: Categoria_salarialAvgAggregateInputType
    _sum?: Categoria_salarialSumAggregateInputType
    _min?: Categoria_salarialMinAggregateInputType
    _max?: Categoria_salarialMaxAggregateInputType
  }

  export type Categoria_salarialGroupByOutputType = {
    id_categoria_salarial: number
    monto: number
    _count: Categoria_salarialCountAggregateOutputType | null
    _avg: Categoria_salarialAvgAggregateOutputType | null
    _sum: Categoria_salarialSumAggregateOutputType | null
    _min: Categoria_salarialMinAggregateOutputType | null
    _max: Categoria_salarialMaxAggregateOutputType | null
  }

  type GetCategoria_salarialGroupByPayload<T extends categoria_salarialGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Categoria_salarialGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Categoria_salarialGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Categoria_salarialGroupByOutputType[P]>
            : GetScalarType<T[P], Categoria_salarialGroupByOutputType[P]>
        }
      >
    >


  export type categoria_salarialSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_categoria_salarial?: boolean
    monto?: boolean
    cargo?: boolean | categoria_salarial$cargoArgs<ExtArgs>
    _count?: boolean | Categoria_salarialCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["categoria_salarial"]>

  export type categoria_salarialSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_categoria_salarial?: boolean
    monto?: boolean
  }, ExtArgs["result"]["categoria_salarial"]>

  export type categoria_salarialSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_categoria_salarial?: boolean
    monto?: boolean
  }, ExtArgs["result"]["categoria_salarial"]>

  export type categoria_salarialSelectScalar = {
    id_categoria_salarial?: boolean
    monto?: boolean
  }

  export type categoria_salarialOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id_categoria_salarial" | "monto", ExtArgs["result"]["categoria_salarial"]>
  export type categoria_salarialInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cargo?: boolean | categoria_salarial$cargoArgs<ExtArgs>
    _count?: boolean | Categoria_salarialCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type categoria_salarialIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type categoria_salarialIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $categoria_salarialPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "categoria_salarial"
    objects: {
      cargo: Prisma.$cargoPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id_categoria_salarial: number
      monto: number
    }, ExtArgs["result"]["categoria_salarial"]>
    composites: {}
  }

  type categoria_salarialGetPayload<S extends boolean | null | undefined | categoria_salarialDefaultArgs> = $Result.GetResult<Prisma.$categoria_salarialPayload, S>

  type categoria_salarialCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<categoria_salarialFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Categoria_salarialCountAggregateInputType | true
    }

  export interface categoria_salarialDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['categoria_salarial'], meta: { name: 'categoria_salarial' } }
    /**
     * Find zero or one Categoria_salarial that matches the filter.
     * @param {categoria_salarialFindUniqueArgs} args - Arguments to find a Categoria_salarial
     * @example
     * // Get one Categoria_salarial
     * const categoria_salarial = await prisma.categoria_salarial.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends categoria_salarialFindUniqueArgs>(args: SelectSubset<T, categoria_salarialFindUniqueArgs<ExtArgs>>): Prisma__categoria_salarialClient<$Result.GetResult<Prisma.$categoria_salarialPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Categoria_salarial that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {categoria_salarialFindUniqueOrThrowArgs} args - Arguments to find a Categoria_salarial
     * @example
     * // Get one Categoria_salarial
     * const categoria_salarial = await prisma.categoria_salarial.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends categoria_salarialFindUniqueOrThrowArgs>(args: SelectSubset<T, categoria_salarialFindUniqueOrThrowArgs<ExtArgs>>): Prisma__categoria_salarialClient<$Result.GetResult<Prisma.$categoria_salarialPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Categoria_salarial that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {categoria_salarialFindFirstArgs} args - Arguments to find a Categoria_salarial
     * @example
     * // Get one Categoria_salarial
     * const categoria_salarial = await prisma.categoria_salarial.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends categoria_salarialFindFirstArgs>(args?: SelectSubset<T, categoria_salarialFindFirstArgs<ExtArgs>>): Prisma__categoria_salarialClient<$Result.GetResult<Prisma.$categoria_salarialPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Categoria_salarial that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {categoria_salarialFindFirstOrThrowArgs} args - Arguments to find a Categoria_salarial
     * @example
     * // Get one Categoria_salarial
     * const categoria_salarial = await prisma.categoria_salarial.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends categoria_salarialFindFirstOrThrowArgs>(args?: SelectSubset<T, categoria_salarialFindFirstOrThrowArgs<ExtArgs>>): Prisma__categoria_salarialClient<$Result.GetResult<Prisma.$categoria_salarialPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Categoria_salarials that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {categoria_salarialFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Categoria_salarials
     * const categoria_salarials = await prisma.categoria_salarial.findMany()
     * 
     * // Get first 10 Categoria_salarials
     * const categoria_salarials = await prisma.categoria_salarial.findMany({ take: 10 })
     * 
     * // Only select the `id_categoria_salarial`
     * const categoria_salarialWithId_categoria_salarialOnly = await prisma.categoria_salarial.findMany({ select: { id_categoria_salarial: true } })
     * 
     */
    findMany<T extends categoria_salarialFindManyArgs>(args?: SelectSubset<T, categoria_salarialFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$categoria_salarialPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Categoria_salarial.
     * @param {categoria_salarialCreateArgs} args - Arguments to create a Categoria_salarial.
     * @example
     * // Create one Categoria_salarial
     * const Categoria_salarial = await prisma.categoria_salarial.create({
     *   data: {
     *     // ... data to create a Categoria_salarial
     *   }
     * })
     * 
     */
    create<T extends categoria_salarialCreateArgs>(args: SelectSubset<T, categoria_salarialCreateArgs<ExtArgs>>): Prisma__categoria_salarialClient<$Result.GetResult<Prisma.$categoria_salarialPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Categoria_salarials.
     * @param {categoria_salarialCreateManyArgs} args - Arguments to create many Categoria_salarials.
     * @example
     * // Create many Categoria_salarials
     * const categoria_salarial = await prisma.categoria_salarial.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends categoria_salarialCreateManyArgs>(args?: SelectSubset<T, categoria_salarialCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Categoria_salarials and returns the data saved in the database.
     * @param {categoria_salarialCreateManyAndReturnArgs} args - Arguments to create many Categoria_salarials.
     * @example
     * // Create many Categoria_salarials
     * const categoria_salarial = await prisma.categoria_salarial.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Categoria_salarials and only return the `id_categoria_salarial`
     * const categoria_salarialWithId_categoria_salarialOnly = await prisma.categoria_salarial.createManyAndReturn({
     *   select: { id_categoria_salarial: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends categoria_salarialCreateManyAndReturnArgs>(args?: SelectSubset<T, categoria_salarialCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$categoria_salarialPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Categoria_salarial.
     * @param {categoria_salarialDeleteArgs} args - Arguments to delete one Categoria_salarial.
     * @example
     * // Delete one Categoria_salarial
     * const Categoria_salarial = await prisma.categoria_salarial.delete({
     *   where: {
     *     // ... filter to delete one Categoria_salarial
     *   }
     * })
     * 
     */
    delete<T extends categoria_salarialDeleteArgs>(args: SelectSubset<T, categoria_salarialDeleteArgs<ExtArgs>>): Prisma__categoria_salarialClient<$Result.GetResult<Prisma.$categoria_salarialPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Categoria_salarial.
     * @param {categoria_salarialUpdateArgs} args - Arguments to update one Categoria_salarial.
     * @example
     * // Update one Categoria_salarial
     * const categoria_salarial = await prisma.categoria_salarial.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends categoria_salarialUpdateArgs>(args: SelectSubset<T, categoria_salarialUpdateArgs<ExtArgs>>): Prisma__categoria_salarialClient<$Result.GetResult<Prisma.$categoria_salarialPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Categoria_salarials.
     * @param {categoria_salarialDeleteManyArgs} args - Arguments to filter Categoria_salarials to delete.
     * @example
     * // Delete a few Categoria_salarials
     * const { count } = await prisma.categoria_salarial.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends categoria_salarialDeleteManyArgs>(args?: SelectSubset<T, categoria_salarialDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Categoria_salarials.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {categoria_salarialUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Categoria_salarials
     * const categoria_salarial = await prisma.categoria_salarial.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends categoria_salarialUpdateManyArgs>(args: SelectSubset<T, categoria_salarialUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Categoria_salarials and returns the data updated in the database.
     * @param {categoria_salarialUpdateManyAndReturnArgs} args - Arguments to update many Categoria_salarials.
     * @example
     * // Update many Categoria_salarials
     * const categoria_salarial = await prisma.categoria_salarial.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Categoria_salarials and only return the `id_categoria_salarial`
     * const categoria_salarialWithId_categoria_salarialOnly = await prisma.categoria_salarial.updateManyAndReturn({
     *   select: { id_categoria_salarial: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends categoria_salarialUpdateManyAndReturnArgs>(args: SelectSubset<T, categoria_salarialUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$categoria_salarialPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Categoria_salarial.
     * @param {categoria_salarialUpsertArgs} args - Arguments to update or create a Categoria_salarial.
     * @example
     * // Update or create a Categoria_salarial
     * const categoria_salarial = await prisma.categoria_salarial.upsert({
     *   create: {
     *     // ... data to create a Categoria_salarial
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Categoria_salarial we want to update
     *   }
     * })
     */
    upsert<T extends categoria_salarialUpsertArgs>(args: SelectSubset<T, categoria_salarialUpsertArgs<ExtArgs>>): Prisma__categoria_salarialClient<$Result.GetResult<Prisma.$categoria_salarialPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Categoria_salarials.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {categoria_salarialCountArgs} args - Arguments to filter Categoria_salarials to count.
     * @example
     * // Count the number of Categoria_salarials
     * const count = await prisma.categoria_salarial.count({
     *   where: {
     *     // ... the filter for the Categoria_salarials we want to count
     *   }
     * })
    **/
    count<T extends categoria_salarialCountArgs>(
      args?: Subset<T, categoria_salarialCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Categoria_salarialCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Categoria_salarial.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Categoria_salarialAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Categoria_salarialAggregateArgs>(args: Subset<T, Categoria_salarialAggregateArgs>): Prisma.PrismaPromise<GetCategoria_salarialAggregateType<T>>

    /**
     * Group by Categoria_salarial.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {categoria_salarialGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends categoria_salarialGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: categoria_salarialGroupByArgs['orderBy'] }
        : { orderBy?: categoria_salarialGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, categoria_salarialGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCategoria_salarialGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the categoria_salarial model
   */
  readonly fields: categoria_salarialFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for categoria_salarial.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__categoria_salarialClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    cargo<T extends categoria_salarial$cargoArgs<ExtArgs> = {}>(args?: Subset<T, categoria_salarial$cargoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$cargoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the categoria_salarial model
   */
  interface categoria_salarialFieldRefs {
    readonly id_categoria_salarial: FieldRef<"categoria_salarial", 'Int'>
    readonly monto: FieldRef<"categoria_salarial", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * categoria_salarial findUnique
   */
  export type categoria_salarialFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the categoria_salarial
     */
    select?: categoria_salarialSelect<ExtArgs> | null
    /**
     * Omit specific fields from the categoria_salarial
     */
    omit?: categoria_salarialOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: categoria_salarialInclude<ExtArgs> | null
    /**
     * Filter, which categoria_salarial to fetch.
     */
    where: categoria_salarialWhereUniqueInput
  }

  /**
   * categoria_salarial findUniqueOrThrow
   */
  export type categoria_salarialFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the categoria_salarial
     */
    select?: categoria_salarialSelect<ExtArgs> | null
    /**
     * Omit specific fields from the categoria_salarial
     */
    omit?: categoria_salarialOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: categoria_salarialInclude<ExtArgs> | null
    /**
     * Filter, which categoria_salarial to fetch.
     */
    where: categoria_salarialWhereUniqueInput
  }

  /**
   * categoria_salarial findFirst
   */
  export type categoria_salarialFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the categoria_salarial
     */
    select?: categoria_salarialSelect<ExtArgs> | null
    /**
     * Omit specific fields from the categoria_salarial
     */
    omit?: categoria_salarialOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: categoria_salarialInclude<ExtArgs> | null
    /**
     * Filter, which categoria_salarial to fetch.
     */
    where?: categoria_salarialWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of categoria_salarials to fetch.
     */
    orderBy?: categoria_salarialOrderByWithRelationInput | categoria_salarialOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for categoria_salarials.
     */
    cursor?: categoria_salarialWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` categoria_salarials from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` categoria_salarials.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of categoria_salarials.
     */
    distinct?: Categoria_salarialScalarFieldEnum | Categoria_salarialScalarFieldEnum[]
  }

  /**
   * categoria_salarial findFirstOrThrow
   */
  export type categoria_salarialFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the categoria_salarial
     */
    select?: categoria_salarialSelect<ExtArgs> | null
    /**
     * Omit specific fields from the categoria_salarial
     */
    omit?: categoria_salarialOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: categoria_salarialInclude<ExtArgs> | null
    /**
     * Filter, which categoria_salarial to fetch.
     */
    where?: categoria_salarialWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of categoria_salarials to fetch.
     */
    orderBy?: categoria_salarialOrderByWithRelationInput | categoria_salarialOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for categoria_salarials.
     */
    cursor?: categoria_salarialWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` categoria_salarials from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` categoria_salarials.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of categoria_salarials.
     */
    distinct?: Categoria_salarialScalarFieldEnum | Categoria_salarialScalarFieldEnum[]
  }

  /**
   * categoria_salarial findMany
   */
  export type categoria_salarialFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the categoria_salarial
     */
    select?: categoria_salarialSelect<ExtArgs> | null
    /**
     * Omit specific fields from the categoria_salarial
     */
    omit?: categoria_salarialOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: categoria_salarialInclude<ExtArgs> | null
    /**
     * Filter, which categoria_salarials to fetch.
     */
    where?: categoria_salarialWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of categoria_salarials to fetch.
     */
    orderBy?: categoria_salarialOrderByWithRelationInput | categoria_salarialOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing categoria_salarials.
     */
    cursor?: categoria_salarialWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` categoria_salarials from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` categoria_salarials.
     */
    skip?: number
    distinct?: Categoria_salarialScalarFieldEnum | Categoria_salarialScalarFieldEnum[]
  }

  /**
   * categoria_salarial create
   */
  export type categoria_salarialCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the categoria_salarial
     */
    select?: categoria_salarialSelect<ExtArgs> | null
    /**
     * Omit specific fields from the categoria_salarial
     */
    omit?: categoria_salarialOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: categoria_salarialInclude<ExtArgs> | null
    /**
     * The data needed to create a categoria_salarial.
     */
    data: XOR<categoria_salarialCreateInput, categoria_salarialUncheckedCreateInput>
  }

  /**
   * categoria_salarial createMany
   */
  export type categoria_salarialCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many categoria_salarials.
     */
    data: categoria_salarialCreateManyInput | categoria_salarialCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * categoria_salarial createManyAndReturn
   */
  export type categoria_salarialCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the categoria_salarial
     */
    select?: categoria_salarialSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the categoria_salarial
     */
    omit?: categoria_salarialOmit<ExtArgs> | null
    /**
     * The data used to create many categoria_salarials.
     */
    data: categoria_salarialCreateManyInput | categoria_salarialCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * categoria_salarial update
   */
  export type categoria_salarialUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the categoria_salarial
     */
    select?: categoria_salarialSelect<ExtArgs> | null
    /**
     * Omit specific fields from the categoria_salarial
     */
    omit?: categoria_salarialOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: categoria_salarialInclude<ExtArgs> | null
    /**
     * The data needed to update a categoria_salarial.
     */
    data: XOR<categoria_salarialUpdateInput, categoria_salarialUncheckedUpdateInput>
    /**
     * Choose, which categoria_salarial to update.
     */
    where: categoria_salarialWhereUniqueInput
  }

  /**
   * categoria_salarial updateMany
   */
  export type categoria_salarialUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update categoria_salarials.
     */
    data: XOR<categoria_salarialUpdateManyMutationInput, categoria_salarialUncheckedUpdateManyInput>
    /**
     * Filter which categoria_salarials to update
     */
    where?: categoria_salarialWhereInput
    /**
     * Limit how many categoria_salarials to update.
     */
    limit?: number
  }

  /**
   * categoria_salarial updateManyAndReturn
   */
  export type categoria_salarialUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the categoria_salarial
     */
    select?: categoria_salarialSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the categoria_salarial
     */
    omit?: categoria_salarialOmit<ExtArgs> | null
    /**
     * The data used to update categoria_salarials.
     */
    data: XOR<categoria_salarialUpdateManyMutationInput, categoria_salarialUncheckedUpdateManyInput>
    /**
     * Filter which categoria_salarials to update
     */
    where?: categoria_salarialWhereInput
    /**
     * Limit how many categoria_salarials to update.
     */
    limit?: number
  }

  /**
   * categoria_salarial upsert
   */
  export type categoria_salarialUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the categoria_salarial
     */
    select?: categoria_salarialSelect<ExtArgs> | null
    /**
     * Omit specific fields from the categoria_salarial
     */
    omit?: categoria_salarialOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: categoria_salarialInclude<ExtArgs> | null
    /**
     * The filter to search for the categoria_salarial to update in case it exists.
     */
    where: categoria_salarialWhereUniqueInput
    /**
     * In case the categoria_salarial found by the `where` argument doesn't exist, create a new categoria_salarial with this data.
     */
    create: XOR<categoria_salarialCreateInput, categoria_salarialUncheckedCreateInput>
    /**
     * In case the categoria_salarial was found with the provided `where` argument, update it with this data.
     */
    update: XOR<categoria_salarialUpdateInput, categoria_salarialUncheckedUpdateInput>
  }

  /**
   * categoria_salarial delete
   */
  export type categoria_salarialDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the categoria_salarial
     */
    select?: categoria_salarialSelect<ExtArgs> | null
    /**
     * Omit specific fields from the categoria_salarial
     */
    omit?: categoria_salarialOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: categoria_salarialInclude<ExtArgs> | null
    /**
     * Filter which categoria_salarial to delete.
     */
    where: categoria_salarialWhereUniqueInput
  }

  /**
   * categoria_salarial deleteMany
   */
  export type categoria_salarialDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which categoria_salarials to delete
     */
    where?: categoria_salarialWhereInput
    /**
     * Limit how many categoria_salarials to delete.
     */
    limit?: number
  }

  /**
   * categoria_salarial.cargo
   */
  export type categoria_salarial$cargoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cargo
     */
    select?: cargoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cargo
     */
    omit?: cargoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cargoInclude<ExtArgs> | null
    where?: cargoWhereInput
    orderBy?: cargoOrderByWithRelationInput | cargoOrderByWithRelationInput[]
    cursor?: cargoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CargoScalarFieldEnum | CargoScalarFieldEnum[]
  }

  /**
   * categoria_salarial without action
   */
  export type categoria_salarialDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the categoria_salarial
     */
    select?: categoria_salarialSelect<ExtArgs> | null
    /**
     * Omit specific fields from the categoria_salarial
     */
    omit?: categoria_salarialOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: categoria_salarialInclude<ExtArgs> | null
  }


  /**
   * Model concepto_empleado
   */

  export type AggregateConcepto_empleado = {
    _count: Concepto_empleadoCountAggregateOutputType | null
    _avg: Concepto_empleadoAvgAggregateOutputType | null
    _sum: Concepto_empleadoSumAggregateOutputType | null
    _min: Concepto_empleadoMinAggregateOutputType | null
    _max: Concepto_empleadoMaxAggregateOutputType | null
  }

  export type Concepto_empleadoAvgAggregateOutputType = {
    id_concepto_empleado: number | null
    monto: Decimal | null
    id_empleado: number | null
    id_concepto: number | null
  }

  export type Concepto_empleadoSumAggregateOutputType = {
    id_concepto_empleado: number | null
    monto: Decimal | null
    id_empleado: number | null
    id_concepto: number | null
  }

  export type Concepto_empleadoMinAggregateOutputType = {
    id_concepto_empleado: number | null
    monto: Decimal | null
    id_empleado: number | null
    observacion: string | null
    activo: boolean | null
    id_concepto: number | null
  }

  export type Concepto_empleadoMaxAggregateOutputType = {
    id_concepto_empleado: number | null
    monto: Decimal | null
    id_empleado: number | null
    observacion: string | null
    activo: boolean | null
    id_concepto: number | null
  }

  export type Concepto_empleadoCountAggregateOutputType = {
    id_concepto_empleado: number
    monto: number
    id_empleado: number
    observacion: number
    activo: number
    id_concepto: number
    _all: number
  }


  export type Concepto_empleadoAvgAggregateInputType = {
    id_concepto_empleado?: true
    monto?: true
    id_empleado?: true
    id_concepto?: true
  }

  export type Concepto_empleadoSumAggregateInputType = {
    id_concepto_empleado?: true
    monto?: true
    id_empleado?: true
    id_concepto?: true
  }

  export type Concepto_empleadoMinAggregateInputType = {
    id_concepto_empleado?: true
    monto?: true
    id_empleado?: true
    observacion?: true
    activo?: true
    id_concepto?: true
  }

  export type Concepto_empleadoMaxAggregateInputType = {
    id_concepto_empleado?: true
    monto?: true
    id_empleado?: true
    observacion?: true
    activo?: true
    id_concepto?: true
  }

  export type Concepto_empleadoCountAggregateInputType = {
    id_concepto_empleado?: true
    monto?: true
    id_empleado?: true
    observacion?: true
    activo?: true
    id_concepto?: true
    _all?: true
  }

  export type Concepto_empleadoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which concepto_empleado to aggregate.
     */
    where?: concepto_empleadoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of concepto_empleados to fetch.
     */
    orderBy?: concepto_empleadoOrderByWithRelationInput | concepto_empleadoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: concepto_empleadoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` concepto_empleados from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` concepto_empleados.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned concepto_empleados
    **/
    _count?: true | Concepto_empleadoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Concepto_empleadoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Concepto_empleadoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Concepto_empleadoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Concepto_empleadoMaxAggregateInputType
  }

  export type GetConcepto_empleadoAggregateType<T extends Concepto_empleadoAggregateArgs> = {
        [P in keyof T & keyof AggregateConcepto_empleado]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateConcepto_empleado[P]>
      : GetScalarType<T[P], AggregateConcepto_empleado[P]>
  }




  export type concepto_empleadoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: concepto_empleadoWhereInput
    orderBy?: concepto_empleadoOrderByWithAggregationInput | concepto_empleadoOrderByWithAggregationInput[]
    by: Concepto_empleadoScalarFieldEnum[] | Concepto_empleadoScalarFieldEnum
    having?: concepto_empleadoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Concepto_empleadoCountAggregateInputType | true
    _avg?: Concepto_empleadoAvgAggregateInputType
    _sum?: Concepto_empleadoSumAggregateInputType
    _min?: Concepto_empleadoMinAggregateInputType
    _max?: Concepto_empleadoMaxAggregateInputType
  }

  export type Concepto_empleadoGroupByOutputType = {
    id_concepto_empleado: number
    monto: Decimal
    id_empleado: number
    observacion: string
    activo: boolean
    id_concepto: number
    _count: Concepto_empleadoCountAggregateOutputType | null
    _avg: Concepto_empleadoAvgAggregateOutputType | null
    _sum: Concepto_empleadoSumAggregateOutputType | null
    _min: Concepto_empleadoMinAggregateOutputType | null
    _max: Concepto_empleadoMaxAggregateOutputType | null
  }

  type GetConcepto_empleadoGroupByPayload<T extends concepto_empleadoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Concepto_empleadoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Concepto_empleadoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Concepto_empleadoGroupByOutputType[P]>
            : GetScalarType<T[P], Concepto_empleadoGroupByOutputType[P]>
        }
      >
    >


  export type concepto_empleadoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_concepto_empleado?: boolean
    monto?: boolean
    id_empleado?: boolean
    observacion?: boolean
    activo?: boolean
    id_concepto?: boolean
    concepto_salarial?: boolean | concepto_salarialDefaultArgs<ExtArgs>
    empleado?: boolean | empleadoDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["concepto_empleado"]>

  export type concepto_empleadoSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_concepto_empleado?: boolean
    monto?: boolean
    id_empleado?: boolean
    observacion?: boolean
    activo?: boolean
    id_concepto?: boolean
    concepto_salarial?: boolean | concepto_salarialDefaultArgs<ExtArgs>
    empleado?: boolean | empleadoDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["concepto_empleado"]>

  export type concepto_empleadoSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_concepto_empleado?: boolean
    monto?: boolean
    id_empleado?: boolean
    observacion?: boolean
    activo?: boolean
    id_concepto?: boolean
    concepto_salarial?: boolean | concepto_salarialDefaultArgs<ExtArgs>
    empleado?: boolean | empleadoDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["concepto_empleado"]>

  export type concepto_empleadoSelectScalar = {
    id_concepto_empleado?: boolean
    monto?: boolean
    id_empleado?: boolean
    observacion?: boolean
    activo?: boolean
    id_concepto?: boolean
  }

  export type concepto_empleadoOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id_concepto_empleado" | "monto" | "id_empleado" | "observacion" | "activo" | "id_concepto", ExtArgs["result"]["concepto_empleado"]>
  export type concepto_empleadoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    concepto_salarial?: boolean | concepto_salarialDefaultArgs<ExtArgs>
    empleado?: boolean | empleadoDefaultArgs<ExtArgs>
  }
  export type concepto_empleadoIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    concepto_salarial?: boolean | concepto_salarialDefaultArgs<ExtArgs>
    empleado?: boolean | empleadoDefaultArgs<ExtArgs>
  }
  export type concepto_empleadoIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    concepto_salarial?: boolean | concepto_salarialDefaultArgs<ExtArgs>
    empleado?: boolean | empleadoDefaultArgs<ExtArgs>
  }

  export type $concepto_empleadoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "concepto_empleado"
    objects: {
      concepto_salarial: Prisma.$concepto_salarialPayload<ExtArgs>
      empleado: Prisma.$empleadoPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id_concepto_empleado: number
      monto: Prisma.Decimal
      id_empleado: number
      observacion: string
      activo: boolean
      id_concepto: number
    }, ExtArgs["result"]["concepto_empleado"]>
    composites: {}
  }

  type concepto_empleadoGetPayload<S extends boolean | null | undefined | concepto_empleadoDefaultArgs> = $Result.GetResult<Prisma.$concepto_empleadoPayload, S>

  type concepto_empleadoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<concepto_empleadoFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Concepto_empleadoCountAggregateInputType | true
    }

  export interface concepto_empleadoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['concepto_empleado'], meta: { name: 'concepto_empleado' } }
    /**
     * Find zero or one Concepto_empleado that matches the filter.
     * @param {concepto_empleadoFindUniqueArgs} args - Arguments to find a Concepto_empleado
     * @example
     * // Get one Concepto_empleado
     * const concepto_empleado = await prisma.concepto_empleado.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends concepto_empleadoFindUniqueArgs>(args: SelectSubset<T, concepto_empleadoFindUniqueArgs<ExtArgs>>): Prisma__concepto_empleadoClient<$Result.GetResult<Prisma.$concepto_empleadoPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Concepto_empleado that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {concepto_empleadoFindUniqueOrThrowArgs} args - Arguments to find a Concepto_empleado
     * @example
     * // Get one Concepto_empleado
     * const concepto_empleado = await prisma.concepto_empleado.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends concepto_empleadoFindUniqueOrThrowArgs>(args: SelectSubset<T, concepto_empleadoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__concepto_empleadoClient<$Result.GetResult<Prisma.$concepto_empleadoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Concepto_empleado that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {concepto_empleadoFindFirstArgs} args - Arguments to find a Concepto_empleado
     * @example
     * // Get one Concepto_empleado
     * const concepto_empleado = await prisma.concepto_empleado.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends concepto_empleadoFindFirstArgs>(args?: SelectSubset<T, concepto_empleadoFindFirstArgs<ExtArgs>>): Prisma__concepto_empleadoClient<$Result.GetResult<Prisma.$concepto_empleadoPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Concepto_empleado that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {concepto_empleadoFindFirstOrThrowArgs} args - Arguments to find a Concepto_empleado
     * @example
     * // Get one Concepto_empleado
     * const concepto_empleado = await prisma.concepto_empleado.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends concepto_empleadoFindFirstOrThrowArgs>(args?: SelectSubset<T, concepto_empleadoFindFirstOrThrowArgs<ExtArgs>>): Prisma__concepto_empleadoClient<$Result.GetResult<Prisma.$concepto_empleadoPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Concepto_empleados that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {concepto_empleadoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Concepto_empleados
     * const concepto_empleados = await prisma.concepto_empleado.findMany()
     * 
     * // Get first 10 Concepto_empleados
     * const concepto_empleados = await prisma.concepto_empleado.findMany({ take: 10 })
     * 
     * // Only select the `id_concepto_empleado`
     * const concepto_empleadoWithId_concepto_empleadoOnly = await prisma.concepto_empleado.findMany({ select: { id_concepto_empleado: true } })
     * 
     */
    findMany<T extends concepto_empleadoFindManyArgs>(args?: SelectSubset<T, concepto_empleadoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$concepto_empleadoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Concepto_empleado.
     * @param {concepto_empleadoCreateArgs} args - Arguments to create a Concepto_empleado.
     * @example
     * // Create one Concepto_empleado
     * const Concepto_empleado = await prisma.concepto_empleado.create({
     *   data: {
     *     // ... data to create a Concepto_empleado
     *   }
     * })
     * 
     */
    create<T extends concepto_empleadoCreateArgs>(args: SelectSubset<T, concepto_empleadoCreateArgs<ExtArgs>>): Prisma__concepto_empleadoClient<$Result.GetResult<Prisma.$concepto_empleadoPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Concepto_empleados.
     * @param {concepto_empleadoCreateManyArgs} args - Arguments to create many Concepto_empleados.
     * @example
     * // Create many Concepto_empleados
     * const concepto_empleado = await prisma.concepto_empleado.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends concepto_empleadoCreateManyArgs>(args?: SelectSubset<T, concepto_empleadoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Concepto_empleados and returns the data saved in the database.
     * @param {concepto_empleadoCreateManyAndReturnArgs} args - Arguments to create many Concepto_empleados.
     * @example
     * // Create many Concepto_empleados
     * const concepto_empleado = await prisma.concepto_empleado.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Concepto_empleados and only return the `id_concepto_empleado`
     * const concepto_empleadoWithId_concepto_empleadoOnly = await prisma.concepto_empleado.createManyAndReturn({
     *   select: { id_concepto_empleado: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends concepto_empleadoCreateManyAndReturnArgs>(args?: SelectSubset<T, concepto_empleadoCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$concepto_empleadoPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Concepto_empleado.
     * @param {concepto_empleadoDeleteArgs} args - Arguments to delete one Concepto_empleado.
     * @example
     * // Delete one Concepto_empleado
     * const Concepto_empleado = await prisma.concepto_empleado.delete({
     *   where: {
     *     // ... filter to delete one Concepto_empleado
     *   }
     * })
     * 
     */
    delete<T extends concepto_empleadoDeleteArgs>(args: SelectSubset<T, concepto_empleadoDeleteArgs<ExtArgs>>): Prisma__concepto_empleadoClient<$Result.GetResult<Prisma.$concepto_empleadoPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Concepto_empleado.
     * @param {concepto_empleadoUpdateArgs} args - Arguments to update one Concepto_empleado.
     * @example
     * // Update one Concepto_empleado
     * const concepto_empleado = await prisma.concepto_empleado.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends concepto_empleadoUpdateArgs>(args: SelectSubset<T, concepto_empleadoUpdateArgs<ExtArgs>>): Prisma__concepto_empleadoClient<$Result.GetResult<Prisma.$concepto_empleadoPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Concepto_empleados.
     * @param {concepto_empleadoDeleteManyArgs} args - Arguments to filter Concepto_empleados to delete.
     * @example
     * // Delete a few Concepto_empleados
     * const { count } = await prisma.concepto_empleado.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends concepto_empleadoDeleteManyArgs>(args?: SelectSubset<T, concepto_empleadoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Concepto_empleados.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {concepto_empleadoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Concepto_empleados
     * const concepto_empleado = await prisma.concepto_empleado.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends concepto_empleadoUpdateManyArgs>(args: SelectSubset<T, concepto_empleadoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Concepto_empleados and returns the data updated in the database.
     * @param {concepto_empleadoUpdateManyAndReturnArgs} args - Arguments to update many Concepto_empleados.
     * @example
     * // Update many Concepto_empleados
     * const concepto_empleado = await prisma.concepto_empleado.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Concepto_empleados and only return the `id_concepto_empleado`
     * const concepto_empleadoWithId_concepto_empleadoOnly = await prisma.concepto_empleado.updateManyAndReturn({
     *   select: { id_concepto_empleado: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends concepto_empleadoUpdateManyAndReturnArgs>(args: SelectSubset<T, concepto_empleadoUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$concepto_empleadoPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Concepto_empleado.
     * @param {concepto_empleadoUpsertArgs} args - Arguments to update or create a Concepto_empleado.
     * @example
     * // Update or create a Concepto_empleado
     * const concepto_empleado = await prisma.concepto_empleado.upsert({
     *   create: {
     *     // ... data to create a Concepto_empleado
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Concepto_empleado we want to update
     *   }
     * })
     */
    upsert<T extends concepto_empleadoUpsertArgs>(args: SelectSubset<T, concepto_empleadoUpsertArgs<ExtArgs>>): Prisma__concepto_empleadoClient<$Result.GetResult<Prisma.$concepto_empleadoPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Concepto_empleados.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {concepto_empleadoCountArgs} args - Arguments to filter Concepto_empleados to count.
     * @example
     * // Count the number of Concepto_empleados
     * const count = await prisma.concepto_empleado.count({
     *   where: {
     *     // ... the filter for the Concepto_empleados we want to count
     *   }
     * })
    **/
    count<T extends concepto_empleadoCountArgs>(
      args?: Subset<T, concepto_empleadoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Concepto_empleadoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Concepto_empleado.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Concepto_empleadoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Concepto_empleadoAggregateArgs>(args: Subset<T, Concepto_empleadoAggregateArgs>): Prisma.PrismaPromise<GetConcepto_empleadoAggregateType<T>>

    /**
     * Group by Concepto_empleado.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {concepto_empleadoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends concepto_empleadoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: concepto_empleadoGroupByArgs['orderBy'] }
        : { orderBy?: concepto_empleadoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, concepto_empleadoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetConcepto_empleadoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the concepto_empleado model
   */
  readonly fields: concepto_empleadoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for concepto_empleado.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__concepto_empleadoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    concepto_salarial<T extends concepto_salarialDefaultArgs<ExtArgs> = {}>(args?: Subset<T, concepto_salarialDefaultArgs<ExtArgs>>): Prisma__concepto_salarialClient<$Result.GetResult<Prisma.$concepto_salarialPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    empleado<T extends empleadoDefaultArgs<ExtArgs> = {}>(args?: Subset<T, empleadoDefaultArgs<ExtArgs>>): Prisma__empleadoClient<$Result.GetResult<Prisma.$empleadoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the concepto_empleado model
   */
  interface concepto_empleadoFieldRefs {
    readonly id_concepto_empleado: FieldRef<"concepto_empleado", 'Int'>
    readonly monto: FieldRef<"concepto_empleado", 'Decimal'>
    readonly id_empleado: FieldRef<"concepto_empleado", 'Int'>
    readonly observacion: FieldRef<"concepto_empleado", 'String'>
    readonly activo: FieldRef<"concepto_empleado", 'Boolean'>
    readonly id_concepto: FieldRef<"concepto_empleado", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * concepto_empleado findUnique
   */
  export type concepto_empleadoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the concepto_empleado
     */
    select?: concepto_empleadoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the concepto_empleado
     */
    omit?: concepto_empleadoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: concepto_empleadoInclude<ExtArgs> | null
    /**
     * Filter, which concepto_empleado to fetch.
     */
    where: concepto_empleadoWhereUniqueInput
  }

  /**
   * concepto_empleado findUniqueOrThrow
   */
  export type concepto_empleadoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the concepto_empleado
     */
    select?: concepto_empleadoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the concepto_empleado
     */
    omit?: concepto_empleadoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: concepto_empleadoInclude<ExtArgs> | null
    /**
     * Filter, which concepto_empleado to fetch.
     */
    where: concepto_empleadoWhereUniqueInput
  }

  /**
   * concepto_empleado findFirst
   */
  export type concepto_empleadoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the concepto_empleado
     */
    select?: concepto_empleadoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the concepto_empleado
     */
    omit?: concepto_empleadoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: concepto_empleadoInclude<ExtArgs> | null
    /**
     * Filter, which concepto_empleado to fetch.
     */
    where?: concepto_empleadoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of concepto_empleados to fetch.
     */
    orderBy?: concepto_empleadoOrderByWithRelationInput | concepto_empleadoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for concepto_empleados.
     */
    cursor?: concepto_empleadoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` concepto_empleados from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` concepto_empleados.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of concepto_empleados.
     */
    distinct?: Concepto_empleadoScalarFieldEnum | Concepto_empleadoScalarFieldEnum[]
  }

  /**
   * concepto_empleado findFirstOrThrow
   */
  export type concepto_empleadoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the concepto_empleado
     */
    select?: concepto_empleadoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the concepto_empleado
     */
    omit?: concepto_empleadoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: concepto_empleadoInclude<ExtArgs> | null
    /**
     * Filter, which concepto_empleado to fetch.
     */
    where?: concepto_empleadoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of concepto_empleados to fetch.
     */
    orderBy?: concepto_empleadoOrderByWithRelationInput | concepto_empleadoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for concepto_empleados.
     */
    cursor?: concepto_empleadoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` concepto_empleados from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` concepto_empleados.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of concepto_empleados.
     */
    distinct?: Concepto_empleadoScalarFieldEnum | Concepto_empleadoScalarFieldEnum[]
  }

  /**
   * concepto_empleado findMany
   */
  export type concepto_empleadoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the concepto_empleado
     */
    select?: concepto_empleadoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the concepto_empleado
     */
    omit?: concepto_empleadoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: concepto_empleadoInclude<ExtArgs> | null
    /**
     * Filter, which concepto_empleados to fetch.
     */
    where?: concepto_empleadoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of concepto_empleados to fetch.
     */
    orderBy?: concepto_empleadoOrderByWithRelationInput | concepto_empleadoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing concepto_empleados.
     */
    cursor?: concepto_empleadoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` concepto_empleados from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` concepto_empleados.
     */
    skip?: number
    distinct?: Concepto_empleadoScalarFieldEnum | Concepto_empleadoScalarFieldEnum[]
  }

  /**
   * concepto_empleado create
   */
  export type concepto_empleadoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the concepto_empleado
     */
    select?: concepto_empleadoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the concepto_empleado
     */
    omit?: concepto_empleadoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: concepto_empleadoInclude<ExtArgs> | null
    /**
     * The data needed to create a concepto_empleado.
     */
    data: XOR<concepto_empleadoCreateInput, concepto_empleadoUncheckedCreateInput>
  }

  /**
   * concepto_empleado createMany
   */
  export type concepto_empleadoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many concepto_empleados.
     */
    data: concepto_empleadoCreateManyInput | concepto_empleadoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * concepto_empleado createManyAndReturn
   */
  export type concepto_empleadoCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the concepto_empleado
     */
    select?: concepto_empleadoSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the concepto_empleado
     */
    omit?: concepto_empleadoOmit<ExtArgs> | null
    /**
     * The data used to create many concepto_empleados.
     */
    data: concepto_empleadoCreateManyInput | concepto_empleadoCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: concepto_empleadoIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * concepto_empleado update
   */
  export type concepto_empleadoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the concepto_empleado
     */
    select?: concepto_empleadoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the concepto_empleado
     */
    omit?: concepto_empleadoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: concepto_empleadoInclude<ExtArgs> | null
    /**
     * The data needed to update a concepto_empleado.
     */
    data: XOR<concepto_empleadoUpdateInput, concepto_empleadoUncheckedUpdateInput>
    /**
     * Choose, which concepto_empleado to update.
     */
    where: concepto_empleadoWhereUniqueInput
  }

  /**
   * concepto_empleado updateMany
   */
  export type concepto_empleadoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update concepto_empleados.
     */
    data: XOR<concepto_empleadoUpdateManyMutationInput, concepto_empleadoUncheckedUpdateManyInput>
    /**
     * Filter which concepto_empleados to update
     */
    where?: concepto_empleadoWhereInput
    /**
     * Limit how many concepto_empleados to update.
     */
    limit?: number
  }

  /**
   * concepto_empleado updateManyAndReturn
   */
  export type concepto_empleadoUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the concepto_empleado
     */
    select?: concepto_empleadoSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the concepto_empleado
     */
    omit?: concepto_empleadoOmit<ExtArgs> | null
    /**
     * The data used to update concepto_empleados.
     */
    data: XOR<concepto_empleadoUpdateManyMutationInput, concepto_empleadoUncheckedUpdateManyInput>
    /**
     * Filter which concepto_empleados to update
     */
    where?: concepto_empleadoWhereInput
    /**
     * Limit how many concepto_empleados to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: concepto_empleadoIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * concepto_empleado upsert
   */
  export type concepto_empleadoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the concepto_empleado
     */
    select?: concepto_empleadoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the concepto_empleado
     */
    omit?: concepto_empleadoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: concepto_empleadoInclude<ExtArgs> | null
    /**
     * The filter to search for the concepto_empleado to update in case it exists.
     */
    where: concepto_empleadoWhereUniqueInput
    /**
     * In case the concepto_empleado found by the `where` argument doesn't exist, create a new concepto_empleado with this data.
     */
    create: XOR<concepto_empleadoCreateInput, concepto_empleadoUncheckedCreateInput>
    /**
     * In case the concepto_empleado was found with the provided `where` argument, update it with this data.
     */
    update: XOR<concepto_empleadoUpdateInput, concepto_empleadoUncheckedUpdateInput>
  }

  /**
   * concepto_empleado delete
   */
  export type concepto_empleadoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the concepto_empleado
     */
    select?: concepto_empleadoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the concepto_empleado
     */
    omit?: concepto_empleadoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: concepto_empleadoInclude<ExtArgs> | null
    /**
     * Filter which concepto_empleado to delete.
     */
    where: concepto_empleadoWhereUniqueInput
  }

  /**
   * concepto_empleado deleteMany
   */
  export type concepto_empleadoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which concepto_empleados to delete
     */
    where?: concepto_empleadoWhereInput
    /**
     * Limit how many concepto_empleados to delete.
     */
    limit?: number
  }

  /**
   * concepto_empleado without action
   */
  export type concepto_empleadoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the concepto_empleado
     */
    select?: concepto_empleadoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the concepto_empleado
     */
    omit?: concepto_empleadoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: concepto_empleadoInclude<ExtArgs> | null
  }


  /**
   * Model concepto_salarial
   */

  export type AggregateConcepto_salarial = {
    _count: Concepto_salarialCountAggregateOutputType | null
    _avg: Concepto_salarialAvgAggregateOutputType | null
    _sum: Concepto_salarialSumAggregateOutputType | null
    _min: Concepto_salarialMinAggregateOutputType | null
    _max: Concepto_salarialMaxAggregateOutputType | null
  }

  export type Concepto_salarialAvgAggregateOutputType = {
    id_concepto: number | null
    id_concepto_salarial: number | null
  }

  export type Concepto_salarialSumAggregateOutputType = {
    id_concepto: number | null
    id_concepto_salarial: number | null
  }

  export type Concepto_salarialMinAggregateOutputType = {
    id_concepto: number | null
    nombre: string | null
    recurrente: boolean | null
    afecta_IPS: boolean | null
    afecta_aguinaldo: boolean | null
    id_concepto_salarial: number | null
  }

  export type Concepto_salarialMaxAggregateOutputType = {
    id_concepto: number | null
    nombre: string | null
    recurrente: boolean | null
    afecta_IPS: boolean | null
    afecta_aguinaldo: boolean | null
    id_concepto_salarial: number | null
  }

  export type Concepto_salarialCountAggregateOutputType = {
    id_concepto: number
    nombre: number
    recurrente: number
    afecta_IPS: number
    afecta_aguinaldo: number
    id_concepto_salarial: number
    _all: number
  }


  export type Concepto_salarialAvgAggregateInputType = {
    id_concepto?: true
    id_concepto_salarial?: true
  }

  export type Concepto_salarialSumAggregateInputType = {
    id_concepto?: true
    id_concepto_salarial?: true
  }

  export type Concepto_salarialMinAggregateInputType = {
    id_concepto?: true
    nombre?: true
    recurrente?: true
    afecta_IPS?: true
    afecta_aguinaldo?: true
    id_concepto_salarial?: true
  }

  export type Concepto_salarialMaxAggregateInputType = {
    id_concepto?: true
    nombre?: true
    recurrente?: true
    afecta_IPS?: true
    afecta_aguinaldo?: true
    id_concepto_salarial?: true
  }

  export type Concepto_salarialCountAggregateInputType = {
    id_concepto?: true
    nombre?: true
    recurrente?: true
    afecta_IPS?: true
    afecta_aguinaldo?: true
    id_concepto_salarial?: true
    _all?: true
  }

  export type Concepto_salarialAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which concepto_salarial to aggregate.
     */
    where?: concepto_salarialWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of concepto_salarials to fetch.
     */
    orderBy?: concepto_salarialOrderByWithRelationInput | concepto_salarialOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: concepto_salarialWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` concepto_salarials from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` concepto_salarials.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned concepto_salarials
    **/
    _count?: true | Concepto_salarialCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Concepto_salarialAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Concepto_salarialSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Concepto_salarialMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Concepto_salarialMaxAggregateInputType
  }

  export type GetConcepto_salarialAggregateType<T extends Concepto_salarialAggregateArgs> = {
        [P in keyof T & keyof AggregateConcepto_salarial]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateConcepto_salarial[P]>
      : GetScalarType<T[P], AggregateConcepto_salarial[P]>
  }




  export type concepto_salarialGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: concepto_salarialWhereInput
    orderBy?: concepto_salarialOrderByWithAggregationInput | concepto_salarialOrderByWithAggregationInput[]
    by: Concepto_salarialScalarFieldEnum[] | Concepto_salarialScalarFieldEnum
    having?: concepto_salarialScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Concepto_salarialCountAggregateInputType | true
    _avg?: Concepto_salarialAvgAggregateInputType
    _sum?: Concepto_salarialSumAggregateInputType
    _min?: Concepto_salarialMinAggregateInputType
    _max?: Concepto_salarialMaxAggregateInputType
  }

  export type Concepto_salarialGroupByOutputType = {
    id_concepto: number
    nombre: string
    recurrente: boolean
    afecta_IPS: boolean
    afecta_aguinaldo: boolean
    id_concepto_salarial: number
    _count: Concepto_salarialCountAggregateOutputType | null
    _avg: Concepto_salarialAvgAggregateOutputType | null
    _sum: Concepto_salarialSumAggregateOutputType | null
    _min: Concepto_salarialMinAggregateOutputType | null
    _max: Concepto_salarialMaxAggregateOutputType | null
  }

  type GetConcepto_salarialGroupByPayload<T extends concepto_salarialGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Concepto_salarialGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Concepto_salarialGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Concepto_salarialGroupByOutputType[P]>
            : GetScalarType<T[P], Concepto_salarialGroupByOutputType[P]>
        }
      >
    >


  export type concepto_salarialSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_concepto?: boolean
    nombre?: boolean
    recurrente?: boolean
    afecta_IPS?: boolean
    afecta_aguinaldo?: boolean
    id_concepto_salarial?: boolean
    concepto_empleado?: boolean | concepto_salarial$concepto_empleadoArgs<ExtArgs>
    tipo_concepto_salarial?: boolean | tipo_concepto_salarialDefaultArgs<ExtArgs>
    detalle_nomina_concepto?: boolean | concepto_salarial$detalle_nomina_conceptoArgs<ExtArgs>
    _count?: boolean | Concepto_salarialCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["concepto_salarial"]>

  export type concepto_salarialSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_concepto?: boolean
    nombre?: boolean
    recurrente?: boolean
    afecta_IPS?: boolean
    afecta_aguinaldo?: boolean
    id_concepto_salarial?: boolean
    tipo_concepto_salarial?: boolean | tipo_concepto_salarialDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["concepto_salarial"]>

  export type concepto_salarialSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_concepto?: boolean
    nombre?: boolean
    recurrente?: boolean
    afecta_IPS?: boolean
    afecta_aguinaldo?: boolean
    id_concepto_salarial?: boolean
    tipo_concepto_salarial?: boolean | tipo_concepto_salarialDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["concepto_salarial"]>

  export type concepto_salarialSelectScalar = {
    id_concepto?: boolean
    nombre?: boolean
    recurrente?: boolean
    afecta_IPS?: boolean
    afecta_aguinaldo?: boolean
    id_concepto_salarial?: boolean
  }

  export type concepto_salarialOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id_concepto" | "nombre" | "recurrente" | "afecta_IPS" | "afecta_aguinaldo" | "id_concepto_salarial", ExtArgs["result"]["concepto_salarial"]>
  export type concepto_salarialInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    concepto_empleado?: boolean | concepto_salarial$concepto_empleadoArgs<ExtArgs>
    tipo_concepto_salarial?: boolean | tipo_concepto_salarialDefaultArgs<ExtArgs>
    detalle_nomina_concepto?: boolean | concepto_salarial$detalle_nomina_conceptoArgs<ExtArgs>
    _count?: boolean | Concepto_salarialCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type concepto_salarialIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    tipo_concepto_salarial?: boolean | tipo_concepto_salarialDefaultArgs<ExtArgs>
  }
  export type concepto_salarialIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    tipo_concepto_salarial?: boolean | tipo_concepto_salarialDefaultArgs<ExtArgs>
  }

  export type $concepto_salarialPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "concepto_salarial"
    objects: {
      concepto_empleado: Prisma.$concepto_empleadoPayload<ExtArgs>[]
      tipo_concepto_salarial: Prisma.$tipo_concepto_salarialPayload<ExtArgs>
      detalle_nomina_concepto: Prisma.$detalle_nomina_conceptoPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id_concepto: number
      nombre: string
      recurrente: boolean
      afecta_IPS: boolean
      afecta_aguinaldo: boolean
      id_concepto_salarial: number
    }, ExtArgs["result"]["concepto_salarial"]>
    composites: {}
  }

  type concepto_salarialGetPayload<S extends boolean | null | undefined | concepto_salarialDefaultArgs> = $Result.GetResult<Prisma.$concepto_salarialPayload, S>

  type concepto_salarialCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<concepto_salarialFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Concepto_salarialCountAggregateInputType | true
    }

  export interface concepto_salarialDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['concepto_salarial'], meta: { name: 'concepto_salarial' } }
    /**
     * Find zero or one Concepto_salarial that matches the filter.
     * @param {concepto_salarialFindUniqueArgs} args - Arguments to find a Concepto_salarial
     * @example
     * // Get one Concepto_salarial
     * const concepto_salarial = await prisma.concepto_salarial.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends concepto_salarialFindUniqueArgs>(args: SelectSubset<T, concepto_salarialFindUniqueArgs<ExtArgs>>): Prisma__concepto_salarialClient<$Result.GetResult<Prisma.$concepto_salarialPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Concepto_salarial that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {concepto_salarialFindUniqueOrThrowArgs} args - Arguments to find a Concepto_salarial
     * @example
     * // Get one Concepto_salarial
     * const concepto_salarial = await prisma.concepto_salarial.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends concepto_salarialFindUniqueOrThrowArgs>(args: SelectSubset<T, concepto_salarialFindUniqueOrThrowArgs<ExtArgs>>): Prisma__concepto_salarialClient<$Result.GetResult<Prisma.$concepto_salarialPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Concepto_salarial that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {concepto_salarialFindFirstArgs} args - Arguments to find a Concepto_salarial
     * @example
     * // Get one Concepto_salarial
     * const concepto_salarial = await prisma.concepto_salarial.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends concepto_salarialFindFirstArgs>(args?: SelectSubset<T, concepto_salarialFindFirstArgs<ExtArgs>>): Prisma__concepto_salarialClient<$Result.GetResult<Prisma.$concepto_salarialPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Concepto_salarial that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {concepto_salarialFindFirstOrThrowArgs} args - Arguments to find a Concepto_salarial
     * @example
     * // Get one Concepto_salarial
     * const concepto_salarial = await prisma.concepto_salarial.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends concepto_salarialFindFirstOrThrowArgs>(args?: SelectSubset<T, concepto_salarialFindFirstOrThrowArgs<ExtArgs>>): Prisma__concepto_salarialClient<$Result.GetResult<Prisma.$concepto_salarialPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Concepto_salarials that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {concepto_salarialFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Concepto_salarials
     * const concepto_salarials = await prisma.concepto_salarial.findMany()
     * 
     * // Get first 10 Concepto_salarials
     * const concepto_salarials = await prisma.concepto_salarial.findMany({ take: 10 })
     * 
     * // Only select the `id_concepto`
     * const concepto_salarialWithId_conceptoOnly = await prisma.concepto_salarial.findMany({ select: { id_concepto: true } })
     * 
     */
    findMany<T extends concepto_salarialFindManyArgs>(args?: SelectSubset<T, concepto_salarialFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$concepto_salarialPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Concepto_salarial.
     * @param {concepto_salarialCreateArgs} args - Arguments to create a Concepto_salarial.
     * @example
     * // Create one Concepto_salarial
     * const Concepto_salarial = await prisma.concepto_salarial.create({
     *   data: {
     *     // ... data to create a Concepto_salarial
     *   }
     * })
     * 
     */
    create<T extends concepto_salarialCreateArgs>(args: SelectSubset<T, concepto_salarialCreateArgs<ExtArgs>>): Prisma__concepto_salarialClient<$Result.GetResult<Prisma.$concepto_salarialPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Concepto_salarials.
     * @param {concepto_salarialCreateManyArgs} args - Arguments to create many Concepto_salarials.
     * @example
     * // Create many Concepto_salarials
     * const concepto_salarial = await prisma.concepto_salarial.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends concepto_salarialCreateManyArgs>(args?: SelectSubset<T, concepto_salarialCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Concepto_salarials and returns the data saved in the database.
     * @param {concepto_salarialCreateManyAndReturnArgs} args - Arguments to create many Concepto_salarials.
     * @example
     * // Create many Concepto_salarials
     * const concepto_salarial = await prisma.concepto_salarial.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Concepto_salarials and only return the `id_concepto`
     * const concepto_salarialWithId_conceptoOnly = await prisma.concepto_salarial.createManyAndReturn({
     *   select: { id_concepto: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends concepto_salarialCreateManyAndReturnArgs>(args?: SelectSubset<T, concepto_salarialCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$concepto_salarialPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Concepto_salarial.
     * @param {concepto_salarialDeleteArgs} args - Arguments to delete one Concepto_salarial.
     * @example
     * // Delete one Concepto_salarial
     * const Concepto_salarial = await prisma.concepto_salarial.delete({
     *   where: {
     *     // ... filter to delete one Concepto_salarial
     *   }
     * })
     * 
     */
    delete<T extends concepto_salarialDeleteArgs>(args: SelectSubset<T, concepto_salarialDeleteArgs<ExtArgs>>): Prisma__concepto_salarialClient<$Result.GetResult<Prisma.$concepto_salarialPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Concepto_salarial.
     * @param {concepto_salarialUpdateArgs} args - Arguments to update one Concepto_salarial.
     * @example
     * // Update one Concepto_salarial
     * const concepto_salarial = await prisma.concepto_salarial.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends concepto_salarialUpdateArgs>(args: SelectSubset<T, concepto_salarialUpdateArgs<ExtArgs>>): Prisma__concepto_salarialClient<$Result.GetResult<Prisma.$concepto_salarialPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Concepto_salarials.
     * @param {concepto_salarialDeleteManyArgs} args - Arguments to filter Concepto_salarials to delete.
     * @example
     * // Delete a few Concepto_salarials
     * const { count } = await prisma.concepto_salarial.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends concepto_salarialDeleteManyArgs>(args?: SelectSubset<T, concepto_salarialDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Concepto_salarials.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {concepto_salarialUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Concepto_salarials
     * const concepto_salarial = await prisma.concepto_salarial.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends concepto_salarialUpdateManyArgs>(args: SelectSubset<T, concepto_salarialUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Concepto_salarials and returns the data updated in the database.
     * @param {concepto_salarialUpdateManyAndReturnArgs} args - Arguments to update many Concepto_salarials.
     * @example
     * // Update many Concepto_salarials
     * const concepto_salarial = await prisma.concepto_salarial.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Concepto_salarials and only return the `id_concepto`
     * const concepto_salarialWithId_conceptoOnly = await prisma.concepto_salarial.updateManyAndReturn({
     *   select: { id_concepto: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends concepto_salarialUpdateManyAndReturnArgs>(args: SelectSubset<T, concepto_salarialUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$concepto_salarialPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Concepto_salarial.
     * @param {concepto_salarialUpsertArgs} args - Arguments to update or create a Concepto_salarial.
     * @example
     * // Update or create a Concepto_salarial
     * const concepto_salarial = await prisma.concepto_salarial.upsert({
     *   create: {
     *     // ... data to create a Concepto_salarial
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Concepto_salarial we want to update
     *   }
     * })
     */
    upsert<T extends concepto_salarialUpsertArgs>(args: SelectSubset<T, concepto_salarialUpsertArgs<ExtArgs>>): Prisma__concepto_salarialClient<$Result.GetResult<Prisma.$concepto_salarialPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Concepto_salarials.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {concepto_salarialCountArgs} args - Arguments to filter Concepto_salarials to count.
     * @example
     * // Count the number of Concepto_salarials
     * const count = await prisma.concepto_salarial.count({
     *   where: {
     *     // ... the filter for the Concepto_salarials we want to count
     *   }
     * })
    **/
    count<T extends concepto_salarialCountArgs>(
      args?: Subset<T, concepto_salarialCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Concepto_salarialCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Concepto_salarial.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Concepto_salarialAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Concepto_salarialAggregateArgs>(args: Subset<T, Concepto_salarialAggregateArgs>): Prisma.PrismaPromise<GetConcepto_salarialAggregateType<T>>

    /**
     * Group by Concepto_salarial.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {concepto_salarialGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends concepto_salarialGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: concepto_salarialGroupByArgs['orderBy'] }
        : { orderBy?: concepto_salarialGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, concepto_salarialGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetConcepto_salarialGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the concepto_salarial model
   */
  readonly fields: concepto_salarialFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for concepto_salarial.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__concepto_salarialClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    concepto_empleado<T extends concepto_salarial$concepto_empleadoArgs<ExtArgs> = {}>(args?: Subset<T, concepto_salarial$concepto_empleadoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$concepto_empleadoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    tipo_concepto_salarial<T extends tipo_concepto_salarialDefaultArgs<ExtArgs> = {}>(args?: Subset<T, tipo_concepto_salarialDefaultArgs<ExtArgs>>): Prisma__tipo_concepto_salarialClient<$Result.GetResult<Prisma.$tipo_concepto_salarialPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    detalle_nomina_concepto<T extends concepto_salarial$detalle_nomina_conceptoArgs<ExtArgs> = {}>(args?: Subset<T, concepto_salarial$detalle_nomina_conceptoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$detalle_nomina_conceptoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the concepto_salarial model
   */
  interface concepto_salarialFieldRefs {
    readonly id_concepto: FieldRef<"concepto_salarial", 'Int'>
    readonly nombre: FieldRef<"concepto_salarial", 'String'>
    readonly recurrente: FieldRef<"concepto_salarial", 'Boolean'>
    readonly afecta_IPS: FieldRef<"concepto_salarial", 'Boolean'>
    readonly afecta_aguinaldo: FieldRef<"concepto_salarial", 'Boolean'>
    readonly id_concepto_salarial: FieldRef<"concepto_salarial", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * concepto_salarial findUnique
   */
  export type concepto_salarialFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the concepto_salarial
     */
    select?: concepto_salarialSelect<ExtArgs> | null
    /**
     * Omit specific fields from the concepto_salarial
     */
    omit?: concepto_salarialOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: concepto_salarialInclude<ExtArgs> | null
    /**
     * Filter, which concepto_salarial to fetch.
     */
    where: concepto_salarialWhereUniqueInput
  }

  /**
   * concepto_salarial findUniqueOrThrow
   */
  export type concepto_salarialFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the concepto_salarial
     */
    select?: concepto_salarialSelect<ExtArgs> | null
    /**
     * Omit specific fields from the concepto_salarial
     */
    omit?: concepto_salarialOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: concepto_salarialInclude<ExtArgs> | null
    /**
     * Filter, which concepto_salarial to fetch.
     */
    where: concepto_salarialWhereUniqueInput
  }

  /**
   * concepto_salarial findFirst
   */
  export type concepto_salarialFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the concepto_salarial
     */
    select?: concepto_salarialSelect<ExtArgs> | null
    /**
     * Omit specific fields from the concepto_salarial
     */
    omit?: concepto_salarialOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: concepto_salarialInclude<ExtArgs> | null
    /**
     * Filter, which concepto_salarial to fetch.
     */
    where?: concepto_salarialWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of concepto_salarials to fetch.
     */
    orderBy?: concepto_salarialOrderByWithRelationInput | concepto_salarialOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for concepto_salarials.
     */
    cursor?: concepto_salarialWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` concepto_salarials from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` concepto_salarials.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of concepto_salarials.
     */
    distinct?: Concepto_salarialScalarFieldEnum | Concepto_salarialScalarFieldEnum[]
  }

  /**
   * concepto_salarial findFirstOrThrow
   */
  export type concepto_salarialFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the concepto_salarial
     */
    select?: concepto_salarialSelect<ExtArgs> | null
    /**
     * Omit specific fields from the concepto_salarial
     */
    omit?: concepto_salarialOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: concepto_salarialInclude<ExtArgs> | null
    /**
     * Filter, which concepto_salarial to fetch.
     */
    where?: concepto_salarialWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of concepto_salarials to fetch.
     */
    orderBy?: concepto_salarialOrderByWithRelationInput | concepto_salarialOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for concepto_salarials.
     */
    cursor?: concepto_salarialWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` concepto_salarials from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` concepto_salarials.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of concepto_salarials.
     */
    distinct?: Concepto_salarialScalarFieldEnum | Concepto_salarialScalarFieldEnum[]
  }

  /**
   * concepto_salarial findMany
   */
  export type concepto_salarialFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the concepto_salarial
     */
    select?: concepto_salarialSelect<ExtArgs> | null
    /**
     * Omit specific fields from the concepto_salarial
     */
    omit?: concepto_salarialOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: concepto_salarialInclude<ExtArgs> | null
    /**
     * Filter, which concepto_salarials to fetch.
     */
    where?: concepto_salarialWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of concepto_salarials to fetch.
     */
    orderBy?: concepto_salarialOrderByWithRelationInput | concepto_salarialOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing concepto_salarials.
     */
    cursor?: concepto_salarialWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` concepto_salarials from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` concepto_salarials.
     */
    skip?: number
    distinct?: Concepto_salarialScalarFieldEnum | Concepto_salarialScalarFieldEnum[]
  }

  /**
   * concepto_salarial create
   */
  export type concepto_salarialCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the concepto_salarial
     */
    select?: concepto_salarialSelect<ExtArgs> | null
    /**
     * Omit specific fields from the concepto_salarial
     */
    omit?: concepto_salarialOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: concepto_salarialInclude<ExtArgs> | null
    /**
     * The data needed to create a concepto_salarial.
     */
    data: XOR<concepto_salarialCreateInput, concepto_salarialUncheckedCreateInput>
  }

  /**
   * concepto_salarial createMany
   */
  export type concepto_salarialCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many concepto_salarials.
     */
    data: concepto_salarialCreateManyInput | concepto_salarialCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * concepto_salarial createManyAndReturn
   */
  export type concepto_salarialCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the concepto_salarial
     */
    select?: concepto_salarialSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the concepto_salarial
     */
    omit?: concepto_salarialOmit<ExtArgs> | null
    /**
     * The data used to create many concepto_salarials.
     */
    data: concepto_salarialCreateManyInput | concepto_salarialCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: concepto_salarialIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * concepto_salarial update
   */
  export type concepto_salarialUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the concepto_salarial
     */
    select?: concepto_salarialSelect<ExtArgs> | null
    /**
     * Omit specific fields from the concepto_salarial
     */
    omit?: concepto_salarialOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: concepto_salarialInclude<ExtArgs> | null
    /**
     * The data needed to update a concepto_salarial.
     */
    data: XOR<concepto_salarialUpdateInput, concepto_salarialUncheckedUpdateInput>
    /**
     * Choose, which concepto_salarial to update.
     */
    where: concepto_salarialWhereUniqueInput
  }

  /**
   * concepto_salarial updateMany
   */
  export type concepto_salarialUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update concepto_salarials.
     */
    data: XOR<concepto_salarialUpdateManyMutationInput, concepto_salarialUncheckedUpdateManyInput>
    /**
     * Filter which concepto_salarials to update
     */
    where?: concepto_salarialWhereInput
    /**
     * Limit how many concepto_salarials to update.
     */
    limit?: number
  }

  /**
   * concepto_salarial updateManyAndReturn
   */
  export type concepto_salarialUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the concepto_salarial
     */
    select?: concepto_salarialSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the concepto_salarial
     */
    omit?: concepto_salarialOmit<ExtArgs> | null
    /**
     * The data used to update concepto_salarials.
     */
    data: XOR<concepto_salarialUpdateManyMutationInput, concepto_salarialUncheckedUpdateManyInput>
    /**
     * Filter which concepto_salarials to update
     */
    where?: concepto_salarialWhereInput
    /**
     * Limit how many concepto_salarials to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: concepto_salarialIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * concepto_salarial upsert
   */
  export type concepto_salarialUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the concepto_salarial
     */
    select?: concepto_salarialSelect<ExtArgs> | null
    /**
     * Omit specific fields from the concepto_salarial
     */
    omit?: concepto_salarialOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: concepto_salarialInclude<ExtArgs> | null
    /**
     * The filter to search for the concepto_salarial to update in case it exists.
     */
    where: concepto_salarialWhereUniqueInput
    /**
     * In case the concepto_salarial found by the `where` argument doesn't exist, create a new concepto_salarial with this data.
     */
    create: XOR<concepto_salarialCreateInput, concepto_salarialUncheckedCreateInput>
    /**
     * In case the concepto_salarial was found with the provided `where` argument, update it with this data.
     */
    update: XOR<concepto_salarialUpdateInput, concepto_salarialUncheckedUpdateInput>
  }

  /**
   * concepto_salarial delete
   */
  export type concepto_salarialDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the concepto_salarial
     */
    select?: concepto_salarialSelect<ExtArgs> | null
    /**
     * Omit specific fields from the concepto_salarial
     */
    omit?: concepto_salarialOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: concepto_salarialInclude<ExtArgs> | null
    /**
     * Filter which concepto_salarial to delete.
     */
    where: concepto_salarialWhereUniqueInput
  }

  /**
   * concepto_salarial deleteMany
   */
  export type concepto_salarialDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which concepto_salarials to delete
     */
    where?: concepto_salarialWhereInput
    /**
     * Limit how many concepto_salarials to delete.
     */
    limit?: number
  }

  /**
   * concepto_salarial.concepto_empleado
   */
  export type concepto_salarial$concepto_empleadoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the concepto_empleado
     */
    select?: concepto_empleadoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the concepto_empleado
     */
    omit?: concepto_empleadoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: concepto_empleadoInclude<ExtArgs> | null
    where?: concepto_empleadoWhereInput
    orderBy?: concepto_empleadoOrderByWithRelationInput | concepto_empleadoOrderByWithRelationInput[]
    cursor?: concepto_empleadoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Concepto_empleadoScalarFieldEnum | Concepto_empleadoScalarFieldEnum[]
  }

  /**
   * concepto_salarial.detalle_nomina_concepto
   */
  export type concepto_salarial$detalle_nomina_conceptoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the detalle_nomina_concepto
     */
    select?: detalle_nomina_conceptoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the detalle_nomina_concepto
     */
    omit?: detalle_nomina_conceptoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: detalle_nomina_conceptoInclude<ExtArgs> | null
    where?: detalle_nomina_conceptoWhereInput
    orderBy?: detalle_nomina_conceptoOrderByWithRelationInput | detalle_nomina_conceptoOrderByWithRelationInput[]
    cursor?: detalle_nomina_conceptoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Detalle_nomina_conceptoScalarFieldEnum | Detalle_nomina_conceptoScalarFieldEnum[]
  }

  /**
   * concepto_salarial without action
   */
  export type concepto_salarialDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the concepto_salarial
     */
    select?: concepto_salarialSelect<ExtArgs> | null
    /**
     * Omit specific fields from the concepto_salarial
     */
    omit?: concepto_salarialOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: concepto_salarialInclude<ExtArgs> | null
  }


  /**
   * Model departamento
   */

  export type AggregateDepartamento = {
    _count: DepartamentoCountAggregateOutputType | null
    _avg: DepartamentoAvgAggregateOutputType | null
    _sum: DepartamentoSumAggregateOutputType | null
    _min: DepartamentoMinAggregateOutputType | null
    _max: DepartamentoMaxAggregateOutputType | null
  }

  export type DepartamentoAvgAggregateOutputType = {
    id_departamento: number | null
  }

  export type DepartamentoSumAggregateOutputType = {
    id_departamento: number | null
  }

  export type DepartamentoMinAggregateOutputType = {
    id_departamento: number | null
    nombre: string | null
    ubicacion: string | null
  }

  export type DepartamentoMaxAggregateOutputType = {
    id_departamento: number | null
    nombre: string | null
    ubicacion: string | null
  }

  export type DepartamentoCountAggregateOutputType = {
    id_departamento: number
    nombre: number
    ubicacion: number
    _all: number
  }


  export type DepartamentoAvgAggregateInputType = {
    id_departamento?: true
  }

  export type DepartamentoSumAggregateInputType = {
    id_departamento?: true
  }

  export type DepartamentoMinAggregateInputType = {
    id_departamento?: true
    nombre?: true
    ubicacion?: true
  }

  export type DepartamentoMaxAggregateInputType = {
    id_departamento?: true
    nombre?: true
    ubicacion?: true
  }

  export type DepartamentoCountAggregateInputType = {
    id_departamento?: true
    nombre?: true
    ubicacion?: true
    _all?: true
  }

  export type DepartamentoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which departamento to aggregate.
     */
    where?: departamentoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of departamentos to fetch.
     */
    orderBy?: departamentoOrderByWithRelationInput | departamentoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: departamentoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` departamentos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` departamentos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned departamentos
    **/
    _count?: true | DepartamentoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: DepartamentoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: DepartamentoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: DepartamentoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: DepartamentoMaxAggregateInputType
  }

  export type GetDepartamentoAggregateType<T extends DepartamentoAggregateArgs> = {
        [P in keyof T & keyof AggregateDepartamento]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateDepartamento[P]>
      : GetScalarType<T[P], AggregateDepartamento[P]>
  }




  export type departamentoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: departamentoWhereInput
    orderBy?: departamentoOrderByWithAggregationInput | departamentoOrderByWithAggregationInput[]
    by: DepartamentoScalarFieldEnum[] | DepartamentoScalarFieldEnum
    having?: departamentoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: DepartamentoCountAggregateInputType | true
    _avg?: DepartamentoAvgAggregateInputType
    _sum?: DepartamentoSumAggregateInputType
    _min?: DepartamentoMinAggregateInputType
    _max?: DepartamentoMaxAggregateInputType
  }

  export type DepartamentoGroupByOutputType = {
    id_departamento: number
    nombre: string
    ubicacion: string
    _count: DepartamentoCountAggregateOutputType | null
    _avg: DepartamentoAvgAggregateOutputType | null
    _sum: DepartamentoSumAggregateOutputType | null
    _min: DepartamentoMinAggregateOutputType | null
    _max: DepartamentoMaxAggregateOutputType | null
  }

  type GetDepartamentoGroupByPayload<T extends departamentoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<DepartamentoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof DepartamentoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], DepartamentoGroupByOutputType[P]>
            : GetScalarType<T[P], DepartamentoGroupByOutputType[P]>
        }
      >
    >


  export type departamentoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_departamento?: boolean
    nombre?: boolean
    ubicacion?: boolean
    cargo?: boolean | departamento$cargoArgs<ExtArgs>
    _count?: boolean | DepartamentoCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["departamento"]>

  export type departamentoSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_departamento?: boolean
    nombre?: boolean
    ubicacion?: boolean
  }, ExtArgs["result"]["departamento"]>

  export type departamentoSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_departamento?: boolean
    nombre?: boolean
    ubicacion?: boolean
  }, ExtArgs["result"]["departamento"]>

  export type departamentoSelectScalar = {
    id_departamento?: boolean
    nombre?: boolean
    ubicacion?: boolean
  }

  export type departamentoOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id_departamento" | "nombre" | "ubicacion", ExtArgs["result"]["departamento"]>
  export type departamentoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cargo?: boolean | departamento$cargoArgs<ExtArgs>
    _count?: boolean | DepartamentoCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type departamentoIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type departamentoIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $departamentoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "departamento"
    objects: {
      cargo: Prisma.$cargoPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id_departamento: number
      nombre: string
      ubicacion: string
    }, ExtArgs["result"]["departamento"]>
    composites: {}
  }

  type departamentoGetPayload<S extends boolean | null | undefined | departamentoDefaultArgs> = $Result.GetResult<Prisma.$departamentoPayload, S>

  type departamentoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<departamentoFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: DepartamentoCountAggregateInputType | true
    }

  export interface departamentoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['departamento'], meta: { name: 'departamento' } }
    /**
     * Find zero or one Departamento that matches the filter.
     * @param {departamentoFindUniqueArgs} args - Arguments to find a Departamento
     * @example
     * // Get one Departamento
     * const departamento = await prisma.departamento.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends departamentoFindUniqueArgs>(args: SelectSubset<T, departamentoFindUniqueArgs<ExtArgs>>): Prisma__departamentoClient<$Result.GetResult<Prisma.$departamentoPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Departamento that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {departamentoFindUniqueOrThrowArgs} args - Arguments to find a Departamento
     * @example
     * // Get one Departamento
     * const departamento = await prisma.departamento.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends departamentoFindUniqueOrThrowArgs>(args: SelectSubset<T, departamentoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__departamentoClient<$Result.GetResult<Prisma.$departamentoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Departamento that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {departamentoFindFirstArgs} args - Arguments to find a Departamento
     * @example
     * // Get one Departamento
     * const departamento = await prisma.departamento.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends departamentoFindFirstArgs>(args?: SelectSubset<T, departamentoFindFirstArgs<ExtArgs>>): Prisma__departamentoClient<$Result.GetResult<Prisma.$departamentoPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Departamento that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {departamentoFindFirstOrThrowArgs} args - Arguments to find a Departamento
     * @example
     * // Get one Departamento
     * const departamento = await prisma.departamento.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends departamentoFindFirstOrThrowArgs>(args?: SelectSubset<T, departamentoFindFirstOrThrowArgs<ExtArgs>>): Prisma__departamentoClient<$Result.GetResult<Prisma.$departamentoPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Departamentos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {departamentoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Departamentos
     * const departamentos = await prisma.departamento.findMany()
     * 
     * // Get first 10 Departamentos
     * const departamentos = await prisma.departamento.findMany({ take: 10 })
     * 
     * // Only select the `id_departamento`
     * const departamentoWithId_departamentoOnly = await prisma.departamento.findMany({ select: { id_departamento: true } })
     * 
     */
    findMany<T extends departamentoFindManyArgs>(args?: SelectSubset<T, departamentoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$departamentoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Departamento.
     * @param {departamentoCreateArgs} args - Arguments to create a Departamento.
     * @example
     * // Create one Departamento
     * const Departamento = await prisma.departamento.create({
     *   data: {
     *     // ... data to create a Departamento
     *   }
     * })
     * 
     */
    create<T extends departamentoCreateArgs>(args: SelectSubset<T, departamentoCreateArgs<ExtArgs>>): Prisma__departamentoClient<$Result.GetResult<Prisma.$departamentoPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Departamentos.
     * @param {departamentoCreateManyArgs} args - Arguments to create many Departamentos.
     * @example
     * // Create many Departamentos
     * const departamento = await prisma.departamento.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends departamentoCreateManyArgs>(args?: SelectSubset<T, departamentoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Departamentos and returns the data saved in the database.
     * @param {departamentoCreateManyAndReturnArgs} args - Arguments to create many Departamentos.
     * @example
     * // Create many Departamentos
     * const departamento = await prisma.departamento.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Departamentos and only return the `id_departamento`
     * const departamentoWithId_departamentoOnly = await prisma.departamento.createManyAndReturn({
     *   select: { id_departamento: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends departamentoCreateManyAndReturnArgs>(args?: SelectSubset<T, departamentoCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$departamentoPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Departamento.
     * @param {departamentoDeleteArgs} args - Arguments to delete one Departamento.
     * @example
     * // Delete one Departamento
     * const Departamento = await prisma.departamento.delete({
     *   where: {
     *     // ... filter to delete one Departamento
     *   }
     * })
     * 
     */
    delete<T extends departamentoDeleteArgs>(args: SelectSubset<T, departamentoDeleteArgs<ExtArgs>>): Prisma__departamentoClient<$Result.GetResult<Prisma.$departamentoPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Departamento.
     * @param {departamentoUpdateArgs} args - Arguments to update one Departamento.
     * @example
     * // Update one Departamento
     * const departamento = await prisma.departamento.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends departamentoUpdateArgs>(args: SelectSubset<T, departamentoUpdateArgs<ExtArgs>>): Prisma__departamentoClient<$Result.GetResult<Prisma.$departamentoPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Departamentos.
     * @param {departamentoDeleteManyArgs} args - Arguments to filter Departamentos to delete.
     * @example
     * // Delete a few Departamentos
     * const { count } = await prisma.departamento.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends departamentoDeleteManyArgs>(args?: SelectSubset<T, departamentoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Departamentos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {departamentoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Departamentos
     * const departamento = await prisma.departamento.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends departamentoUpdateManyArgs>(args: SelectSubset<T, departamentoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Departamentos and returns the data updated in the database.
     * @param {departamentoUpdateManyAndReturnArgs} args - Arguments to update many Departamentos.
     * @example
     * // Update many Departamentos
     * const departamento = await prisma.departamento.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Departamentos and only return the `id_departamento`
     * const departamentoWithId_departamentoOnly = await prisma.departamento.updateManyAndReturn({
     *   select: { id_departamento: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends departamentoUpdateManyAndReturnArgs>(args: SelectSubset<T, departamentoUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$departamentoPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Departamento.
     * @param {departamentoUpsertArgs} args - Arguments to update or create a Departamento.
     * @example
     * // Update or create a Departamento
     * const departamento = await prisma.departamento.upsert({
     *   create: {
     *     // ... data to create a Departamento
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Departamento we want to update
     *   }
     * })
     */
    upsert<T extends departamentoUpsertArgs>(args: SelectSubset<T, departamentoUpsertArgs<ExtArgs>>): Prisma__departamentoClient<$Result.GetResult<Prisma.$departamentoPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Departamentos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {departamentoCountArgs} args - Arguments to filter Departamentos to count.
     * @example
     * // Count the number of Departamentos
     * const count = await prisma.departamento.count({
     *   where: {
     *     // ... the filter for the Departamentos we want to count
     *   }
     * })
    **/
    count<T extends departamentoCountArgs>(
      args?: Subset<T, departamentoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], DepartamentoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Departamento.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DepartamentoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends DepartamentoAggregateArgs>(args: Subset<T, DepartamentoAggregateArgs>): Prisma.PrismaPromise<GetDepartamentoAggregateType<T>>

    /**
     * Group by Departamento.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {departamentoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends departamentoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: departamentoGroupByArgs['orderBy'] }
        : { orderBy?: departamentoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, departamentoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDepartamentoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the departamento model
   */
  readonly fields: departamentoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for departamento.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__departamentoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    cargo<T extends departamento$cargoArgs<ExtArgs> = {}>(args?: Subset<T, departamento$cargoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$cargoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the departamento model
   */
  interface departamentoFieldRefs {
    readonly id_departamento: FieldRef<"departamento", 'Int'>
    readonly nombre: FieldRef<"departamento", 'String'>
    readonly ubicacion: FieldRef<"departamento", 'String'>
  }
    

  // Custom InputTypes
  /**
   * departamento findUnique
   */
  export type departamentoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the departamento
     */
    select?: departamentoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the departamento
     */
    omit?: departamentoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: departamentoInclude<ExtArgs> | null
    /**
     * Filter, which departamento to fetch.
     */
    where: departamentoWhereUniqueInput
  }

  /**
   * departamento findUniqueOrThrow
   */
  export type departamentoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the departamento
     */
    select?: departamentoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the departamento
     */
    omit?: departamentoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: departamentoInclude<ExtArgs> | null
    /**
     * Filter, which departamento to fetch.
     */
    where: departamentoWhereUniqueInput
  }

  /**
   * departamento findFirst
   */
  export type departamentoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the departamento
     */
    select?: departamentoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the departamento
     */
    omit?: departamentoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: departamentoInclude<ExtArgs> | null
    /**
     * Filter, which departamento to fetch.
     */
    where?: departamentoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of departamentos to fetch.
     */
    orderBy?: departamentoOrderByWithRelationInput | departamentoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for departamentos.
     */
    cursor?: departamentoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` departamentos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` departamentos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of departamentos.
     */
    distinct?: DepartamentoScalarFieldEnum | DepartamentoScalarFieldEnum[]
  }

  /**
   * departamento findFirstOrThrow
   */
  export type departamentoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the departamento
     */
    select?: departamentoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the departamento
     */
    omit?: departamentoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: departamentoInclude<ExtArgs> | null
    /**
     * Filter, which departamento to fetch.
     */
    where?: departamentoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of departamentos to fetch.
     */
    orderBy?: departamentoOrderByWithRelationInput | departamentoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for departamentos.
     */
    cursor?: departamentoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` departamentos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` departamentos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of departamentos.
     */
    distinct?: DepartamentoScalarFieldEnum | DepartamentoScalarFieldEnum[]
  }

  /**
   * departamento findMany
   */
  export type departamentoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the departamento
     */
    select?: departamentoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the departamento
     */
    omit?: departamentoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: departamentoInclude<ExtArgs> | null
    /**
     * Filter, which departamentos to fetch.
     */
    where?: departamentoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of departamentos to fetch.
     */
    orderBy?: departamentoOrderByWithRelationInput | departamentoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing departamentos.
     */
    cursor?: departamentoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` departamentos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` departamentos.
     */
    skip?: number
    distinct?: DepartamentoScalarFieldEnum | DepartamentoScalarFieldEnum[]
  }

  /**
   * departamento create
   */
  export type departamentoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the departamento
     */
    select?: departamentoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the departamento
     */
    omit?: departamentoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: departamentoInclude<ExtArgs> | null
    /**
     * The data needed to create a departamento.
     */
    data: XOR<departamentoCreateInput, departamentoUncheckedCreateInput>
  }

  /**
   * departamento createMany
   */
  export type departamentoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many departamentos.
     */
    data: departamentoCreateManyInput | departamentoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * departamento createManyAndReturn
   */
  export type departamentoCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the departamento
     */
    select?: departamentoSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the departamento
     */
    omit?: departamentoOmit<ExtArgs> | null
    /**
     * The data used to create many departamentos.
     */
    data: departamentoCreateManyInput | departamentoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * departamento update
   */
  export type departamentoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the departamento
     */
    select?: departamentoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the departamento
     */
    omit?: departamentoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: departamentoInclude<ExtArgs> | null
    /**
     * The data needed to update a departamento.
     */
    data: XOR<departamentoUpdateInput, departamentoUncheckedUpdateInput>
    /**
     * Choose, which departamento to update.
     */
    where: departamentoWhereUniqueInput
  }

  /**
   * departamento updateMany
   */
  export type departamentoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update departamentos.
     */
    data: XOR<departamentoUpdateManyMutationInput, departamentoUncheckedUpdateManyInput>
    /**
     * Filter which departamentos to update
     */
    where?: departamentoWhereInput
    /**
     * Limit how many departamentos to update.
     */
    limit?: number
  }

  /**
   * departamento updateManyAndReturn
   */
  export type departamentoUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the departamento
     */
    select?: departamentoSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the departamento
     */
    omit?: departamentoOmit<ExtArgs> | null
    /**
     * The data used to update departamentos.
     */
    data: XOR<departamentoUpdateManyMutationInput, departamentoUncheckedUpdateManyInput>
    /**
     * Filter which departamentos to update
     */
    where?: departamentoWhereInput
    /**
     * Limit how many departamentos to update.
     */
    limit?: number
  }

  /**
   * departamento upsert
   */
  export type departamentoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the departamento
     */
    select?: departamentoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the departamento
     */
    omit?: departamentoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: departamentoInclude<ExtArgs> | null
    /**
     * The filter to search for the departamento to update in case it exists.
     */
    where: departamentoWhereUniqueInput
    /**
     * In case the departamento found by the `where` argument doesn't exist, create a new departamento with this data.
     */
    create: XOR<departamentoCreateInput, departamentoUncheckedCreateInput>
    /**
     * In case the departamento was found with the provided `where` argument, update it with this data.
     */
    update: XOR<departamentoUpdateInput, departamentoUncheckedUpdateInput>
  }

  /**
   * departamento delete
   */
  export type departamentoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the departamento
     */
    select?: departamentoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the departamento
     */
    omit?: departamentoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: departamentoInclude<ExtArgs> | null
    /**
     * Filter which departamento to delete.
     */
    where: departamentoWhereUniqueInput
  }

  /**
   * departamento deleteMany
   */
  export type departamentoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which departamentos to delete
     */
    where?: departamentoWhereInput
    /**
     * Limit how many departamentos to delete.
     */
    limit?: number
  }

  /**
   * departamento.cargo
   */
  export type departamento$cargoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cargo
     */
    select?: cargoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cargo
     */
    omit?: cargoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cargoInclude<ExtArgs> | null
    where?: cargoWhereInput
    orderBy?: cargoOrderByWithRelationInput | cargoOrderByWithRelationInput[]
    cursor?: cargoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CargoScalarFieldEnum | CargoScalarFieldEnum[]
  }

  /**
   * departamento without action
   */
  export type departamentoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the departamento
     */
    select?: departamentoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the departamento
     */
    omit?: departamentoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: departamentoInclude<ExtArgs> | null
  }


  /**
   * Model detalle_nomina
   */

  export type AggregateDetalle_nomina = {
    _count: Detalle_nominaCountAggregateOutputType | null
    _avg: Detalle_nominaAvgAggregateOutputType | null
    _sum: Detalle_nominaSumAggregateOutputType | null
    _min: Detalle_nominaMinAggregateOutputType | null
    _max: Detalle_nominaMaxAggregateOutputType | null
  }

  export type Detalle_nominaAvgAggregateOutputType = {
    id_detalle: number | null
    total_descuentos: Decimal | null
    total_bonificaciones: Decimal | null
    neto_a_cobrar: number | null
    creado_por: number | null
    id_nomina: number | null
    id_empleado: number | null
  }

  export type Detalle_nominaSumAggregateOutputType = {
    id_detalle: number | null
    total_descuentos: Decimal | null
    total_bonificaciones: Decimal | null
    neto_a_cobrar: number | null
    creado_por: number | null
    id_nomina: number | null
    id_empleado: number | null
  }

  export type Detalle_nominaMinAggregateOutputType = {
    id_detalle: number | null
    total_descuentos: Decimal | null
    total_bonificaciones: Decimal | null
    neto_a_cobrar: number | null
    creado_por: number | null
    id_nomina: number | null
    id_empleado: number | null
  }

  export type Detalle_nominaMaxAggregateOutputType = {
    id_detalle: number | null
    total_descuentos: Decimal | null
    total_bonificaciones: Decimal | null
    neto_a_cobrar: number | null
    creado_por: number | null
    id_nomina: number | null
    id_empleado: number | null
  }

  export type Detalle_nominaCountAggregateOutputType = {
    id_detalle: number
    total_descuentos: number
    total_bonificaciones: number
    neto_a_cobrar: number
    creado_por: number
    id_nomina: number
    id_empleado: number
    _all: number
  }


  export type Detalle_nominaAvgAggregateInputType = {
    id_detalle?: true
    total_descuentos?: true
    total_bonificaciones?: true
    neto_a_cobrar?: true
    creado_por?: true
    id_nomina?: true
    id_empleado?: true
  }

  export type Detalle_nominaSumAggregateInputType = {
    id_detalle?: true
    total_descuentos?: true
    total_bonificaciones?: true
    neto_a_cobrar?: true
    creado_por?: true
    id_nomina?: true
    id_empleado?: true
  }

  export type Detalle_nominaMinAggregateInputType = {
    id_detalle?: true
    total_descuentos?: true
    total_bonificaciones?: true
    neto_a_cobrar?: true
    creado_por?: true
    id_nomina?: true
    id_empleado?: true
  }

  export type Detalle_nominaMaxAggregateInputType = {
    id_detalle?: true
    total_descuentos?: true
    total_bonificaciones?: true
    neto_a_cobrar?: true
    creado_por?: true
    id_nomina?: true
    id_empleado?: true
  }

  export type Detalle_nominaCountAggregateInputType = {
    id_detalle?: true
    total_descuentos?: true
    total_bonificaciones?: true
    neto_a_cobrar?: true
    creado_por?: true
    id_nomina?: true
    id_empleado?: true
    _all?: true
  }

  export type Detalle_nominaAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which detalle_nomina to aggregate.
     */
    where?: detalle_nominaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of detalle_nominas to fetch.
     */
    orderBy?: detalle_nominaOrderByWithRelationInput | detalle_nominaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: detalle_nominaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` detalle_nominas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` detalle_nominas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned detalle_nominas
    **/
    _count?: true | Detalle_nominaCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Detalle_nominaAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Detalle_nominaSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Detalle_nominaMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Detalle_nominaMaxAggregateInputType
  }

  export type GetDetalle_nominaAggregateType<T extends Detalle_nominaAggregateArgs> = {
        [P in keyof T & keyof AggregateDetalle_nomina]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateDetalle_nomina[P]>
      : GetScalarType<T[P], AggregateDetalle_nomina[P]>
  }




  export type detalle_nominaGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: detalle_nominaWhereInput
    orderBy?: detalle_nominaOrderByWithAggregationInput | detalle_nominaOrderByWithAggregationInput[]
    by: Detalle_nominaScalarFieldEnum[] | Detalle_nominaScalarFieldEnum
    having?: detalle_nominaScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Detalle_nominaCountAggregateInputType | true
    _avg?: Detalle_nominaAvgAggregateInputType
    _sum?: Detalle_nominaSumAggregateInputType
    _min?: Detalle_nominaMinAggregateInputType
    _max?: Detalle_nominaMaxAggregateInputType
  }

  export type Detalle_nominaGroupByOutputType = {
    id_detalle: number
    total_descuentos: Decimal
    total_bonificaciones: Decimal
    neto_a_cobrar: number
    creado_por: number
    id_nomina: number
    id_empleado: number
    _count: Detalle_nominaCountAggregateOutputType | null
    _avg: Detalle_nominaAvgAggregateOutputType | null
    _sum: Detalle_nominaSumAggregateOutputType | null
    _min: Detalle_nominaMinAggregateOutputType | null
    _max: Detalle_nominaMaxAggregateOutputType | null
  }

  type GetDetalle_nominaGroupByPayload<T extends detalle_nominaGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Detalle_nominaGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Detalle_nominaGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Detalle_nominaGroupByOutputType[P]>
            : GetScalarType<T[P], Detalle_nominaGroupByOutputType[P]>
        }
      >
    >


  export type detalle_nominaSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_detalle?: boolean
    total_descuentos?: boolean
    total_bonificaciones?: boolean
    neto_a_cobrar?: boolean
    creado_por?: boolean
    id_nomina?: boolean
    id_empleado?: boolean
    usuario?: boolean | usuarioDefaultArgs<ExtArgs>
    empleado?: boolean | empleadoDefaultArgs<ExtArgs>
    nomina?: boolean | nominaDefaultArgs<ExtArgs>
    detalle_nomina_concepto?: boolean | detalle_nomina$detalle_nomina_conceptoArgs<ExtArgs>
    _count?: boolean | Detalle_nominaCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["detalle_nomina"]>

  export type detalle_nominaSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_detalle?: boolean
    total_descuentos?: boolean
    total_bonificaciones?: boolean
    neto_a_cobrar?: boolean
    creado_por?: boolean
    id_nomina?: boolean
    id_empleado?: boolean
    usuario?: boolean | usuarioDefaultArgs<ExtArgs>
    empleado?: boolean | empleadoDefaultArgs<ExtArgs>
    nomina?: boolean | nominaDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["detalle_nomina"]>

  export type detalle_nominaSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_detalle?: boolean
    total_descuentos?: boolean
    total_bonificaciones?: boolean
    neto_a_cobrar?: boolean
    creado_por?: boolean
    id_nomina?: boolean
    id_empleado?: boolean
    usuario?: boolean | usuarioDefaultArgs<ExtArgs>
    empleado?: boolean | empleadoDefaultArgs<ExtArgs>
    nomina?: boolean | nominaDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["detalle_nomina"]>

  export type detalle_nominaSelectScalar = {
    id_detalle?: boolean
    total_descuentos?: boolean
    total_bonificaciones?: boolean
    neto_a_cobrar?: boolean
    creado_por?: boolean
    id_nomina?: boolean
    id_empleado?: boolean
  }

  export type detalle_nominaOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id_detalle" | "total_descuentos" | "total_bonificaciones" | "neto_a_cobrar" | "creado_por" | "id_nomina" | "id_empleado", ExtArgs["result"]["detalle_nomina"]>
  export type detalle_nominaInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    usuario?: boolean | usuarioDefaultArgs<ExtArgs>
    empleado?: boolean | empleadoDefaultArgs<ExtArgs>
    nomina?: boolean | nominaDefaultArgs<ExtArgs>
    detalle_nomina_concepto?: boolean | detalle_nomina$detalle_nomina_conceptoArgs<ExtArgs>
    _count?: boolean | Detalle_nominaCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type detalle_nominaIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    usuario?: boolean | usuarioDefaultArgs<ExtArgs>
    empleado?: boolean | empleadoDefaultArgs<ExtArgs>
    nomina?: boolean | nominaDefaultArgs<ExtArgs>
  }
  export type detalle_nominaIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    usuario?: boolean | usuarioDefaultArgs<ExtArgs>
    empleado?: boolean | empleadoDefaultArgs<ExtArgs>
    nomina?: boolean | nominaDefaultArgs<ExtArgs>
  }

  export type $detalle_nominaPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "detalle_nomina"
    objects: {
      usuario: Prisma.$usuarioPayload<ExtArgs>
      empleado: Prisma.$empleadoPayload<ExtArgs>
      nomina: Prisma.$nominaPayload<ExtArgs>
      detalle_nomina_concepto: Prisma.$detalle_nomina_conceptoPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id_detalle: number
      total_descuentos: Prisma.Decimal
      total_bonificaciones: Prisma.Decimal
      neto_a_cobrar: number
      creado_por: number
      id_nomina: number
      id_empleado: number
    }, ExtArgs["result"]["detalle_nomina"]>
    composites: {}
  }

  type detalle_nominaGetPayload<S extends boolean | null | undefined | detalle_nominaDefaultArgs> = $Result.GetResult<Prisma.$detalle_nominaPayload, S>

  type detalle_nominaCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<detalle_nominaFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Detalle_nominaCountAggregateInputType | true
    }

  export interface detalle_nominaDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['detalle_nomina'], meta: { name: 'detalle_nomina' } }
    /**
     * Find zero or one Detalle_nomina that matches the filter.
     * @param {detalle_nominaFindUniqueArgs} args - Arguments to find a Detalle_nomina
     * @example
     * // Get one Detalle_nomina
     * const detalle_nomina = await prisma.detalle_nomina.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends detalle_nominaFindUniqueArgs>(args: SelectSubset<T, detalle_nominaFindUniqueArgs<ExtArgs>>): Prisma__detalle_nominaClient<$Result.GetResult<Prisma.$detalle_nominaPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Detalle_nomina that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {detalle_nominaFindUniqueOrThrowArgs} args - Arguments to find a Detalle_nomina
     * @example
     * // Get one Detalle_nomina
     * const detalle_nomina = await prisma.detalle_nomina.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends detalle_nominaFindUniqueOrThrowArgs>(args: SelectSubset<T, detalle_nominaFindUniqueOrThrowArgs<ExtArgs>>): Prisma__detalle_nominaClient<$Result.GetResult<Prisma.$detalle_nominaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Detalle_nomina that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {detalle_nominaFindFirstArgs} args - Arguments to find a Detalle_nomina
     * @example
     * // Get one Detalle_nomina
     * const detalle_nomina = await prisma.detalle_nomina.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends detalle_nominaFindFirstArgs>(args?: SelectSubset<T, detalle_nominaFindFirstArgs<ExtArgs>>): Prisma__detalle_nominaClient<$Result.GetResult<Prisma.$detalle_nominaPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Detalle_nomina that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {detalle_nominaFindFirstOrThrowArgs} args - Arguments to find a Detalle_nomina
     * @example
     * // Get one Detalle_nomina
     * const detalle_nomina = await prisma.detalle_nomina.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends detalle_nominaFindFirstOrThrowArgs>(args?: SelectSubset<T, detalle_nominaFindFirstOrThrowArgs<ExtArgs>>): Prisma__detalle_nominaClient<$Result.GetResult<Prisma.$detalle_nominaPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Detalle_nominas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {detalle_nominaFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Detalle_nominas
     * const detalle_nominas = await prisma.detalle_nomina.findMany()
     * 
     * // Get first 10 Detalle_nominas
     * const detalle_nominas = await prisma.detalle_nomina.findMany({ take: 10 })
     * 
     * // Only select the `id_detalle`
     * const detalle_nominaWithId_detalleOnly = await prisma.detalle_nomina.findMany({ select: { id_detalle: true } })
     * 
     */
    findMany<T extends detalle_nominaFindManyArgs>(args?: SelectSubset<T, detalle_nominaFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$detalle_nominaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Detalle_nomina.
     * @param {detalle_nominaCreateArgs} args - Arguments to create a Detalle_nomina.
     * @example
     * // Create one Detalle_nomina
     * const Detalle_nomina = await prisma.detalle_nomina.create({
     *   data: {
     *     // ... data to create a Detalle_nomina
     *   }
     * })
     * 
     */
    create<T extends detalle_nominaCreateArgs>(args: SelectSubset<T, detalle_nominaCreateArgs<ExtArgs>>): Prisma__detalle_nominaClient<$Result.GetResult<Prisma.$detalle_nominaPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Detalle_nominas.
     * @param {detalle_nominaCreateManyArgs} args - Arguments to create many Detalle_nominas.
     * @example
     * // Create many Detalle_nominas
     * const detalle_nomina = await prisma.detalle_nomina.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends detalle_nominaCreateManyArgs>(args?: SelectSubset<T, detalle_nominaCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Detalle_nominas and returns the data saved in the database.
     * @param {detalle_nominaCreateManyAndReturnArgs} args - Arguments to create many Detalle_nominas.
     * @example
     * // Create many Detalle_nominas
     * const detalle_nomina = await prisma.detalle_nomina.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Detalle_nominas and only return the `id_detalle`
     * const detalle_nominaWithId_detalleOnly = await prisma.detalle_nomina.createManyAndReturn({
     *   select: { id_detalle: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends detalle_nominaCreateManyAndReturnArgs>(args?: SelectSubset<T, detalle_nominaCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$detalle_nominaPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Detalle_nomina.
     * @param {detalle_nominaDeleteArgs} args - Arguments to delete one Detalle_nomina.
     * @example
     * // Delete one Detalle_nomina
     * const Detalle_nomina = await prisma.detalle_nomina.delete({
     *   where: {
     *     // ... filter to delete one Detalle_nomina
     *   }
     * })
     * 
     */
    delete<T extends detalle_nominaDeleteArgs>(args: SelectSubset<T, detalle_nominaDeleteArgs<ExtArgs>>): Prisma__detalle_nominaClient<$Result.GetResult<Prisma.$detalle_nominaPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Detalle_nomina.
     * @param {detalle_nominaUpdateArgs} args - Arguments to update one Detalle_nomina.
     * @example
     * // Update one Detalle_nomina
     * const detalle_nomina = await prisma.detalle_nomina.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends detalle_nominaUpdateArgs>(args: SelectSubset<T, detalle_nominaUpdateArgs<ExtArgs>>): Prisma__detalle_nominaClient<$Result.GetResult<Prisma.$detalle_nominaPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Detalle_nominas.
     * @param {detalle_nominaDeleteManyArgs} args - Arguments to filter Detalle_nominas to delete.
     * @example
     * // Delete a few Detalle_nominas
     * const { count } = await prisma.detalle_nomina.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends detalle_nominaDeleteManyArgs>(args?: SelectSubset<T, detalle_nominaDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Detalle_nominas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {detalle_nominaUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Detalle_nominas
     * const detalle_nomina = await prisma.detalle_nomina.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends detalle_nominaUpdateManyArgs>(args: SelectSubset<T, detalle_nominaUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Detalle_nominas and returns the data updated in the database.
     * @param {detalle_nominaUpdateManyAndReturnArgs} args - Arguments to update many Detalle_nominas.
     * @example
     * // Update many Detalle_nominas
     * const detalle_nomina = await prisma.detalle_nomina.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Detalle_nominas and only return the `id_detalle`
     * const detalle_nominaWithId_detalleOnly = await prisma.detalle_nomina.updateManyAndReturn({
     *   select: { id_detalle: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends detalle_nominaUpdateManyAndReturnArgs>(args: SelectSubset<T, detalle_nominaUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$detalle_nominaPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Detalle_nomina.
     * @param {detalle_nominaUpsertArgs} args - Arguments to update or create a Detalle_nomina.
     * @example
     * // Update or create a Detalle_nomina
     * const detalle_nomina = await prisma.detalle_nomina.upsert({
     *   create: {
     *     // ... data to create a Detalle_nomina
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Detalle_nomina we want to update
     *   }
     * })
     */
    upsert<T extends detalle_nominaUpsertArgs>(args: SelectSubset<T, detalle_nominaUpsertArgs<ExtArgs>>): Prisma__detalle_nominaClient<$Result.GetResult<Prisma.$detalle_nominaPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Detalle_nominas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {detalle_nominaCountArgs} args - Arguments to filter Detalle_nominas to count.
     * @example
     * // Count the number of Detalle_nominas
     * const count = await prisma.detalle_nomina.count({
     *   where: {
     *     // ... the filter for the Detalle_nominas we want to count
     *   }
     * })
    **/
    count<T extends detalle_nominaCountArgs>(
      args?: Subset<T, detalle_nominaCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Detalle_nominaCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Detalle_nomina.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Detalle_nominaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Detalle_nominaAggregateArgs>(args: Subset<T, Detalle_nominaAggregateArgs>): Prisma.PrismaPromise<GetDetalle_nominaAggregateType<T>>

    /**
     * Group by Detalle_nomina.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {detalle_nominaGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends detalle_nominaGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: detalle_nominaGroupByArgs['orderBy'] }
        : { orderBy?: detalle_nominaGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, detalle_nominaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDetalle_nominaGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the detalle_nomina model
   */
  readonly fields: detalle_nominaFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for detalle_nomina.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__detalle_nominaClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    usuario<T extends usuarioDefaultArgs<ExtArgs> = {}>(args?: Subset<T, usuarioDefaultArgs<ExtArgs>>): Prisma__usuarioClient<$Result.GetResult<Prisma.$usuarioPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    empleado<T extends empleadoDefaultArgs<ExtArgs> = {}>(args?: Subset<T, empleadoDefaultArgs<ExtArgs>>): Prisma__empleadoClient<$Result.GetResult<Prisma.$empleadoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    nomina<T extends nominaDefaultArgs<ExtArgs> = {}>(args?: Subset<T, nominaDefaultArgs<ExtArgs>>): Prisma__nominaClient<$Result.GetResult<Prisma.$nominaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    detalle_nomina_concepto<T extends detalle_nomina$detalle_nomina_conceptoArgs<ExtArgs> = {}>(args?: Subset<T, detalle_nomina$detalle_nomina_conceptoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$detalle_nomina_conceptoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the detalle_nomina model
   */
  interface detalle_nominaFieldRefs {
    readonly id_detalle: FieldRef<"detalle_nomina", 'Int'>
    readonly total_descuentos: FieldRef<"detalle_nomina", 'Decimal'>
    readonly total_bonificaciones: FieldRef<"detalle_nomina", 'Decimal'>
    readonly neto_a_cobrar: FieldRef<"detalle_nomina", 'Int'>
    readonly creado_por: FieldRef<"detalle_nomina", 'Int'>
    readonly id_nomina: FieldRef<"detalle_nomina", 'Int'>
    readonly id_empleado: FieldRef<"detalle_nomina", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * detalle_nomina findUnique
   */
  export type detalle_nominaFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the detalle_nomina
     */
    select?: detalle_nominaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the detalle_nomina
     */
    omit?: detalle_nominaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: detalle_nominaInclude<ExtArgs> | null
    /**
     * Filter, which detalle_nomina to fetch.
     */
    where: detalle_nominaWhereUniqueInput
  }

  /**
   * detalle_nomina findUniqueOrThrow
   */
  export type detalle_nominaFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the detalle_nomina
     */
    select?: detalle_nominaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the detalle_nomina
     */
    omit?: detalle_nominaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: detalle_nominaInclude<ExtArgs> | null
    /**
     * Filter, which detalle_nomina to fetch.
     */
    where: detalle_nominaWhereUniqueInput
  }

  /**
   * detalle_nomina findFirst
   */
  export type detalle_nominaFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the detalle_nomina
     */
    select?: detalle_nominaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the detalle_nomina
     */
    omit?: detalle_nominaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: detalle_nominaInclude<ExtArgs> | null
    /**
     * Filter, which detalle_nomina to fetch.
     */
    where?: detalle_nominaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of detalle_nominas to fetch.
     */
    orderBy?: detalle_nominaOrderByWithRelationInput | detalle_nominaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for detalle_nominas.
     */
    cursor?: detalle_nominaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` detalle_nominas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` detalle_nominas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of detalle_nominas.
     */
    distinct?: Detalle_nominaScalarFieldEnum | Detalle_nominaScalarFieldEnum[]
  }

  /**
   * detalle_nomina findFirstOrThrow
   */
  export type detalle_nominaFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the detalle_nomina
     */
    select?: detalle_nominaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the detalle_nomina
     */
    omit?: detalle_nominaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: detalle_nominaInclude<ExtArgs> | null
    /**
     * Filter, which detalle_nomina to fetch.
     */
    where?: detalle_nominaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of detalle_nominas to fetch.
     */
    orderBy?: detalle_nominaOrderByWithRelationInput | detalle_nominaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for detalle_nominas.
     */
    cursor?: detalle_nominaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` detalle_nominas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` detalle_nominas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of detalle_nominas.
     */
    distinct?: Detalle_nominaScalarFieldEnum | Detalle_nominaScalarFieldEnum[]
  }

  /**
   * detalle_nomina findMany
   */
  export type detalle_nominaFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the detalle_nomina
     */
    select?: detalle_nominaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the detalle_nomina
     */
    omit?: detalle_nominaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: detalle_nominaInclude<ExtArgs> | null
    /**
     * Filter, which detalle_nominas to fetch.
     */
    where?: detalle_nominaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of detalle_nominas to fetch.
     */
    orderBy?: detalle_nominaOrderByWithRelationInput | detalle_nominaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing detalle_nominas.
     */
    cursor?: detalle_nominaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` detalle_nominas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` detalle_nominas.
     */
    skip?: number
    distinct?: Detalle_nominaScalarFieldEnum | Detalle_nominaScalarFieldEnum[]
  }

  /**
   * detalle_nomina create
   */
  export type detalle_nominaCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the detalle_nomina
     */
    select?: detalle_nominaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the detalle_nomina
     */
    omit?: detalle_nominaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: detalle_nominaInclude<ExtArgs> | null
    /**
     * The data needed to create a detalle_nomina.
     */
    data: XOR<detalle_nominaCreateInput, detalle_nominaUncheckedCreateInput>
  }

  /**
   * detalle_nomina createMany
   */
  export type detalle_nominaCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many detalle_nominas.
     */
    data: detalle_nominaCreateManyInput | detalle_nominaCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * detalle_nomina createManyAndReturn
   */
  export type detalle_nominaCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the detalle_nomina
     */
    select?: detalle_nominaSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the detalle_nomina
     */
    omit?: detalle_nominaOmit<ExtArgs> | null
    /**
     * The data used to create many detalle_nominas.
     */
    data: detalle_nominaCreateManyInput | detalle_nominaCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: detalle_nominaIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * detalle_nomina update
   */
  export type detalle_nominaUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the detalle_nomina
     */
    select?: detalle_nominaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the detalle_nomina
     */
    omit?: detalle_nominaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: detalle_nominaInclude<ExtArgs> | null
    /**
     * The data needed to update a detalle_nomina.
     */
    data: XOR<detalle_nominaUpdateInput, detalle_nominaUncheckedUpdateInput>
    /**
     * Choose, which detalle_nomina to update.
     */
    where: detalle_nominaWhereUniqueInput
  }

  /**
   * detalle_nomina updateMany
   */
  export type detalle_nominaUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update detalle_nominas.
     */
    data: XOR<detalle_nominaUpdateManyMutationInput, detalle_nominaUncheckedUpdateManyInput>
    /**
     * Filter which detalle_nominas to update
     */
    where?: detalle_nominaWhereInput
    /**
     * Limit how many detalle_nominas to update.
     */
    limit?: number
  }

  /**
   * detalle_nomina updateManyAndReturn
   */
  export type detalle_nominaUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the detalle_nomina
     */
    select?: detalle_nominaSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the detalle_nomina
     */
    omit?: detalle_nominaOmit<ExtArgs> | null
    /**
     * The data used to update detalle_nominas.
     */
    data: XOR<detalle_nominaUpdateManyMutationInput, detalle_nominaUncheckedUpdateManyInput>
    /**
     * Filter which detalle_nominas to update
     */
    where?: detalle_nominaWhereInput
    /**
     * Limit how many detalle_nominas to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: detalle_nominaIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * detalle_nomina upsert
   */
  export type detalle_nominaUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the detalle_nomina
     */
    select?: detalle_nominaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the detalle_nomina
     */
    omit?: detalle_nominaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: detalle_nominaInclude<ExtArgs> | null
    /**
     * The filter to search for the detalle_nomina to update in case it exists.
     */
    where: detalle_nominaWhereUniqueInput
    /**
     * In case the detalle_nomina found by the `where` argument doesn't exist, create a new detalle_nomina with this data.
     */
    create: XOR<detalle_nominaCreateInput, detalle_nominaUncheckedCreateInput>
    /**
     * In case the detalle_nomina was found with the provided `where` argument, update it with this data.
     */
    update: XOR<detalle_nominaUpdateInput, detalle_nominaUncheckedUpdateInput>
  }

  /**
   * detalle_nomina delete
   */
  export type detalle_nominaDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the detalle_nomina
     */
    select?: detalle_nominaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the detalle_nomina
     */
    omit?: detalle_nominaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: detalle_nominaInclude<ExtArgs> | null
    /**
     * Filter which detalle_nomina to delete.
     */
    where: detalle_nominaWhereUniqueInput
  }

  /**
   * detalle_nomina deleteMany
   */
  export type detalle_nominaDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which detalle_nominas to delete
     */
    where?: detalle_nominaWhereInput
    /**
     * Limit how many detalle_nominas to delete.
     */
    limit?: number
  }

  /**
   * detalle_nomina.detalle_nomina_concepto
   */
  export type detalle_nomina$detalle_nomina_conceptoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the detalle_nomina_concepto
     */
    select?: detalle_nomina_conceptoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the detalle_nomina_concepto
     */
    omit?: detalle_nomina_conceptoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: detalle_nomina_conceptoInclude<ExtArgs> | null
    where?: detalle_nomina_conceptoWhereInput
    orderBy?: detalle_nomina_conceptoOrderByWithRelationInput | detalle_nomina_conceptoOrderByWithRelationInput[]
    cursor?: detalle_nomina_conceptoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Detalle_nomina_conceptoScalarFieldEnum | Detalle_nomina_conceptoScalarFieldEnum[]
  }

  /**
   * detalle_nomina without action
   */
  export type detalle_nominaDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the detalle_nomina
     */
    select?: detalle_nominaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the detalle_nomina
     */
    omit?: detalle_nominaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: detalle_nominaInclude<ExtArgs> | null
  }


  /**
   * Model detalle_nomina_concepto
   */

  export type AggregateDetalle_nomina_concepto = {
    _count: Detalle_nomina_conceptoCountAggregateOutputType | null
    _avg: Detalle_nomina_conceptoAvgAggregateOutputType | null
    _sum: Detalle_nomina_conceptoSumAggregateOutputType | null
    _min: Detalle_nomina_conceptoMinAggregateOutputType | null
    _max: Detalle_nomina_conceptoMaxAggregateOutputType | null
  }

  export type Detalle_nomina_conceptoAvgAggregateOutputType = {
    id_detalle_conceptos: number | null
    monto: Decimal | null
    id_concepto: number | null
    id_detalle: number | null
  }

  export type Detalle_nomina_conceptoSumAggregateOutputType = {
    id_detalle_conceptos: number | null
    monto: Decimal | null
    id_concepto: number | null
    id_detalle: number | null
  }

  export type Detalle_nomina_conceptoMinAggregateOutputType = {
    id_detalle_conceptos: number | null
    monto: Decimal | null
    id_concepto: number | null
    id_detalle: number | null
    origen: string | null
  }

  export type Detalle_nomina_conceptoMaxAggregateOutputType = {
    id_detalle_conceptos: number | null
    monto: Decimal | null
    id_concepto: number | null
    id_detalle: number | null
    origen: string | null
  }

  export type Detalle_nomina_conceptoCountAggregateOutputType = {
    id_detalle_conceptos: number
    monto: number
    id_concepto: number
    id_detalle: number
    origen: number
    _all: number
  }


  export type Detalle_nomina_conceptoAvgAggregateInputType = {
    id_detalle_conceptos?: true
    monto?: true
    id_concepto?: true
    id_detalle?: true
  }

  export type Detalle_nomina_conceptoSumAggregateInputType = {
    id_detalle_conceptos?: true
    monto?: true
    id_concepto?: true
    id_detalle?: true
  }

  export type Detalle_nomina_conceptoMinAggregateInputType = {
    id_detalle_conceptos?: true
    monto?: true
    id_concepto?: true
    id_detalle?: true
    origen?: true
  }

  export type Detalle_nomina_conceptoMaxAggregateInputType = {
    id_detalle_conceptos?: true
    monto?: true
    id_concepto?: true
    id_detalle?: true
    origen?: true
  }

  export type Detalle_nomina_conceptoCountAggregateInputType = {
    id_detalle_conceptos?: true
    monto?: true
    id_concepto?: true
    id_detalle?: true
    origen?: true
    _all?: true
  }

  export type Detalle_nomina_conceptoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which detalle_nomina_concepto to aggregate.
     */
    where?: detalle_nomina_conceptoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of detalle_nomina_conceptos to fetch.
     */
    orderBy?: detalle_nomina_conceptoOrderByWithRelationInput | detalle_nomina_conceptoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: detalle_nomina_conceptoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` detalle_nomina_conceptos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` detalle_nomina_conceptos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned detalle_nomina_conceptos
    **/
    _count?: true | Detalle_nomina_conceptoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Detalle_nomina_conceptoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Detalle_nomina_conceptoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Detalle_nomina_conceptoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Detalle_nomina_conceptoMaxAggregateInputType
  }

  export type GetDetalle_nomina_conceptoAggregateType<T extends Detalle_nomina_conceptoAggregateArgs> = {
        [P in keyof T & keyof AggregateDetalle_nomina_concepto]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateDetalle_nomina_concepto[P]>
      : GetScalarType<T[P], AggregateDetalle_nomina_concepto[P]>
  }




  export type detalle_nomina_conceptoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: detalle_nomina_conceptoWhereInput
    orderBy?: detalle_nomina_conceptoOrderByWithAggregationInput | detalle_nomina_conceptoOrderByWithAggregationInput[]
    by: Detalle_nomina_conceptoScalarFieldEnum[] | Detalle_nomina_conceptoScalarFieldEnum
    having?: detalle_nomina_conceptoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Detalle_nomina_conceptoCountAggregateInputType | true
    _avg?: Detalle_nomina_conceptoAvgAggregateInputType
    _sum?: Detalle_nomina_conceptoSumAggregateInputType
    _min?: Detalle_nomina_conceptoMinAggregateInputType
    _max?: Detalle_nomina_conceptoMaxAggregateInputType
  }

  export type Detalle_nomina_conceptoGroupByOutputType = {
    id_detalle_conceptos: number
    monto: Decimal
    id_concepto: number
    id_detalle: number
    origen: string
    _count: Detalle_nomina_conceptoCountAggregateOutputType | null
    _avg: Detalle_nomina_conceptoAvgAggregateOutputType | null
    _sum: Detalle_nomina_conceptoSumAggregateOutputType | null
    _min: Detalle_nomina_conceptoMinAggregateOutputType | null
    _max: Detalle_nomina_conceptoMaxAggregateOutputType | null
  }

  type GetDetalle_nomina_conceptoGroupByPayload<T extends detalle_nomina_conceptoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Detalle_nomina_conceptoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Detalle_nomina_conceptoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Detalle_nomina_conceptoGroupByOutputType[P]>
            : GetScalarType<T[P], Detalle_nomina_conceptoGroupByOutputType[P]>
        }
      >
    >


  export type detalle_nomina_conceptoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_detalle_conceptos?: boolean
    monto?: boolean
    id_concepto?: boolean
    id_detalle?: boolean
    origen?: boolean
    concepto_salarial?: boolean | concepto_salarialDefaultArgs<ExtArgs>
    detalle_nomina?: boolean | detalle_nominaDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["detalle_nomina_concepto"]>

  export type detalle_nomina_conceptoSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_detalle_conceptos?: boolean
    monto?: boolean
    id_concepto?: boolean
    id_detalle?: boolean
    origen?: boolean
    concepto_salarial?: boolean | concepto_salarialDefaultArgs<ExtArgs>
    detalle_nomina?: boolean | detalle_nominaDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["detalle_nomina_concepto"]>

  export type detalle_nomina_conceptoSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_detalle_conceptos?: boolean
    monto?: boolean
    id_concepto?: boolean
    id_detalle?: boolean
    origen?: boolean
    concepto_salarial?: boolean | concepto_salarialDefaultArgs<ExtArgs>
    detalle_nomina?: boolean | detalle_nominaDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["detalle_nomina_concepto"]>

  export type detalle_nomina_conceptoSelectScalar = {
    id_detalle_conceptos?: boolean
    monto?: boolean
    id_concepto?: boolean
    id_detalle?: boolean
    origen?: boolean
  }

  export type detalle_nomina_conceptoOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id_detalle_conceptos" | "monto" | "id_concepto" | "id_detalle" | "origen", ExtArgs["result"]["detalle_nomina_concepto"]>
  export type detalle_nomina_conceptoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    concepto_salarial?: boolean | concepto_salarialDefaultArgs<ExtArgs>
    detalle_nomina?: boolean | detalle_nominaDefaultArgs<ExtArgs>
  }
  export type detalle_nomina_conceptoIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    concepto_salarial?: boolean | concepto_salarialDefaultArgs<ExtArgs>
    detalle_nomina?: boolean | detalle_nominaDefaultArgs<ExtArgs>
  }
  export type detalle_nomina_conceptoIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    concepto_salarial?: boolean | concepto_salarialDefaultArgs<ExtArgs>
    detalle_nomina?: boolean | detalle_nominaDefaultArgs<ExtArgs>
  }

  export type $detalle_nomina_conceptoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "detalle_nomina_concepto"
    objects: {
      concepto_salarial: Prisma.$concepto_salarialPayload<ExtArgs>
      detalle_nomina: Prisma.$detalle_nominaPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id_detalle_conceptos: number
      monto: Prisma.Decimal
      id_concepto: number
      id_detalle: number
      origen: string
    }, ExtArgs["result"]["detalle_nomina_concepto"]>
    composites: {}
  }

  type detalle_nomina_conceptoGetPayload<S extends boolean | null | undefined | detalle_nomina_conceptoDefaultArgs> = $Result.GetResult<Prisma.$detalle_nomina_conceptoPayload, S>

  type detalle_nomina_conceptoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<detalle_nomina_conceptoFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Detalle_nomina_conceptoCountAggregateInputType | true
    }

  export interface detalle_nomina_conceptoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['detalle_nomina_concepto'], meta: { name: 'detalle_nomina_concepto' } }
    /**
     * Find zero or one Detalle_nomina_concepto that matches the filter.
     * @param {detalle_nomina_conceptoFindUniqueArgs} args - Arguments to find a Detalle_nomina_concepto
     * @example
     * // Get one Detalle_nomina_concepto
     * const detalle_nomina_concepto = await prisma.detalle_nomina_concepto.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends detalle_nomina_conceptoFindUniqueArgs>(args: SelectSubset<T, detalle_nomina_conceptoFindUniqueArgs<ExtArgs>>): Prisma__detalle_nomina_conceptoClient<$Result.GetResult<Prisma.$detalle_nomina_conceptoPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Detalle_nomina_concepto that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {detalle_nomina_conceptoFindUniqueOrThrowArgs} args - Arguments to find a Detalle_nomina_concepto
     * @example
     * // Get one Detalle_nomina_concepto
     * const detalle_nomina_concepto = await prisma.detalle_nomina_concepto.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends detalle_nomina_conceptoFindUniqueOrThrowArgs>(args: SelectSubset<T, detalle_nomina_conceptoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__detalle_nomina_conceptoClient<$Result.GetResult<Prisma.$detalle_nomina_conceptoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Detalle_nomina_concepto that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {detalle_nomina_conceptoFindFirstArgs} args - Arguments to find a Detalle_nomina_concepto
     * @example
     * // Get one Detalle_nomina_concepto
     * const detalle_nomina_concepto = await prisma.detalle_nomina_concepto.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends detalle_nomina_conceptoFindFirstArgs>(args?: SelectSubset<T, detalle_nomina_conceptoFindFirstArgs<ExtArgs>>): Prisma__detalle_nomina_conceptoClient<$Result.GetResult<Prisma.$detalle_nomina_conceptoPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Detalle_nomina_concepto that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {detalle_nomina_conceptoFindFirstOrThrowArgs} args - Arguments to find a Detalle_nomina_concepto
     * @example
     * // Get one Detalle_nomina_concepto
     * const detalle_nomina_concepto = await prisma.detalle_nomina_concepto.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends detalle_nomina_conceptoFindFirstOrThrowArgs>(args?: SelectSubset<T, detalle_nomina_conceptoFindFirstOrThrowArgs<ExtArgs>>): Prisma__detalle_nomina_conceptoClient<$Result.GetResult<Prisma.$detalle_nomina_conceptoPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Detalle_nomina_conceptos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {detalle_nomina_conceptoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Detalle_nomina_conceptos
     * const detalle_nomina_conceptos = await prisma.detalle_nomina_concepto.findMany()
     * 
     * // Get first 10 Detalle_nomina_conceptos
     * const detalle_nomina_conceptos = await prisma.detalle_nomina_concepto.findMany({ take: 10 })
     * 
     * // Only select the `id_detalle_conceptos`
     * const detalle_nomina_conceptoWithId_detalle_conceptosOnly = await prisma.detalle_nomina_concepto.findMany({ select: { id_detalle_conceptos: true } })
     * 
     */
    findMany<T extends detalle_nomina_conceptoFindManyArgs>(args?: SelectSubset<T, detalle_nomina_conceptoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$detalle_nomina_conceptoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Detalle_nomina_concepto.
     * @param {detalle_nomina_conceptoCreateArgs} args - Arguments to create a Detalle_nomina_concepto.
     * @example
     * // Create one Detalle_nomina_concepto
     * const Detalle_nomina_concepto = await prisma.detalle_nomina_concepto.create({
     *   data: {
     *     // ... data to create a Detalle_nomina_concepto
     *   }
     * })
     * 
     */
    create<T extends detalle_nomina_conceptoCreateArgs>(args: SelectSubset<T, detalle_nomina_conceptoCreateArgs<ExtArgs>>): Prisma__detalle_nomina_conceptoClient<$Result.GetResult<Prisma.$detalle_nomina_conceptoPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Detalle_nomina_conceptos.
     * @param {detalle_nomina_conceptoCreateManyArgs} args - Arguments to create many Detalle_nomina_conceptos.
     * @example
     * // Create many Detalle_nomina_conceptos
     * const detalle_nomina_concepto = await prisma.detalle_nomina_concepto.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends detalle_nomina_conceptoCreateManyArgs>(args?: SelectSubset<T, detalle_nomina_conceptoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Detalle_nomina_conceptos and returns the data saved in the database.
     * @param {detalle_nomina_conceptoCreateManyAndReturnArgs} args - Arguments to create many Detalle_nomina_conceptos.
     * @example
     * // Create many Detalle_nomina_conceptos
     * const detalle_nomina_concepto = await prisma.detalle_nomina_concepto.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Detalle_nomina_conceptos and only return the `id_detalle_conceptos`
     * const detalle_nomina_conceptoWithId_detalle_conceptosOnly = await prisma.detalle_nomina_concepto.createManyAndReturn({
     *   select: { id_detalle_conceptos: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends detalle_nomina_conceptoCreateManyAndReturnArgs>(args?: SelectSubset<T, detalle_nomina_conceptoCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$detalle_nomina_conceptoPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Detalle_nomina_concepto.
     * @param {detalle_nomina_conceptoDeleteArgs} args - Arguments to delete one Detalle_nomina_concepto.
     * @example
     * // Delete one Detalle_nomina_concepto
     * const Detalle_nomina_concepto = await prisma.detalle_nomina_concepto.delete({
     *   where: {
     *     // ... filter to delete one Detalle_nomina_concepto
     *   }
     * })
     * 
     */
    delete<T extends detalle_nomina_conceptoDeleteArgs>(args: SelectSubset<T, detalle_nomina_conceptoDeleteArgs<ExtArgs>>): Prisma__detalle_nomina_conceptoClient<$Result.GetResult<Prisma.$detalle_nomina_conceptoPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Detalle_nomina_concepto.
     * @param {detalle_nomina_conceptoUpdateArgs} args - Arguments to update one Detalle_nomina_concepto.
     * @example
     * // Update one Detalle_nomina_concepto
     * const detalle_nomina_concepto = await prisma.detalle_nomina_concepto.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends detalle_nomina_conceptoUpdateArgs>(args: SelectSubset<T, detalle_nomina_conceptoUpdateArgs<ExtArgs>>): Prisma__detalle_nomina_conceptoClient<$Result.GetResult<Prisma.$detalle_nomina_conceptoPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Detalle_nomina_conceptos.
     * @param {detalle_nomina_conceptoDeleteManyArgs} args - Arguments to filter Detalle_nomina_conceptos to delete.
     * @example
     * // Delete a few Detalle_nomina_conceptos
     * const { count } = await prisma.detalle_nomina_concepto.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends detalle_nomina_conceptoDeleteManyArgs>(args?: SelectSubset<T, detalle_nomina_conceptoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Detalle_nomina_conceptos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {detalle_nomina_conceptoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Detalle_nomina_conceptos
     * const detalle_nomina_concepto = await prisma.detalle_nomina_concepto.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends detalle_nomina_conceptoUpdateManyArgs>(args: SelectSubset<T, detalle_nomina_conceptoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Detalle_nomina_conceptos and returns the data updated in the database.
     * @param {detalle_nomina_conceptoUpdateManyAndReturnArgs} args - Arguments to update many Detalle_nomina_conceptos.
     * @example
     * // Update many Detalle_nomina_conceptos
     * const detalle_nomina_concepto = await prisma.detalle_nomina_concepto.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Detalle_nomina_conceptos and only return the `id_detalle_conceptos`
     * const detalle_nomina_conceptoWithId_detalle_conceptosOnly = await prisma.detalle_nomina_concepto.updateManyAndReturn({
     *   select: { id_detalle_conceptos: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends detalle_nomina_conceptoUpdateManyAndReturnArgs>(args: SelectSubset<T, detalle_nomina_conceptoUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$detalle_nomina_conceptoPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Detalle_nomina_concepto.
     * @param {detalle_nomina_conceptoUpsertArgs} args - Arguments to update or create a Detalle_nomina_concepto.
     * @example
     * // Update or create a Detalle_nomina_concepto
     * const detalle_nomina_concepto = await prisma.detalle_nomina_concepto.upsert({
     *   create: {
     *     // ... data to create a Detalle_nomina_concepto
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Detalle_nomina_concepto we want to update
     *   }
     * })
     */
    upsert<T extends detalle_nomina_conceptoUpsertArgs>(args: SelectSubset<T, detalle_nomina_conceptoUpsertArgs<ExtArgs>>): Prisma__detalle_nomina_conceptoClient<$Result.GetResult<Prisma.$detalle_nomina_conceptoPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Detalle_nomina_conceptos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {detalle_nomina_conceptoCountArgs} args - Arguments to filter Detalle_nomina_conceptos to count.
     * @example
     * // Count the number of Detalle_nomina_conceptos
     * const count = await prisma.detalle_nomina_concepto.count({
     *   where: {
     *     // ... the filter for the Detalle_nomina_conceptos we want to count
     *   }
     * })
    **/
    count<T extends detalle_nomina_conceptoCountArgs>(
      args?: Subset<T, detalle_nomina_conceptoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Detalle_nomina_conceptoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Detalle_nomina_concepto.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Detalle_nomina_conceptoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Detalle_nomina_conceptoAggregateArgs>(args: Subset<T, Detalle_nomina_conceptoAggregateArgs>): Prisma.PrismaPromise<GetDetalle_nomina_conceptoAggregateType<T>>

    /**
     * Group by Detalle_nomina_concepto.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {detalle_nomina_conceptoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends detalle_nomina_conceptoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: detalle_nomina_conceptoGroupByArgs['orderBy'] }
        : { orderBy?: detalle_nomina_conceptoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, detalle_nomina_conceptoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDetalle_nomina_conceptoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the detalle_nomina_concepto model
   */
  readonly fields: detalle_nomina_conceptoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for detalle_nomina_concepto.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__detalle_nomina_conceptoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    concepto_salarial<T extends concepto_salarialDefaultArgs<ExtArgs> = {}>(args?: Subset<T, concepto_salarialDefaultArgs<ExtArgs>>): Prisma__concepto_salarialClient<$Result.GetResult<Prisma.$concepto_salarialPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    detalle_nomina<T extends detalle_nominaDefaultArgs<ExtArgs> = {}>(args?: Subset<T, detalle_nominaDefaultArgs<ExtArgs>>): Prisma__detalle_nominaClient<$Result.GetResult<Prisma.$detalle_nominaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the detalle_nomina_concepto model
   */
  interface detalle_nomina_conceptoFieldRefs {
    readonly id_detalle_conceptos: FieldRef<"detalle_nomina_concepto", 'Int'>
    readonly monto: FieldRef<"detalle_nomina_concepto", 'Decimal'>
    readonly id_concepto: FieldRef<"detalle_nomina_concepto", 'Int'>
    readonly id_detalle: FieldRef<"detalle_nomina_concepto", 'Int'>
    readonly origen: FieldRef<"detalle_nomina_concepto", 'String'>
  }
    

  // Custom InputTypes
  /**
   * detalle_nomina_concepto findUnique
   */
  export type detalle_nomina_conceptoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the detalle_nomina_concepto
     */
    select?: detalle_nomina_conceptoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the detalle_nomina_concepto
     */
    omit?: detalle_nomina_conceptoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: detalle_nomina_conceptoInclude<ExtArgs> | null
    /**
     * Filter, which detalle_nomina_concepto to fetch.
     */
    where: detalle_nomina_conceptoWhereUniqueInput
  }

  /**
   * detalle_nomina_concepto findUniqueOrThrow
   */
  export type detalle_nomina_conceptoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the detalle_nomina_concepto
     */
    select?: detalle_nomina_conceptoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the detalle_nomina_concepto
     */
    omit?: detalle_nomina_conceptoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: detalle_nomina_conceptoInclude<ExtArgs> | null
    /**
     * Filter, which detalle_nomina_concepto to fetch.
     */
    where: detalle_nomina_conceptoWhereUniqueInput
  }

  /**
   * detalle_nomina_concepto findFirst
   */
  export type detalle_nomina_conceptoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the detalle_nomina_concepto
     */
    select?: detalle_nomina_conceptoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the detalle_nomina_concepto
     */
    omit?: detalle_nomina_conceptoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: detalle_nomina_conceptoInclude<ExtArgs> | null
    /**
     * Filter, which detalle_nomina_concepto to fetch.
     */
    where?: detalle_nomina_conceptoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of detalle_nomina_conceptos to fetch.
     */
    orderBy?: detalle_nomina_conceptoOrderByWithRelationInput | detalle_nomina_conceptoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for detalle_nomina_conceptos.
     */
    cursor?: detalle_nomina_conceptoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` detalle_nomina_conceptos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` detalle_nomina_conceptos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of detalle_nomina_conceptos.
     */
    distinct?: Detalle_nomina_conceptoScalarFieldEnum | Detalle_nomina_conceptoScalarFieldEnum[]
  }

  /**
   * detalle_nomina_concepto findFirstOrThrow
   */
  export type detalle_nomina_conceptoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the detalle_nomina_concepto
     */
    select?: detalle_nomina_conceptoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the detalle_nomina_concepto
     */
    omit?: detalle_nomina_conceptoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: detalle_nomina_conceptoInclude<ExtArgs> | null
    /**
     * Filter, which detalle_nomina_concepto to fetch.
     */
    where?: detalle_nomina_conceptoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of detalle_nomina_conceptos to fetch.
     */
    orderBy?: detalle_nomina_conceptoOrderByWithRelationInput | detalle_nomina_conceptoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for detalle_nomina_conceptos.
     */
    cursor?: detalle_nomina_conceptoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` detalle_nomina_conceptos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` detalle_nomina_conceptos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of detalle_nomina_conceptos.
     */
    distinct?: Detalle_nomina_conceptoScalarFieldEnum | Detalle_nomina_conceptoScalarFieldEnum[]
  }

  /**
   * detalle_nomina_concepto findMany
   */
  export type detalle_nomina_conceptoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the detalle_nomina_concepto
     */
    select?: detalle_nomina_conceptoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the detalle_nomina_concepto
     */
    omit?: detalle_nomina_conceptoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: detalle_nomina_conceptoInclude<ExtArgs> | null
    /**
     * Filter, which detalle_nomina_conceptos to fetch.
     */
    where?: detalle_nomina_conceptoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of detalle_nomina_conceptos to fetch.
     */
    orderBy?: detalle_nomina_conceptoOrderByWithRelationInput | detalle_nomina_conceptoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing detalle_nomina_conceptos.
     */
    cursor?: detalle_nomina_conceptoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` detalle_nomina_conceptos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` detalle_nomina_conceptos.
     */
    skip?: number
    distinct?: Detalle_nomina_conceptoScalarFieldEnum | Detalle_nomina_conceptoScalarFieldEnum[]
  }

  /**
   * detalle_nomina_concepto create
   */
  export type detalle_nomina_conceptoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the detalle_nomina_concepto
     */
    select?: detalle_nomina_conceptoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the detalle_nomina_concepto
     */
    omit?: detalle_nomina_conceptoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: detalle_nomina_conceptoInclude<ExtArgs> | null
    /**
     * The data needed to create a detalle_nomina_concepto.
     */
    data: XOR<detalle_nomina_conceptoCreateInput, detalle_nomina_conceptoUncheckedCreateInput>
  }

  /**
   * detalle_nomina_concepto createMany
   */
  export type detalle_nomina_conceptoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many detalle_nomina_conceptos.
     */
    data: detalle_nomina_conceptoCreateManyInput | detalle_nomina_conceptoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * detalle_nomina_concepto createManyAndReturn
   */
  export type detalle_nomina_conceptoCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the detalle_nomina_concepto
     */
    select?: detalle_nomina_conceptoSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the detalle_nomina_concepto
     */
    omit?: detalle_nomina_conceptoOmit<ExtArgs> | null
    /**
     * The data used to create many detalle_nomina_conceptos.
     */
    data: detalle_nomina_conceptoCreateManyInput | detalle_nomina_conceptoCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: detalle_nomina_conceptoIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * detalle_nomina_concepto update
   */
  export type detalle_nomina_conceptoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the detalle_nomina_concepto
     */
    select?: detalle_nomina_conceptoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the detalle_nomina_concepto
     */
    omit?: detalle_nomina_conceptoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: detalle_nomina_conceptoInclude<ExtArgs> | null
    /**
     * The data needed to update a detalle_nomina_concepto.
     */
    data: XOR<detalle_nomina_conceptoUpdateInput, detalle_nomina_conceptoUncheckedUpdateInput>
    /**
     * Choose, which detalle_nomina_concepto to update.
     */
    where: detalle_nomina_conceptoWhereUniqueInput
  }

  /**
   * detalle_nomina_concepto updateMany
   */
  export type detalle_nomina_conceptoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update detalle_nomina_conceptos.
     */
    data: XOR<detalle_nomina_conceptoUpdateManyMutationInput, detalle_nomina_conceptoUncheckedUpdateManyInput>
    /**
     * Filter which detalle_nomina_conceptos to update
     */
    where?: detalle_nomina_conceptoWhereInput
    /**
     * Limit how many detalle_nomina_conceptos to update.
     */
    limit?: number
  }

  /**
   * detalle_nomina_concepto updateManyAndReturn
   */
  export type detalle_nomina_conceptoUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the detalle_nomina_concepto
     */
    select?: detalle_nomina_conceptoSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the detalle_nomina_concepto
     */
    omit?: detalle_nomina_conceptoOmit<ExtArgs> | null
    /**
     * The data used to update detalle_nomina_conceptos.
     */
    data: XOR<detalle_nomina_conceptoUpdateManyMutationInput, detalle_nomina_conceptoUncheckedUpdateManyInput>
    /**
     * Filter which detalle_nomina_conceptos to update
     */
    where?: detalle_nomina_conceptoWhereInput
    /**
     * Limit how many detalle_nomina_conceptos to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: detalle_nomina_conceptoIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * detalle_nomina_concepto upsert
   */
  export type detalle_nomina_conceptoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the detalle_nomina_concepto
     */
    select?: detalle_nomina_conceptoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the detalle_nomina_concepto
     */
    omit?: detalle_nomina_conceptoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: detalle_nomina_conceptoInclude<ExtArgs> | null
    /**
     * The filter to search for the detalle_nomina_concepto to update in case it exists.
     */
    where: detalle_nomina_conceptoWhereUniqueInput
    /**
     * In case the detalle_nomina_concepto found by the `where` argument doesn't exist, create a new detalle_nomina_concepto with this data.
     */
    create: XOR<detalle_nomina_conceptoCreateInput, detalle_nomina_conceptoUncheckedCreateInput>
    /**
     * In case the detalle_nomina_concepto was found with the provided `where` argument, update it with this data.
     */
    update: XOR<detalle_nomina_conceptoUpdateInput, detalle_nomina_conceptoUncheckedUpdateInput>
  }

  /**
   * detalle_nomina_concepto delete
   */
  export type detalle_nomina_conceptoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the detalle_nomina_concepto
     */
    select?: detalle_nomina_conceptoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the detalle_nomina_concepto
     */
    omit?: detalle_nomina_conceptoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: detalle_nomina_conceptoInclude<ExtArgs> | null
    /**
     * Filter which detalle_nomina_concepto to delete.
     */
    where: detalle_nomina_conceptoWhereUniqueInput
  }

  /**
   * detalle_nomina_concepto deleteMany
   */
  export type detalle_nomina_conceptoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which detalle_nomina_conceptos to delete
     */
    where?: detalle_nomina_conceptoWhereInput
    /**
     * Limit how many detalle_nomina_conceptos to delete.
     */
    limit?: number
  }

  /**
   * detalle_nomina_concepto without action
   */
  export type detalle_nomina_conceptoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the detalle_nomina_concepto
     */
    select?: detalle_nomina_conceptoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the detalle_nomina_concepto
     */
    omit?: detalle_nomina_conceptoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: detalle_nomina_conceptoInclude<ExtArgs> | null
  }


  /**
   * Model empleado
   */

  export type AggregateEmpleado = {
    _count: EmpleadoCountAggregateOutputType | null
    _avg: EmpleadoAvgAggregateOutputType | null
    _sum: EmpleadoSumAggregateOutputType | null
    _min: EmpleadoMinAggregateOutputType | null
    _max: EmpleadoMaxAggregateOutputType | null
  }

  export type EmpleadoAvgAggregateOutputType = {
    id_empleado: number | null
    id_estado_civil: number | null
  }

  export type EmpleadoSumAggregateOutputType = {
    id_empleado: number | null
    id_estado_civil: number | null
  }

  export type EmpleadoMinAggregateOutputType = {
    id_empleado: number | null
    nombre: string | null
    cedula: string | null
    apellido: string | null
    fecha_nacimiento: Date | null
    correo: string | null
    fecha_ingreso: Date | null
    telefono: string | null
    fecha_egreso: Date | null
    direccion: string | null
    afiliado_IPS: boolean | null
    id_estado_civil: number | null
  }

  export type EmpleadoMaxAggregateOutputType = {
    id_empleado: number | null
    nombre: string | null
    cedula: string | null
    apellido: string | null
    fecha_nacimiento: Date | null
    correo: string | null
    fecha_ingreso: Date | null
    telefono: string | null
    fecha_egreso: Date | null
    direccion: string | null
    afiliado_IPS: boolean | null
    id_estado_civil: number | null
  }

  export type EmpleadoCountAggregateOutputType = {
    id_empleado: number
    nombre: number
    cedula: number
    apellido: number
    fecha_nacimiento: number
    correo: number
    fecha_ingreso: number
    telefono: number
    fecha_egreso: number
    direccion: number
    afiliado_IPS: number
    id_estado_civil: number
    _all: number
  }


  export type EmpleadoAvgAggregateInputType = {
    id_empleado?: true
    id_estado_civil?: true
  }

  export type EmpleadoSumAggregateInputType = {
    id_empleado?: true
    id_estado_civil?: true
  }

  export type EmpleadoMinAggregateInputType = {
    id_empleado?: true
    nombre?: true
    cedula?: true
    apellido?: true
    fecha_nacimiento?: true
    correo?: true
    fecha_ingreso?: true
    telefono?: true
    fecha_egreso?: true
    direccion?: true
    afiliado_IPS?: true
    id_estado_civil?: true
  }

  export type EmpleadoMaxAggregateInputType = {
    id_empleado?: true
    nombre?: true
    cedula?: true
    apellido?: true
    fecha_nacimiento?: true
    correo?: true
    fecha_ingreso?: true
    telefono?: true
    fecha_egreso?: true
    direccion?: true
    afiliado_IPS?: true
    id_estado_civil?: true
  }

  export type EmpleadoCountAggregateInputType = {
    id_empleado?: true
    nombre?: true
    cedula?: true
    apellido?: true
    fecha_nacimiento?: true
    correo?: true
    fecha_ingreso?: true
    telefono?: true
    fecha_egreso?: true
    direccion?: true
    afiliado_IPS?: true
    id_estado_civil?: true
    _all?: true
  }

  export type EmpleadoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which empleado to aggregate.
     */
    where?: empleadoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of empleados to fetch.
     */
    orderBy?: empleadoOrderByWithRelationInput | empleadoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: empleadoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` empleados from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` empleados.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned empleados
    **/
    _count?: true | EmpleadoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: EmpleadoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: EmpleadoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: EmpleadoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: EmpleadoMaxAggregateInputType
  }

  export type GetEmpleadoAggregateType<T extends EmpleadoAggregateArgs> = {
        [P in keyof T & keyof AggregateEmpleado]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateEmpleado[P]>
      : GetScalarType<T[P], AggregateEmpleado[P]>
  }




  export type empleadoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: empleadoWhereInput
    orderBy?: empleadoOrderByWithAggregationInput | empleadoOrderByWithAggregationInput[]
    by: EmpleadoScalarFieldEnum[] | EmpleadoScalarFieldEnum
    having?: empleadoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: EmpleadoCountAggregateInputType | true
    _avg?: EmpleadoAvgAggregateInputType
    _sum?: EmpleadoSumAggregateInputType
    _min?: EmpleadoMinAggregateInputType
    _max?: EmpleadoMaxAggregateInputType
  }

  export type EmpleadoGroupByOutputType = {
    id_empleado: number
    nombre: string
    cedula: string
    apellido: string
    fecha_nacimiento: Date
    correo: string
    fecha_ingreso: Date
    telefono: string
    fecha_egreso: Date | null
    direccion: string
    afiliado_IPS: boolean
    id_estado_civil: number
    _count: EmpleadoCountAggregateOutputType | null
    _avg: EmpleadoAvgAggregateOutputType | null
    _sum: EmpleadoSumAggregateOutputType | null
    _min: EmpleadoMinAggregateOutputType | null
    _max: EmpleadoMaxAggregateOutputType | null
  }

  type GetEmpleadoGroupByPayload<T extends empleadoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<EmpleadoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof EmpleadoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], EmpleadoGroupByOutputType[P]>
            : GetScalarType<T[P], EmpleadoGroupByOutputType[P]>
        }
      >
    >


  export type empleadoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_empleado?: boolean
    nombre?: boolean
    cedula?: boolean
    apellido?: boolean
    fecha_nacimiento?: boolean
    correo?: boolean
    fecha_ingreso?: boolean
    telefono?: boolean
    fecha_egreso?: boolean
    direccion?: boolean
    afiliado_IPS?: boolean
    id_estado_civil?: boolean
    concepto_empleado?: boolean | empleado$concepto_empleadoArgs<ExtArgs>
    detalle_nomina?: boolean | empleado$detalle_nominaArgs<ExtArgs>
    estado_civil?: boolean | estado_civilDefaultArgs<ExtArgs>
    hijo?: boolean | empleado$hijoArgs<ExtArgs>
    historial_cargo?: boolean | empleado$historial_cargoArgs<ExtArgs>
    usuario?: boolean | empleado$usuarioArgs<ExtArgs>
    _count?: boolean | EmpleadoCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["empleado"]>

  export type empleadoSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_empleado?: boolean
    nombre?: boolean
    cedula?: boolean
    apellido?: boolean
    fecha_nacimiento?: boolean
    correo?: boolean
    fecha_ingreso?: boolean
    telefono?: boolean
    fecha_egreso?: boolean
    direccion?: boolean
    afiliado_IPS?: boolean
    id_estado_civil?: boolean
    estado_civil?: boolean | estado_civilDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["empleado"]>

  export type empleadoSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_empleado?: boolean
    nombre?: boolean
    cedula?: boolean
    apellido?: boolean
    fecha_nacimiento?: boolean
    correo?: boolean
    fecha_ingreso?: boolean
    telefono?: boolean
    fecha_egreso?: boolean
    direccion?: boolean
    afiliado_IPS?: boolean
    id_estado_civil?: boolean
    estado_civil?: boolean | estado_civilDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["empleado"]>

  export type empleadoSelectScalar = {
    id_empleado?: boolean
    nombre?: boolean
    cedula?: boolean
    apellido?: boolean
    fecha_nacimiento?: boolean
    correo?: boolean
    fecha_ingreso?: boolean
    telefono?: boolean
    fecha_egreso?: boolean
    direccion?: boolean
    afiliado_IPS?: boolean
    id_estado_civil?: boolean
  }

  export type empleadoOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id_empleado" | "nombre" | "cedula" | "apellido" | "fecha_nacimiento" | "correo" | "fecha_ingreso" | "telefono" | "fecha_egreso" | "direccion" | "afiliado_IPS" | "id_estado_civil", ExtArgs["result"]["empleado"]>
  export type empleadoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    concepto_empleado?: boolean | empleado$concepto_empleadoArgs<ExtArgs>
    detalle_nomina?: boolean | empleado$detalle_nominaArgs<ExtArgs>
    estado_civil?: boolean | estado_civilDefaultArgs<ExtArgs>
    hijo?: boolean | empleado$hijoArgs<ExtArgs>
    historial_cargo?: boolean | empleado$historial_cargoArgs<ExtArgs>
    usuario?: boolean | empleado$usuarioArgs<ExtArgs>
    _count?: boolean | EmpleadoCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type empleadoIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    estado_civil?: boolean | estado_civilDefaultArgs<ExtArgs>
  }
  export type empleadoIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    estado_civil?: boolean | estado_civilDefaultArgs<ExtArgs>
  }

  export type $empleadoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "empleado"
    objects: {
      concepto_empleado: Prisma.$concepto_empleadoPayload<ExtArgs>[]
      detalle_nomina: Prisma.$detalle_nominaPayload<ExtArgs>[]
      estado_civil: Prisma.$estado_civilPayload<ExtArgs>
      hijo: Prisma.$hijoPayload<ExtArgs>[]
      historial_cargo: Prisma.$historial_cargoPayload<ExtArgs>[]
      usuario: Prisma.$usuarioPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id_empleado: number
      nombre: string
      cedula: string
      apellido: string
      fecha_nacimiento: Date
      correo: string
      fecha_ingreso: Date
      telefono: string
      fecha_egreso: Date | null
      direccion: string
      afiliado_IPS: boolean
      id_estado_civil: number
    }, ExtArgs["result"]["empleado"]>
    composites: {}
  }

  type empleadoGetPayload<S extends boolean | null | undefined | empleadoDefaultArgs> = $Result.GetResult<Prisma.$empleadoPayload, S>

  type empleadoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<empleadoFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: EmpleadoCountAggregateInputType | true
    }

  export interface empleadoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['empleado'], meta: { name: 'empleado' } }
    /**
     * Find zero or one Empleado that matches the filter.
     * @param {empleadoFindUniqueArgs} args - Arguments to find a Empleado
     * @example
     * // Get one Empleado
     * const empleado = await prisma.empleado.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends empleadoFindUniqueArgs>(args: SelectSubset<T, empleadoFindUniqueArgs<ExtArgs>>): Prisma__empleadoClient<$Result.GetResult<Prisma.$empleadoPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Empleado that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {empleadoFindUniqueOrThrowArgs} args - Arguments to find a Empleado
     * @example
     * // Get one Empleado
     * const empleado = await prisma.empleado.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends empleadoFindUniqueOrThrowArgs>(args: SelectSubset<T, empleadoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__empleadoClient<$Result.GetResult<Prisma.$empleadoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Empleado that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {empleadoFindFirstArgs} args - Arguments to find a Empleado
     * @example
     * // Get one Empleado
     * const empleado = await prisma.empleado.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends empleadoFindFirstArgs>(args?: SelectSubset<T, empleadoFindFirstArgs<ExtArgs>>): Prisma__empleadoClient<$Result.GetResult<Prisma.$empleadoPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Empleado that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {empleadoFindFirstOrThrowArgs} args - Arguments to find a Empleado
     * @example
     * // Get one Empleado
     * const empleado = await prisma.empleado.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends empleadoFindFirstOrThrowArgs>(args?: SelectSubset<T, empleadoFindFirstOrThrowArgs<ExtArgs>>): Prisma__empleadoClient<$Result.GetResult<Prisma.$empleadoPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Empleados that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {empleadoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Empleados
     * const empleados = await prisma.empleado.findMany()
     * 
     * // Get first 10 Empleados
     * const empleados = await prisma.empleado.findMany({ take: 10 })
     * 
     * // Only select the `id_empleado`
     * const empleadoWithId_empleadoOnly = await prisma.empleado.findMany({ select: { id_empleado: true } })
     * 
     */
    findMany<T extends empleadoFindManyArgs>(args?: SelectSubset<T, empleadoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$empleadoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Empleado.
     * @param {empleadoCreateArgs} args - Arguments to create a Empleado.
     * @example
     * // Create one Empleado
     * const Empleado = await prisma.empleado.create({
     *   data: {
     *     // ... data to create a Empleado
     *   }
     * })
     * 
     */
    create<T extends empleadoCreateArgs>(args: SelectSubset<T, empleadoCreateArgs<ExtArgs>>): Prisma__empleadoClient<$Result.GetResult<Prisma.$empleadoPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Empleados.
     * @param {empleadoCreateManyArgs} args - Arguments to create many Empleados.
     * @example
     * // Create many Empleados
     * const empleado = await prisma.empleado.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends empleadoCreateManyArgs>(args?: SelectSubset<T, empleadoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Empleados and returns the data saved in the database.
     * @param {empleadoCreateManyAndReturnArgs} args - Arguments to create many Empleados.
     * @example
     * // Create many Empleados
     * const empleado = await prisma.empleado.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Empleados and only return the `id_empleado`
     * const empleadoWithId_empleadoOnly = await prisma.empleado.createManyAndReturn({
     *   select: { id_empleado: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends empleadoCreateManyAndReturnArgs>(args?: SelectSubset<T, empleadoCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$empleadoPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Empleado.
     * @param {empleadoDeleteArgs} args - Arguments to delete one Empleado.
     * @example
     * // Delete one Empleado
     * const Empleado = await prisma.empleado.delete({
     *   where: {
     *     // ... filter to delete one Empleado
     *   }
     * })
     * 
     */
    delete<T extends empleadoDeleteArgs>(args: SelectSubset<T, empleadoDeleteArgs<ExtArgs>>): Prisma__empleadoClient<$Result.GetResult<Prisma.$empleadoPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Empleado.
     * @param {empleadoUpdateArgs} args - Arguments to update one Empleado.
     * @example
     * // Update one Empleado
     * const empleado = await prisma.empleado.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends empleadoUpdateArgs>(args: SelectSubset<T, empleadoUpdateArgs<ExtArgs>>): Prisma__empleadoClient<$Result.GetResult<Prisma.$empleadoPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Empleados.
     * @param {empleadoDeleteManyArgs} args - Arguments to filter Empleados to delete.
     * @example
     * // Delete a few Empleados
     * const { count } = await prisma.empleado.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends empleadoDeleteManyArgs>(args?: SelectSubset<T, empleadoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Empleados.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {empleadoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Empleados
     * const empleado = await prisma.empleado.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends empleadoUpdateManyArgs>(args: SelectSubset<T, empleadoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Empleados and returns the data updated in the database.
     * @param {empleadoUpdateManyAndReturnArgs} args - Arguments to update many Empleados.
     * @example
     * // Update many Empleados
     * const empleado = await prisma.empleado.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Empleados and only return the `id_empleado`
     * const empleadoWithId_empleadoOnly = await prisma.empleado.updateManyAndReturn({
     *   select: { id_empleado: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends empleadoUpdateManyAndReturnArgs>(args: SelectSubset<T, empleadoUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$empleadoPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Empleado.
     * @param {empleadoUpsertArgs} args - Arguments to update or create a Empleado.
     * @example
     * // Update or create a Empleado
     * const empleado = await prisma.empleado.upsert({
     *   create: {
     *     // ... data to create a Empleado
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Empleado we want to update
     *   }
     * })
     */
    upsert<T extends empleadoUpsertArgs>(args: SelectSubset<T, empleadoUpsertArgs<ExtArgs>>): Prisma__empleadoClient<$Result.GetResult<Prisma.$empleadoPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Empleados.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {empleadoCountArgs} args - Arguments to filter Empleados to count.
     * @example
     * // Count the number of Empleados
     * const count = await prisma.empleado.count({
     *   where: {
     *     // ... the filter for the Empleados we want to count
     *   }
     * })
    **/
    count<T extends empleadoCountArgs>(
      args?: Subset<T, empleadoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], EmpleadoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Empleado.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EmpleadoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends EmpleadoAggregateArgs>(args: Subset<T, EmpleadoAggregateArgs>): Prisma.PrismaPromise<GetEmpleadoAggregateType<T>>

    /**
     * Group by Empleado.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {empleadoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends empleadoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: empleadoGroupByArgs['orderBy'] }
        : { orderBy?: empleadoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, empleadoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetEmpleadoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the empleado model
   */
  readonly fields: empleadoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for empleado.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__empleadoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    concepto_empleado<T extends empleado$concepto_empleadoArgs<ExtArgs> = {}>(args?: Subset<T, empleado$concepto_empleadoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$concepto_empleadoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    detalle_nomina<T extends empleado$detalle_nominaArgs<ExtArgs> = {}>(args?: Subset<T, empleado$detalle_nominaArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$detalle_nominaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    estado_civil<T extends estado_civilDefaultArgs<ExtArgs> = {}>(args?: Subset<T, estado_civilDefaultArgs<ExtArgs>>): Prisma__estado_civilClient<$Result.GetResult<Prisma.$estado_civilPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    hijo<T extends empleado$hijoArgs<ExtArgs> = {}>(args?: Subset<T, empleado$hijoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$hijoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    historial_cargo<T extends empleado$historial_cargoArgs<ExtArgs> = {}>(args?: Subset<T, empleado$historial_cargoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$historial_cargoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    usuario<T extends empleado$usuarioArgs<ExtArgs> = {}>(args?: Subset<T, empleado$usuarioArgs<ExtArgs>>): Prisma__usuarioClient<$Result.GetResult<Prisma.$usuarioPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the empleado model
   */
  interface empleadoFieldRefs {
    readonly id_empleado: FieldRef<"empleado", 'Int'>
    readonly nombre: FieldRef<"empleado", 'String'>
    readonly cedula: FieldRef<"empleado", 'String'>
    readonly apellido: FieldRef<"empleado", 'String'>
    readonly fecha_nacimiento: FieldRef<"empleado", 'DateTime'>
    readonly correo: FieldRef<"empleado", 'String'>
    readonly fecha_ingreso: FieldRef<"empleado", 'DateTime'>
    readonly telefono: FieldRef<"empleado", 'String'>
    readonly fecha_egreso: FieldRef<"empleado", 'DateTime'>
    readonly direccion: FieldRef<"empleado", 'String'>
    readonly afiliado_IPS: FieldRef<"empleado", 'Boolean'>
    readonly id_estado_civil: FieldRef<"empleado", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * empleado findUnique
   */
  export type empleadoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the empleado
     */
    select?: empleadoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the empleado
     */
    omit?: empleadoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: empleadoInclude<ExtArgs> | null
    /**
     * Filter, which empleado to fetch.
     */
    where: empleadoWhereUniqueInput
  }

  /**
   * empleado findUniqueOrThrow
   */
  export type empleadoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the empleado
     */
    select?: empleadoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the empleado
     */
    omit?: empleadoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: empleadoInclude<ExtArgs> | null
    /**
     * Filter, which empleado to fetch.
     */
    where: empleadoWhereUniqueInput
  }

  /**
   * empleado findFirst
   */
  export type empleadoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the empleado
     */
    select?: empleadoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the empleado
     */
    omit?: empleadoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: empleadoInclude<ExtArgs> | null
    /**
     * Filter, which empleado to fetch.
     */
    where?: empleadoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of empleados to fetch.
     */
    orderBy?: empleadoOrderByWithRelationInput | empleadoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for empleados.
     */
    cursor?: empleadoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` empleados from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` empleados.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of empleados.
     */
    distinct?: EmpleadoScalarFieldEnum | EmpleadoScalarFieldEnum[]
  }

  /**
   * empleado findFirstOrThrow
   */
  export type empleadoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the empleado
     */
    select?: empleadoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the empleado
     */
    omit?: empleadoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: empleadoInclude<ExtArgs> | null
    /**
     * Filter, which empleado to fetch.
     */
    where?: empleadoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of empleados to fetch.
     */
    orderBy?: empleadoOrderByWithRelationInput | empleadoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for empleados.
     */
    cursor?: empleadoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` empleados from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` empleados.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of empleados.
     */
    distinct?: EmpleadoScalarFieldEnum | EmpleadoScalarFieldEnum[]
  }

  /**
   * empleado findMany
   */
  export type empleadoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the empleado
     */
    select?: empleadoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the empleado
     */
    omit?: empleadoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: empleadoInclude<ExtArgs> | null
    /**
     * Filter, which empleados to fetch.
     */
    where?: empleadoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of empleados to fetch.
     */
    orderBy?: empleadoOrderByWithRelationInput | empleadoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing empleados.
     */
    cursor?: empleadoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` empleados from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` empleados.
     */
    skip?: number
    distinct?: EmpleadoScalarFieldEnum | EmpleadoScalarFieldEnum[]
  }

  /**
   * empleado create
   */
  export type empleadoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the empleado
     */
    select?: empleadoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the empleado
     */
    omit?: empleadoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: empleadoInclude<ExtArgs> | null
    /**
     * The data needed to create a empleado.
     */
    data: XOR<empleadoCreateInput, empleadoUncheckedCreateInput>
  }

  /**
   * empleado createMany
   */
  export type empleadoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many empleados.
     */
    data: empleadoCreateManyInput | empleadoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * empleado createManyAndReturn
   */
  export type empleadoCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the empleado
     */
    select?: empleadoSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the empleado
     */
    omit?: empleadoOmit<ExtArgs> | null
    /**
     * The data used to create many empleados.
     */
    data: empleadoCreateManyInput | empleadoCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: empleadoIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * empleado update
   */
  export type empleadoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the empleado
     */
    select?: empleadoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the empleado
     */
    omit?: empleadoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: empleadoInclude<ExtArgs> | null
    /**
     * The data needed to update a empleado.
     */
    data: XOR<empleadoUpdateInput, empleadoUncheckedUpdateInput>
    /**
     * Choose, which empleado to update.
     */
    where: empleadoWhereUniqueInput
  }

  /**
   * empleado updateMany
   */
  export type empleadoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update empleados.
     */
    data: XOR<empleadoUpdateManyMutationInput, empleadoUncheckedUpdateManyInput>
    /**
     * Filter which empleados to update
     */
    where?: empleadoWhereInput
    /**
     * Limit how many empleados to update.
     */
    limit?: number
  }

  /**
   * empleado updateManyAndReturn
   */
  export type empleadoUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the empleado
     */
    select?: empleadoSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the empleado
     */
    omit?: empleadoOmit<ExtArgs> | null
    /**
     * The data used to update empleados.
     */
    data: XOR<empleadoUpdateManyMutationInput, empleadoUncheckedUpdateManyInput>
    /**
     * Filter which empleados to update
     */
    where?: empleadoWhereInput
    /**
     * Limit how many empleados to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: empleadoIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * empleado upsert
   */
  export type empleadoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the empleado
     */
    select?: empleadoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the empleado
     */
    omit?: empleadoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: empleadoInclude<ExtArgs> | null
    /**
     * The filter to search for the empleado to update in case it exists.
     */
    where: empleadoWhereUniqueInput
    /**
     * In case the empleado found by the `where` argument doesn't exist, create a new empleado with this data.
     */
    create: XOR<empleadoCreateInput, empleadoUncheckedCreateInput>
    /**
     * In case the empleado was found with the provided `where` argument, update it with this data.
     */
    update: XOR<empleadoUpdateInput, empleadoUncheckedUpdateInput>
  }

  /**
   * empleado delete
   */
  export type empleadoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the empleado
     */
    select?: empleadoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the empleado
     */
    omit?: empleadoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: empleadoInclude<ExtArgs> | null
    /**
     * Filter which empleado to delete.
     */
    where: empleadoWhereUniqueInput
  }

  /**
   * empleado deleteMany
   */
  export type empleadoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which empleados to delete
     */
    where?: empleadoWhereInput
    /**
     * Limit how many empleados to delete.
     */
    limit?: number
  }

  /**
   * empleado.concepto_empleado
   */
  export type empleado$concepto_empleadoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the concepto_empleado
     */
    select?: concepto_empleadoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the concepto_empleado
     */
    omit?: concepto_empleadoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: concepto_empleadoInclude<ExtArgs> | null
    where?: concepto_empleadoWhereInput
    orderBy?: concepto_empleadoOrderByWithRelationInput | concepto_empleadoOrderByWithRelationInput[]
    cursor?: concepto_empleadoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Concepto_empleadoScalarFieldEnum | Concepto_empleadoScalarFieldEnum[]
  }

  /**
   * empleado.detalle_nomina
   */
  export type empleado$detalle_nominaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the detalle_nomina
     */
    select?: detalle_nominaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the detalle_nomina
     */
    omit?: detalle_nominaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: detalle_nominaInclude<ExtArgs> | null
    where?: detalle_nominaWhereInput
    orderBy?: detalle_nominaOrderByWithRelationInput | detalle_nominaOrderByWithRelationInput[]
    cursor?: detalle_nominaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Detalle_nominaScalarFieldEnum | Detalle_nominaScalarFieldEnum[]
  }

  /**
   * empleado.hijo
   */
  export type empleado$hijoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the hijo
     */
    select?: hijoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the hijo
     */
    omit?: hijoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: hijoInclude<ExtArgs> | null
    where?: hijoWhereInput
    orderBy?: hijoOrderByWithRelationInput | hijoOrderByWithRelationInput[]
    cursor?: hijoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: HijoScalarFieldEnum | HijoScalarFieldEnum[]
  }

  /**
   * empleado.historial_cargo
   */
  export type empleado$historial_cargoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the historial_cargo
     */
    select?: historial_cargoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the historial_cargo
     */
    omit?: historial_cargoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: historial_cargoInclude<ExtArgs> | null
    where?: historial_cargoWhereInput
    orderBy?: historial_cargoOrderByWithRelationInput | historial_cargoOrderByWithRelationInput[]
    cursor?: historial_cargoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Historial_cargoScalarFieldEnum | Historial_cargoScalarFieldEnum[]
  }

  /**
   * empleado.usuario
   */
  export type empleado$usuarioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the usuario
     */
    select?: usuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the usuario
     */
    omit?: usuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usuarioInclude<ExtArgs> | null
    where?: usuarioWhereInput
  }

  /**
   * empleado without action
   */
  export type empleadoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the empleado
     */
    select?: empleadoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the empleado
     */
    omit?: empleadoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: empleadoInclude<ExtArgs> | null
  }


  /**
   * Model estado_civil
   */

  export type AggregateEstado_civil = {
    _count: Estado_civilCountAggregateOutputType | null
    _avg: Estado_civilAvgAggregateOutputType | null
    _sum: Estado_civilSumAggregateOutputType | null
    _min: Estado_civilMinAggregateOutputType | null
    _max: Estado_civilMaxAggregateOutputType | null
  }

  export type Estado_civilAvgAggregateOutputType = {
    id_estado: number | null
  }

  export type Estado_civilSumAggregateOutputType = {
    id_estado: number | null
  }

  export type Estado_civilMinAggregateOutputType = {
    id_estado: number | null
    descripcion: string | null
  }

  export type Estado_civilMaxAggregateOutputType = {
    id_estado: number | null
    descripcion: string | null
  }

  export type Estado_civilCountAggregateOutputType = {
    id_estado: number
    descripcion: number
    _all: number
  }


  export type Estado_civilAvgAggregateInputType = {
    id_estado?: true
  }

  export type Estado_civilSumAggregateInputType = {
    id_estado?: true
  }

  export type Estado_civilMinAggregateInputType = {
    id_estado?: true
    descripcion?: true
  }

  export type Estado_civilMaxAggregateInputType = {
    id_estado?: true
    descripcion?: true
  }

  export type Estado_civilCountAggregateInputType = {
    id_estado?: true
    descripcion?: true
    _all?: true
  }

  export type Estado_civilAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which estado_civil to aggregate.
     */
    where?: estado_civilWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of estado_civils to fetch.
     */
    orderBy?: estado_civilOrderByWithRelationInput | estado_civilOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: estado_civilWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` estado_civils from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` estado_civils.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned estado_civils
    **/
    _count?: true | Estado_civilCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Estado_civilAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Estado_civilSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Estado_civilMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Estado_civilMaxAggregateInputType
  }

  export type GetEstado_civilAggregateType<T extends Estado_civilAggregateArgs> = {
        [P in keyof T & keyof AggregateEstado_civil]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateEstado_civil[P]>
      : GetScalarType<T[P], AggregateEstado_civil[P]>
  }




  export type estado_civilGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: estado_civilWhereInput
    orderBy?: estado_civilOrderByWithAggregationInput | estado_civilOrderByWithAggregationInput[]
    by: Estado_civilScalarFieldEnum[] | Estado_civilScalarFieldEnum
    having?: estado_civilScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Estado_civilCountAggregateInputType | true
    _avg?: Estado_civilAvgAggregateInputType
    _sum?: Estado_civilSumAggregateInputType
    _min?: Estado_civilMinAggregateInputType
    _max?: Estado_civilMaxAggregateInputType
  }

  export type Estado_civilGroupByOutputType = {
    id_estado: number
    descripcion: string
    _count: Estado_civilCountAggregateOutputType | null
    _avg: Estado_civilAvgAggregateOutputType | null
    _sum: Estado_civilSumAggregateOutputType | null
    _min: Estado_civilMinAggregateOutputType | null
    _max: Estado_civilMaxAggregateOutputType | null
  }

  type GetEstado_civilGroupByPayload<T extends estado_civilGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Estado_civilGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Estado_civilGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Estado_civilGroupByOutputType[P]>
            : GetScalarType<T[P], Estado_civilGroupByOutputType[P]>
        }
      >
    >


  export type estado_civilSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_estado?: boolean
    descripcion?: boolean
    empleado?: boolean | estado_civil$empleadoArgs<ExtArgs>
    _count?: boolean | Estado_civilCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["estado_civil"]>

  export type estado_civilSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_estado?: boolean
    descripcion?: boolean
  }, ExtArgs["result"]["estado_civil"]>

  export type estado_civilSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_estado?: boolean
    descripcion?: boolean
  }, ExtArgs["result"]["estado_civil"]>

  export type estado_civilSelectScalar = {
    id_estado?: boolean
    descripcion?: boolean
  }

  export type estado_civilOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id_estado" | "descripcion", ExtArgs["result"]["estado_civil"]>
  export type estado_civilInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    empleado?: boolean | estado_civil$empleadoArgs<ExtArgs>
    _count?: boolean | Estado_civilCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type estado_civilIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type estado_civilIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $estado_civilPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "estado_civil"
    objects: {
      empleado: Prisma.$empleadoPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id_estado: number
      descripcion: string
    }, ExtArgs["result"]["estado_civil"]>
    composites: {}
  }

  type estado_civilGetPayload<S extends boolean | null | undefined | estado_civilDefaultArgs> = $Result.GetResult<Prisma.$estado_civilPayload, S>

  type estado_civilCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<estado_civilFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Estado_civilCountAggregateInputType | true
    }

  export interface estado_civilDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['estado_civil'], meta: { name: 'estado_civil' } }
    /**
     * Find zero or one Estado_civil that matches the filter.
     * @param {estado_civilFindUniqueArgs} args - Arguments to find a Estado_civil
     * @example
     * // Get one Estado_civil
     * const estado_civil = await prisma.estado_civil.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends estado_civilFindUniqueArgs>(args: SelectSubset<T, estado_civilFindUniqueArgs<ExtArgs>>): Prisma__estado_civilClient<$Result.GetResult<Prisma.$estado_civilPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Estado_civil that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {estado_civilFindUniqueOrThrowArgs} args - Arguments to find a Estado_civil
     * @example
     * // Get one Estado_civil
     * const estado_civil = await prisma.estado_civil.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends estado_civilFindUniqueOrThrowArgs>(args: SelectSubset<T, estado_civilFindUniqueOrThrowArgs<ExtArgs>>): Prisma__estado_civilClient<$Result.GetResult<Prisma.$estado_civilPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Estado_civil that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {estado_civilFindFirstArgs} args - Arguments to find a Estado_civil
     * @example
     * // Get one Estado_civil
     * const estado_civil = await prisma.estado_civil.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends estado_civilFindFirstArgs>(args?: SelectSubset<T, estado_civilFindFirstArgs<ExtArgs>>): Prisma__estado_civilClient<$Result.GetResult<Prisma.$estado_civilPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Estado_civil that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {estado_civilFindFirstOrThrowArgs} args - Arguments to find a Estado_civil
     * @example
     * // Get one Estado_civil
     * const estado_civil = await prisma.estado_civil.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends estado_civilFindFirstOrThrowArgs>(args?: SelectSubset<T, estado_civilFindFirstOrThrowArgs<ExtArgs>>): Prisma__estado_civilClient<$Result.GetResult<Prisma.$estado_civilPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Estado_civils that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {estado_civilFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Estado_civils
     * const estado_civils = await prisma.estado_civil.findMany()
     * 
     * // Get first 10 Estado_civils
     * const estado_civils = await prisma.estado_civil.findMany({ take: 10 })
     * 
     * // Only select the `id_estado`
     * const estado_civilWithId_estadoOnly = await prisma.estado_civil.findMany({ select: { id_estado: true } })
     * 
     */
    findMany<T extends estado_civilFindManyArgs>(args?: SelectSubset<T, estado_civilFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$estado_civilPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Estado_civil.
     * @param {estado_civilCreateArgs} args - Arguments to create a Estado_civil.
     * @example
     * // Create one Estado_civil
     * const Estado_civil = await prisma.estado_civil.create({
     *   data: {
     *     // ... data to create a Estado_civil
     *   }
     * })
     * 
     */
    create<T extends estado_civilCreateArgs>(args: SelectSubset<T, estado_civilCreateArgs<ExtArgs>>): Prisma__estado_civilClient<$Result.GetResult<Prisma.$estado_civilPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Estado_civils.
     * @param {estado_civilCreateManyArgs} args - Arguments to create many Estado_civils.
     * @example
     * // Create many Estado_civils
     * const estado_civil = await prisma.estado_civil.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends estado_civilCreateManyArgs>(args?: SelectSubset<T, estado_civilCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Estado_civils and returns the data saved in the database.
     * @param {estado_civilCreateManyAndReturnArgs} args - Arguments to create many Estado_civils.
     * @example
     * // Create many Estado_civils
     * const estado_civil = await prisma.estado_civil.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Estado_civils and only return the `id_estado`
     * const estado_civilWithId_estadoOnly = await prisma.estado_civil.createManyAndReturn({
     *   select: { id_estado: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends estado_civilCreateManyAndReturnArgs>(args?: SelectSubset<T, estado_civilCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$estado_civilPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Estado_civil.
     * @param {estado_civilDeleteArgs} args - Arguments to delete one Estado_civil.
     * @example
     * // Delete one Estado_civil
     * const Estado_civil = await prisma.estado_civil.delete({
     *   where: {
     *     // ... filter to delete one Estado_civil
     *   }
     * })
     * 
     */
    delete<T extends estado_civilDeleteArgs>(args: SelectSubset<T, estado_civilDeleteArgs<ExtArgs>>): Prisma__estado_civilClient<$Result.GetResult<Prisma.$estado_civilPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Estado_civil.
     * @param {estado_civilUpdateArgs} args - Arguments to update one Estado_civil.
     * @example
     * // Update one Estado_civil
     * const estado_civil = await prisma.estado_civil.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends estado_civilUpdateArgs>(args: SelectSubset<T, estado_civilUpdateArgs<ExtArgs>>): Prisma__estado_civilClient<$Result.GetResult<Prisma.$estado_civilPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Estado_civils.
     * @param {estado_civilDeleteManyArgs} args - Arguments to filter Estado_civils to delete.
     * @example
     * // Delete a few Estado_civils
     * const { count } = await prisma.estado_civil.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends estado_civilDeleteManyArgs>(args?: SelectSubset<T, estado_civilDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Estado_civils.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {estado_civilUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Estado_civils
     * const estado_civil = await prisma.estado_civil.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends estado_civilUpdateManyArgs>(args: SelectSubset<T, estado_civilUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Estado_civils and returns the data updated in the database.
     * @param {estado_civilUpdateManyAndReturnArgs} args - Arguments to update many Estado_civils.
     * @example
     * // Update many Estado_civils
     * const estado_civil = await prisma.estado_civil.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Estado_civils and only return the `id_estado`
     * const estado_civilWithId_estadoOnly = await prisma.estado_civil.updateManyAndReturn({
     *   select: { id_estado: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends estado_civilUpdateManyAndReturnArgs>(args: SelectSubset<T, estado_civilUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$estado_civilPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Estado_civil.
     * @param {estado_civilUpsertArgs} args - Arguments to update or create a Estado_civil.
     * @example
     * // Update or create a Estado_civil
     * const estado_civil = await prisma.estado_civil.upsert({
     *   create: {
     *     // ... data to create a Estado_civil
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Estado_civil we want to update
     *   }
     * })
     */
    upsert<T extends estado_civilUpsertArgs>(args: SelectSubset<T, estado_civilUpsertArgs<ExtArgs>>): Prisma__estado_civilClient<$Result.GetResult<Prisma.$estado_civilPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Estado_civils.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {estado_civilCountArgs} args - Arguments to filter Estado_civils to count.
     * @example
     * // Count the number of Estado_civils
     * const count = await prisma.estado_civil.count({
     *   where: {
     *     // ... the filter for the Estado_civils we want to count
     *   }
     * })
    **/
    count<T extends estado_civilCountArgs>(
      args?: Subset<T, estado_civilCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Estado_civilCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Estado_civil.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Estado_civilAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Estado_civilAggregateArgs>(args: Subset<T, Estado_civilAggregateArgs>): Prisma.PrismaPromise<GetEstado_civilAggregateType<T>>

    /**
     * Group by Estado_civil.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {estado_civilGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends estado_civilGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: estado_civilGroupByArgs['orderBy'] }
        : { orderBy?: estado_civilGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, estado_civilGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetEstado_civilGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the estado_civil model
   */
  readonly fields: estado_civilFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for estado_civil.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__estado_civilClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    empleado<T extends estado_civil$empleadoArgs<ExtArgs> = {}>(args?: Subset<T, estado_civil$empleadoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$empleadoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the estado_civil model
   */
  interface estado_civilFieldRefs {
    readonly id_estado: FieldRef<"estado_civil", 'Int'>
    readonly descripcion: FieldRef<"estado_civil", 'String'>
  }
    

  // Custom InputTypes
  /**
   * estado_civil findUnique
   */
  export type estado_civilFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the estado_civil
     */
    select?: estado_civilSelect<ExtArgs> | null
    /**
     * Omit specific fields from the estado_civil
     */
    omit?: estado_civilOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: estado_civilInclude<ExtArgs> | null
    /**
     * Filter, which estado_civil to fetch.
     */
    where: estado_civilWhereUniqueInput
  }

  /**
   * estado_civil findUniqueOrThrow
   */
  export type estado_civilFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the estado_civil
     */
    select?: estado_civilSelect<ExtArgs> | null
    /**
     * Omit specific fields from the estado_civil
     */
    omit?: estado_civilOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: estado_civilInclude<ExtArgs> | null
    /**
     * Filter, which estado_civil to fetch.
     */
    where: estado_civilWhereUniqueInput
  }

  /**
   * estado_civil findFirst
   */
  export type estado_civilFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the estado_civil
     */
    select?: estado_civilSelect<ExtArgs> | null
    /**
     * Omit specific fields from the estado_civil
     */
    omit?: estado_civilOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: estado_civilInclude<ExtArgs> | null
    /**
     * Filter, which estado_civil to fetch.
     */
    where?: estado_civilWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of estado_civils to fetch.
     */
    orderBy?: estado_civilOrderByWithRelationInput | estado_civilOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for estado_civils.
     */
    cursor?: estado_civilWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` estado_civils from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` estado_civils.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of estado_civils.
     */
    distinct?: Estado_civilScalarFieldEnum | Estado_civilScalarFieldEnum[]
  }

  /**
   * estado_civil findFirstOrThrow
   */
  export type estado_civilFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the estado_civil
     */
    select?: estado_civilSelect<ExtArgs> | null
    /**
     * Omit specific fields from the estado_civil
     */
    omit?: estado_civilOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: estado_civilInclude<ExtArgs> | null
    /**
     * Filter, which estado_civil to fetch.
     */
    where?: estado_civilWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of estado_civils to fetch.
     */
    orderBy?: estado_civilOrderByWithRelationInput | estado_civilOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for estado_civils.
     */
    cursor?: estado_civilWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` estado_civils from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` estado_civils.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of estado_civils.
     */
    distinct?: Estado_civilScalarFieldEnum | Estado_civilScalarFieldEnum[]
  }

  /**
   * estado_civil findMany
   */
  export type estado_civilFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the estado_civil
     */
    select?: estado_civilSelect<ExtArgs> | null
    /**
     * Omit specific fields from the estado_civil
     */
    omit?: estado_civilOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: estado_civilInclude<ExtArgs> | null
    /**
     * Filter, which estado_civils to fetch.
     */
    where?: estado_civilWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of estado_civils to fetch.
     */
    orderBy?: estado_civilOrderByWithRelationInput | estado_civilOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing estado_civils.
     */
    cursor?: estado_civilWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` estado_civils from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` estado_civils.
     */
    skip?: number
    distinct?: Estado_civilScalarFieldEnum | Estado_civilScalarFieldEnum[]
  }

  /**
   * estado_civil create
   */
  export type estado_civilCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the estado_civil
     */
    select?: estado_civilSelect<ExtArgs> | null
    /**
     * Omit specific fields from the estado_civil
     */
    omit?: estado_civilOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: estado_civilInclude<ExtArgs> | null
    /**
     * The data needed to create a estado_civil.
     */
    data: XOR<estado_civilCreateInput, estado_civilUncheckedCreateInput>
  }

  /**
   * estado_civil createMany
   */
  export type estado_civilCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many estado_civils.
     */
    data: estado_civilCreateManyInput | estado_civilCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * estado_civil createManyAndReturn
   */
  export type estado_civilCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the estado_civil
     */
    select?: estado_civilSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the estado_civil
     */
    omit?: estado_civilOmit<ExtArgs> | null
    /**
     * The data used to create many estado_civils.
     */
    data: estado_civilCreateManyInput | estado_civilCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * estado_civil update
   */
  export type estado_civilUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the estado_civil
     */
    select?: estado_civilSelect<ExtArgs> | null
    /**
     * Omit specific fields from the estado_civil
     */
    omit?: estado_civilOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: estado_civilInclude<ExtArgs> | null
    /**
     * The data needed to update a estado_civil.
     */
    data: XOR<estado_civilUpdateInput, estado_civilUncheckedUpdateInput>
    /**
     * Choose, which estado_civil to update.
     */
    where: estado_civilWhereUniqueInput
  }

  /**
   * estado_civil updateMany
   */
  export type estado_civilUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update estado_civils.
     */
    data: XOR<estado_civilUpdateManyMutationInput, estado_civilUncheckedUpdateManyInput>
    /**
     * Filter which estado_civils to update
     */
    where?: estado_civilWhereInput
    /**
     * Limit how many estado_civils to update.
     */
    limit?: number
  }

  /**
   * estado_civil updateManyAndReturn
   */
  export type estado_civilUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the estado_civil
     */
    select?: estado_civilSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the estado_civil
     */
    omit?: estado_civilOmit<ExtArgs> | null
    /**
     * The data used to update estado_civils.
     */
    data: XOR<estado_civilUpdateManyMutationInput, estado_civilUncheckedUpdateManyInput>
    /**
     * Filter which estado_civils to update
     */
    where?: estado_civilWhereInput
    /**
     * Limit how many estado_civils to update.
     */
    limit?: number
  }

  /**
   * estado_civil upsert
   */
  export type estado_civilUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the estado_civil
     */
    select?: estado_civilSelect<ExtArgs> | null
    /**
     * Omit specific fields from the estado_civil
     */
    omit?: estado_civilOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: estado_civilInclude<ExtArgs> | null
    /**
     * The filter to search for the estado_civil to update in case it exists.
     */
    where: estado_civilWhereUniqueInput
    /**
     * In case the estado_civil found by the `where` argument doesn't exist, create a new estado_civil with this data.
     */
    create: XOR<estado_civilCreateInput, estado_civilUncheckedCreateInput>
    /**
     * In case the estado_civil was found with the provided `where` argument, update it with this data.
     */
    update: XOR<estado_civilUpdateInput, estado_civilUncheckedUpdateInput>
  }

  /**
   * estado_civil delete
   */
  export type estado_civilDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the estado_civil
     */
    select?: estado_civilSelect<ExtArgs> | null
    /**
     * Omit specific fields from the estado_civil
     */
    omit?: estado_civilOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: estado_civilInclude<ExtArgs> | null
    /**
     * Filter which estado_civil to delete.
     */
    where: estado_civilWhereUniqueInput
  }

  /**
   * estado_civil deleteMany
   */
  export type estado_civilDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which estado_civils to delete
     */
    where?: estado_civilWhereInput
    /**
     * Limit how many estado_civils to delete.
     */
    limit?: number
  }

  /**
   * estado_civil.empleado
   */
  export type estado_civil$empleadoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the empleado
     */
    select?: empleadoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the empleado
     */
    omit?: empleadoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: empleadoInclude<ExtArgs> | null
    where?: empleadoWhereInput
    orderBy?: empleadoOrderByWithRelationInput | empleadoOrderByWithRelationInput[]
    cursor?: empleadoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: EmpleadoScalarFieldEnum | EmpleadoScalarFieldEnum[]
  }

  /**
   * estado_civil without action
   */
  export type estado_civilDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the estado_civil
     */
    select?: estado_civilSelect<ExtArgs> | null
    /**
     * Omit specific fields from the estado_civil
     */
    omit?: estado_civilOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: estado_civilInclude<ExtArgs> | null
  }


  /**
   * Model hijo
   */

  export type AggregateHijo = {
    _count: HijoCountAggregateOutputType | null
    _avg: HijoAvgAggregateOutputType | null
    _sum: HijoSumAggregateOutputType | null
    _min: HijoMinAggregateOutputType | null
    _max: HijoMaxAggregateOutputType | null
  }

  export type HijoAvgAggregateOutputType = {
    id_hijo: number | null
    id_empleado: number | null
  }

  export type HijoSumAggregateOutputType = {
    id_hijo: number | null
    id_empleado: number | null
  }

  export type HijoMinAggregateOutputType = {
    id_hijo: number | null
    nombre: string | null
    certificado_vida_residencia: string | null
    fecha_vencimiento_certificado: Date | null
    id_empleado: number | null
    discapacidad: boolean | null
    fecha_nacimiento: Date | null
    certificado_nacimiento: string | null
  }

  export type HijoMaxAggregateOutputType = {
    id_hijo: number | null
    nombre: string | null
    certificado_vida_residencia: string | null
    fecha_vencimiento_certificado: Date | null
    id_empleado: number | null
    discapacidad: boolean | null
    fecha_nacimiento: Date | null
    certificado_nacimiento: string | null
  }

  export type HijoCountAggregateOutputType = {
    id_hijo: number
    nombre: number
    certificado_vida_residencia: number
    fecha_vencimiento_certificado: number
    id_empleado: number
    discapacidad: number
    fecha_nacimiento: number
    certificado_nacimiento: number
    _all: number
  }


  export type HijoAvgAggregateInputType = {
    id_hijo?: true
    id_empleado?: true
  }

  export type HijoSumAggregateInputType = {
    id_hijo?: true
    id_empleado?: true
  }

  export type HijoMinAggregateInputType = {
    id_hijo?: true
    nombre?: true
    certificado_vida_residencia?: true
    fecha_vencimiento_certificado?: true
    id_empleado?: true
    discapacidad?: true
    fecha_nacimiento?: true
    certificado_nacimiento?: true
  }

  export type HijoMaxAggregateInputType = {
    id_hijo?: true
    nombre?: true
    certificado_vida_residencia?: true
    fecha_vencimiento_certificado?: true
    id_empleado?: true
    discapacidad?: true
    fecha_nacimiento?: true
    certificado_nacimiento?: true
  }

  export type HijoCountAggregateInputType = {
    id_hijo?: true
    nombre?: true
    certificado_vida_residencia?: true
    fecha_vencimiento_certificado?: true
    id_empleado?: true
    discapacidad?: true
    fecha_nacimiento?: true
    certificado_nacimiento?: true
    _all?: true
  }

  export type HijoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which hijo to aggregate.
     */
    where?: hijoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of hijos to fetch.
     */
    orderBy?: hijoOrderByWithRelationInput | hijoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: hijoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` hijos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` hijos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned hijos
    **/
    _count?: true | HijoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: HijoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: HijoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: HijoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: HijoMaxAggregateInputType
  }

  export type GetHijoAggregateType<T extends HijoAggregateArgs> = {
        [P in keyof T & keyof AggregateHijo]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateHijo[P]>
      : GetScalarType<T[P], AggregateHijo[P]>
  }




  export type hijoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: hijoWhereInput
    orderBy?: hijoOrderByWithAggregationInput | hijoOrderByWithAggregationInput[]
    by: HijoScalarFieldEnum[] | HijoScalarFieldEnum
    having?: hijoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: HijoCountAggregateInputType | true
    _avg?: HijoAvgAggregateInputType
    _sum?: HijoSumAggregateInputType
    _min?: HijoMinAggregateInputType
    _max?: HijoMaxAggregateInputType
  }

  export type HijoGroupByOutputType = {
    id_hijo: number
    nombre: string
    certificado_vida_residencia: string
    fecha_vencimiento_certificado: Date
    id_empleado: number
    discapacidad: boolean
    fecha_nacimiento: Date
    certificado_nacimiento: string
    _count: HijoCountAggregateOutputType | null
    _avg: HijoAvgAggregateOutputType | null
    _sum: HijoSumAggregateOutputType | null
    _min: HijoMinAggregateOutputType | null
    _max: HijoMaxAggregateOutputType | null
  }

  type GetHijoGroupByPayload<T extends hijoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<HijoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof HijoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], HijoGroupByOutputType[P]>
            : GetScalarType<T[P], HijoGroupByOutputType[P]>
        }
      >
    >


  export type hijoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_hijo?: boolean
    nombre?: boolean
    certificado_vida_residencia?: boolean
    fecha_vencimiento_certificado?: boolean
    id_empleado?: boolean
    discapacidad?: boolean
    fecha_nacimiento?: boolean
    certificado_nacimiento?: boolean
    empleado?: boolean | empleadoDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["hijo"]>

  export type hijoSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_hijo?: boolean
    nombre?: boolean
    certificado_vida_residencia?: boolean
    fecha_vencimiento_certificado?: boolean
    id_empleado?: boolean
    discapacidad?: boolean
    fecha_nacimiento?: boolean
    certificado_nacimiento?: boolean
    empleado?: boolean | empleadoDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["hijo"]>

  export type hijoSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_hijo?: boolean
    nombre?: boolean
    certificado_vida_residencia?: boolean
    fecha_vencimiento_certificado?: boolean
    id_empleado?: boolean
    discapacidad?: boolean
    fecha_nacimiento?: boolean
    certificado_nacimiento?: boolean
    empleado?: boolean | empleadoDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["hijo"]>

  export type hijoSelectScalar = {
    id_hijo?: boolean
    nombre?: boolean
    certificado_vida_residencia?: boolean
    fecha_vencimiento_certificado?: boolean
    id_empleado?: boolean
    discapacidad?: boolean
    fecha_nacimiento?: boolean
    certificado_nacimiento?: boolean
  }

  export type hijoOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id_hijo" | "nombre" | "certificado_vida_residencia" | "fecha_vencimiento_certificado" | "id_empleado" | "discapacidad" | "fecha_nacimiento" | "certificado_nacimiento", ExtArgs["result"]["hijo"]>
  export type hijoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    empleado?: boolean | empleadoDefaultArgs<ExtArgs>
  }
  export type hijoIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    empleado?: boolean | empleadoDefaultArgs<ExtArgs>
  }
  export type hijoIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    empleado?: boolean | empleadoDefaultArgs<ExtArgs>
  }

  export type $hijoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "hijo"
    objects: {
      empleado: Prisma.$empleadoPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id_hijo: number
      nombre: string
      certificado_vida_residencia: string
      fecha_vencimiento_certificado: Date
      id_empleado: number
      discapacidad: boolean
      fecha_nacimiento: Date
      certificado_nacimiento: string
    }, ExtArgs["result"]["hijo"]>
    composites: {}
  }

  type hijoGetPayload<S extends boolean | null | undefined | hijoDefaultArgs> = $Result.GetResult<Prisma.$hijoPayload, S>

  type hijoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<hijoFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: HijoCountAggregateInputType | true
    }

  export interface hijoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['hijo'], meta: { name: 'hijo' } }
    /**
     * Find zero or one Hijo that matches the filter.
     * @param {hijoFindUniqueArgs} args - Arguments to find a Hijo
     * @example
     * // Get one Hijo
     * const hijo = await prisma.hijo.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends hijoFindUniqueArgs>(args: SelectSubset<T, hijoFindUniqueArgs<ExtArgs>>): Prisma__hijoClient<$Result.GetResult<Prisma.$hijoPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Hijo that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {hijoFindUniqueOrThrowArgs} args - Arguments to find a Hijo
     * @example
     * // Get one Hijo
     * const hijo = await prisma.hijo.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends hijoFindUniqueOrThrowArgs>(args: SelectSubset<T, hijoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__hijoClient<$Result.GetResult<Prisma.$hijoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Hijo that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {hijoFindFirstArgs} args - Arguments to find a Hijo
     * @example
     * // Get one Hijo
     * const hijo = await prisma.hijo.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends hijoFindFirstArgs>(args?: SelectSubset<T, hijoFindFirstArgs<ExtArgs>>): Prisma__hijoClient<$Result.GetResult<Prisma.$hijoPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Hijo that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {hijoFindFirstOrThrowArgs} args - Arguments to find a Hijo
     * @example
     * // Get one Hijo
     * const hijo = await prisma.hijo.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends hijoFindFirstOrThrowArgs>(args?: SelectSubset<T, hijoFindFirstOrThrowArgs<ExtArgs>>): Prisma__hijoClient<$Result.GetResult<Prisma.$hijoPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Hijos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {hijoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Hijos
     * const hijos = await prisma.hijo.findMany()
     * 
     * // Get first 10 Hijos
     * const hijos = await prisma.hijo.findMany({ take: 10 })
     * 
     * // Only select the `id_hijo`
     * const hijoWithId_hijoOnly = await prisma.hijo.findMany({ select: { id_hijo: true } })
     * 
     */
    findMany<T extends hijoFindManyArgs>(args?: SelectSubset<T, hijoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$hijoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Hijo.
     * @param {hijoCreateArgs} args - Arguments to create a Hijo.
     * @example
     * // Create one Hijo
     * const Hijo = await prisma.hijo.create({
     *   data: {
     *     // ... data to create a Hijo
     *   }
     * })
     * 
     */
    create<T extends hijoCreateArgs>(args: SelectSubset<T, hijoCreateArgs<ExtArgs>>): Prisma__hijoClient<$Result.GetResult<Prisma.$hijoPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Hijos.
     * @param {hijoCreateManyArgs} args - Arguments to create many Hijos.
     * @example
     * // Create many Hijos
     * const hijo = await prisma.hijo.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends hijoCreateManyArgs>(args?: SelectSubset<T, hijoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Hijos and returns the data saved in the database.
     * @param {hijoCreateManyAndReturnArgs} args - Arguments to create many Hijos.
     * @example
     * // Create many Hijos
     * const hijo = await prisma.hijo.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Hijos and only return the `id_hijo`
     * const hijoWithId_hijoOnly = await prisma.hijo.createManyAndReturn({
     *   select: { id_hijo: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends hijoCreateManyAndReturnArgs>(args?: SelectSubset<T, hijoCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$hijoPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Hijo.
     * @param {hijoDeleteArgs} args - Arguments to delete one Hijo.
     * @example
     * // Delete one Hijo
     * const Hijo = await prisma.hijo.delete({
     *   where: {
     *     // ... filter to delete one Hijo
     *   }
     * })
     * 
     */
    delete<T extends hijoDeleteArgs>(args: SelectSubset<T, hijoDeleteArgs<ExtArgs>>): Prisma__hijoClient<$Result.GetResult<Prisma.$hijoPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Hijo.
     * @param {hijoUpdateArgs} args - Arguments to update one Hijo.
     * @example
     * // Update one Hijo
     * const hijo = await prisma.hijo.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends hijoUpdateArgs>(args: SelectSubset<T, hijoUpdateArgs<ExtArgs>>): Prisma__hijoClient<$Result.GetResult<Prisma.$hijoPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Hijos.
     * @param {hijoDeleteManyArgs} args - Arguments to filter Hijos to delete.
     * @example
     * // Delete a few Hijos
     * const { count } = await prisma.hijo.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends hijoDeleteManyArgs>(args?: SelectSubset<T, hijoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Hijos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {hijoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Hijos
     * const hijo = await prisma.hijo.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends hijoUpdateManyArgs>(args: SelectSubset<T, hijoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Hijos and returns the data updated in the database.
     * @param {hijoUpdateManyAndReturnArgs} args - Arguments to update many Hijos.
     * @example
     * // Update many Hijos
     * const hijo = await prisma.hijo.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Hijos and only return the `id_hijo`
     * const hijoWithId_hijoOnly = await prisma.hijo.updateManyAndReturn({
     *   select: { id_hijo: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends hijoUpdateManyAndReturnArgs>(args: SelectSubset<T, hijoUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$hijoPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Hijo.
     * @param {hijoUpsertArgs} args - Arguments to update or create a Hijo.
     * @example
     * // Update or create a Hijo
     * const hijo = await prisma.hijo.upsert({
     *   create: {
     *     // ... data to create a Hijo
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Hijo we want to update
     *   }
     * })
     */
    upsert<T extends hijoUpsertArgs>(args: SelectSubset<T, hijoUpsertArgs<ExtArgs>>): Prisma__hijoClient<$Result.GetResult<Prisma.$hijoPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Hijos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {hijoCountArgs} args - Arguments to filter Hijos to count.
     * @example
     * // Count the number of Hijos
     * const count = await prisma.hijo.count({
     *   where: {
     *     // ... the filter for the Hijos we want to count
     *   }
     * })
    **/
    count<T extends hijoCountArgs>(
      args?: Subset<T, hijoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], HijoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Hijo.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {HijoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends HijoAggregateArgs>(args: Subset<T, HijoAggregateArgs>): Prisma.PrismaPromise<GetHijoAggregateType<T>>

    /**
     * Group by Hijo.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {hijoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends hijoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: hijoGroupByArgs['orderBy'] }
        : { orderBy?: hijoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, hijoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetHijoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the hijo model
   */
  readonly fields: hijoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for hijo.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__hijoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    empleado<T extends empleadoDefaultArgs<ExtArgs> = {}>(args?: Subset<T, empleadoDefaultArgs<ExtArgs>>): Prisma__empleadoClient<$Result.GetResult<Prisma.$empleadoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the hijo model
   */
  interface hijoFieldRefs {
    readonly id_hijo: FieldRef<"hijo", 'Int'>
    readonly nombre: FieldRef<"hijo", 'String'>
    readonly certificado_vida_residencia: FieldRef<"hijo", 'String'>
    readonly fecha_vencimiento_certificado: FieldRef<"hijo", 'DateTime'>
    readonly id_empleado: FieldRef<"hijo", 'Int'>
    readonly discapacidad: FieldRef<"hijo", 'Boolean'>
    readonly fecha_nacimiento: FieldRef<"hijo", 'DateTime'>
    readonly certificado_nacimiento: FieldRef<"hijo", 'String'>
  }
    

  // Custom InputTypes
  /**
   * hijo findUnique
   */
  export type hijoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the hijo
     */
    select?: hijoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the hijo
     */
    omit?: hijoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: hijoInclude<ExtArgs> | null
    /**
     * Filter, which hijo to fetch.
     */
    where: hijoWhereUniqueInput
  }

  /**
   * hijo findUniqueOrThrow
   */
  export type hijoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the hijo
     */
    select?: hijoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the hijo
     */
    omit?: hijoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: hijoInclude<ExtArgs> | null
    /**
     * Filter, which hijo to fetch.
     */
    where: hijoWhereUniqueInput
  }

  /**
   * hijo findFirst
   */
  export type hijoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the hijo
     */
    select?: hijoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the hijo
     */
    omit?: hijoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: hijoInclude<ExtArgs> | null
    /**
     * Filter, which hijo to fetch.
     */
    where?: hijoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of hijos to fetch.
     */
    orderBy?: hijoOrderByWithRelationInput | hijoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for hijos.
     */
    cursor?: hijoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` hijos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` hijos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of hijos.
     */
    distinct?: HijoScalarFieldEnum | HijoScalarFieldEnum[]
  }

  /**
   * hijo findFirstOrThrow
   */
  export type hijoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the hijo
     */
    select?: hijoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the hijo
     */
    omit?: hijoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: hijoInclude<ExtArgs> | null
    /**
     * Filter, which hijo to fetch.
     */
    where?: hijoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of hijos to fetch.
     */
    orderBy?: hijoOrderByWithRelationInput | hijoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for hijos.
     */
    cursor?: hijoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` hijos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` hijos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of hijos.
     */
    distinct?: HijoScalarFieldEnum | HijoScalarFieldEnum[]
  }

  /**
   * hijo findMany
   */
  export type hijoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the hijo
     */
    select?: hijoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the hijo
     */
    omit?: hijoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: hijoInclude<ExtArgs> | null
    /**
     * Filter, which hijos to fetch.
     */
    where?: hijoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of hijos to fetch.
     */
    orderBy?: hijoOrderByWithRelationInput | hijoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing hijos.
     */
    cursor?: hijoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` hijos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` hijos.
     */
    skip?: number
    distinct?: HijoScalarFieldEnum | HijoScalarFieldEnum[]
  }

  /**
   * hijo create
   */
  export type hijoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the hijo
     */
    select?: hijoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the hijo
     */
    omit?: hijoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: hijoInclude<ExtArgs> | null
    /**
     * The data needed to create a hijo.
     */
    data: XOR<hijoCreateInput, hijoUncheckedCreateInput>
  }

  /**
   * hijo createMany
   */
  export type hijoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many hijos.
     */
    data: hijoCreateManyInput | hijoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * hijo createManyAndReturn
   */
  export type hijoCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the hijo
     */
    select?: hijoSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the hijo
     */
    omit?: hijoOmit<ExtArgs> | null
    /**
     * The data used to create many hijos.
     */
    data: hijoCreateManyInput | hijoCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: hijoIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * hijo update
   */
  export type hijoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the hijo
     */
    select?: hijoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the hijo
     */
    omit?: hijoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: hijoInclude<ExtArgs> | null
    /**
     * The data needed to update a hijo.
     */
    data: XOR<hijoUpdateInput, hijoUncheckedUpdateInput>
    /**
     * Choose, which hijo to update.
     */
    where: hijoWhereUniqueInput
  }

  /**
   * hijo updateMany
   */
  export type hijoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update hijos.
     */
    data: XOR<hijoUpdateManyMutationInput, hijoUncheckedUpdateManyInput>
    /**
     * Filter which hijos to update
     */
    where?: hijoWhereInput
    /**
     * Limit how many hijos to update.
     */
    limit?: number
  }

  /**
   * hijo updateManyAndReturn
   */
  export type hijoUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the hijo
     */
    select?: hijoSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the hijo
     */
    omit?: hijoOmit<ExtArgs> | null
    /**
     * The data used to update hijos.
     */
    data: XOR<hijoUpdateManyMutationInput, hijoUncheckedUpdateManyInput>
    /**
     * Filter which hijos to update
     */
    where?: hijoWhereInput
    /**
     * Limit how many hijos to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: hijoIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * hijo upsert
   */
  export type hijoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the hijo
     */
    select?: hijoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the hijo
     */
    omit?: hijoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: hijoInclude<ExtArgs> | null
    /**
     * The filter to search for the hijo to update in case it exists.
     */
    where: hijoWhereUniqueInput
    /**
     * In case the hijo found by the `where` argument doesn't exist, create a new hijo with this data.
     */
    create: XOR<hijoCreateInput, hijoUncheckedCreateInput>
    /**
     * In case the hijo was found with the provided `where` argument, update it with this data.
     */
    update: XOR<hijoUpdateInput, hijoUncheckedUpdateInput>
  }

  /**
   * hijo delete
   */
  export type hijoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the hijo
     */
    select?: hijoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the hijo
     */
    omit?: hijoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: hijoInclude<ExtArgs> | null
    /**
     * Filter which hijo to delete.
     */
    where: hijoWhereUniqueInput
  }

  /**
   * hijo deleteMany
   */
  export type hijoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which hijos to delete
     */
    where?: hijoWhereInput
    /**
     * Limit how many hijos to delete.
     */
    limit?: number
  }

  /**
   * hijo without action
   */
  export type hijoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the hijo
     */
    select?: hijoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the hijo
     */
    omit?: hijoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: hijoInclude<ExtArgs> | null
  }


  /**
   * Model historial_cargo
   */

  export type AggregateHistorial_cargo = {
    _count: Historial_cargoCountAggregateOutputType | null
    _avg: Historial_cargoAvgAggregateOutputType | null
    _sum: Historial_cargoSumAggregateOutputType | null
    _min: Historial_cargoMinAggregateOutputType | null
    _max: Historial_cargoMaxAggregateOutputType | null
  }

  export type Historial_cargoAvgAggregateOutputType = {
    id_historial: number | null
    id_empleado: number | null
    Salario_Asignado: number | null
    id_cargo: number | null
  }

  export type Historial_cargoSumAggregateOutputType = {
    id_historial: number | null
    id_empleado: number | null
    Salario_Asignado: number | null
    id_cargo: number | null
  }

  export type Historial_cargoMinAggregateOutputType = {
    id_historial: number | null
    id_empleado: number | null
    Fecha_Inicio: Date | null
    fecha_fin: Date | null
    Salario_Asignado: number | null
    id_cargo: number | null
  }

  export type Historial_cargoMaxAggregateOutputType = {
    id_historial: number | null
    id_empleado: number | null
    Fecha_Inicio: Date | null
    fecha_fin: Date | null
    Salario_Asignado: number | null
    id_cargo: number | null
  }

  export type Historial_cargoCountAggregateOutputType = {
    id_historial: number
    id_empleado: number
    Fecha_Inicio: number
    fecha_fin: number
    Salario_Asignado: number
    id_cargo: number
    _all: number
  }


  export type Historial_cargoAvgAggregateInputType = {
    id_historial?: true
    id_empleado?: true
    Salario_Asignado?: true
    id_cargo?: true
  }

  export type Historial_cargoSumAggregateInputType = {
    id_historial?: true
    id_empleado?: true
    Salario_Asignado?: true
    id_cargo?: true
  }

  export type Historial_cargoMinAggregateInputType = {
    id_historial?: true
    id_empleado?: true
    Fecha_Inicio?: true
    fecha_fin?: true
    Salario_Asignado?: true
    id_cargo?: true
  }

  export type Historial_cargoMaxAggregateInputType = {
    id_historial?: true
    id_empleado?: true
    Fecha_Inicio?: true
    fecha_fin?: true
    Salario_Asignado?: true
    id_cargo?: true
  }

  export type Historial_cargoCountAggregateInputType = {
    id_historial?: true
    id_empleado?: true
    Fecha_Inicio?: true
    fecha_fin?: true
    Salario_Asignado?: true
    id_cargo?: true
    _all?: true
  }

  export type Historial_cargoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which historial_cargo to aggregate.
     */
    where?: historial_cargoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of historial_cargos to fetch.
     */
    orderBy?: historial_cargoOrderByWithRelationInput | historial_cargoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: historial_cargoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` historial_cargos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` historial_cargos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned historial_cargos
    **/
    _count?: true | Historial_cargoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Historial_cargoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Historial_cargoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Historial_cargoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Historial_cargoMaxAggregateInputType
  }

  export type GetHistorial_cargoAggregateType<T extends Historial_cargoAggregateArgs> = {
        [P in keyof T & keyof AggregateHistorial_cargo]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateHistorial_cargo[P]>
      : GetScalarType<T[P], AggregateHistorial_cargo[P]>
  }




  export type historial_cargoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: historial_cargoWhereInput
    orderBy?: historial_cargoOrderByWithAggregationInput | historial_cargoOrderByWithAggregationInput[]
    by: Historial_cargoScalarFieldEnum[] | Historial_cargoScalarFieldEnum
    having?: historial_cargoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Historial_cargoCountAggregateInputType | true
    _avg?: Historial_cargoAvgAggregateInputType
    _sum?: Historial_cargoSumAggregateInputType
    _min?: Historial_cargoMinAggregateInputType
    _max?: Historial_cargoMaxAggregateInputType
  }

  export type Historial_cargoGroupByOutputType = {
    id_historial: number
    id_empleado: number
    Fecha_Inicio: Date
    fecha_fin: Date | null
    Salario_Asignado: number
    id_cargo: number
    _count: Historial_cargoCountAggregateOutputType | null
    _avg: Historial_cargoAvgAggregateOutputType | null
    _sum: Historial_cargoSumAggregateOutputType | null
    _min: Historial_cargoMinAggregateOutputType | null
    _max: Historial_cargoMaxAggregateOutputType | null
  }

  type GetHistorial_cargoGroupByPayload<T extends historial_cargoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Historial_cargoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Historial_cargoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Historial_cargoGroupByOutputType[P]>
            : GetScalarType<T[P], Historial_cargoGroupByOutputType[P]>
        }
      >
    >


  export type historial_cargoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_historial?: boolean
    id_empleado?: boolean
    Fecha_Inicio?: boolean
    fecha_fin?: boolean
    Salario_Asignado?: boolean
    id_cargo?: boolean
    cargo?: boolean | cargoDefaultArgs<ExtArgs>
    empleado?: boolean | empleadoDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["historial_cargo"]>

  export type historial_cargoSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_historial?: boolean
    id_empleado?: boolean
    Fecha_Inicio?: boolean
    fecha_fin?: boolean
    Salario_Asignado?: boolean
    id_cargo?: boolean
    cargo?: boolean | cargoDefaultArgs<ExtArgs>
    empleado?: boolean | empleadoDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["historial_cargo"]>

  export type historial_cargoSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_historial?: boolean
    id_empleado?: boolean
    Fecha_Inicio?: boolean
    fecha_fin?: boolean
    Salario_Asignado?: boolean
    id_cargo?: boolean
    cargo?: boolean | cargoDefaultArgs<ExtArgs>
    empleado?: boolean | empleadoDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["historial_cargo"]>

  export type historial_cargoSelectScalar = {
    id_historial?: boolean
    id_empleado?: boolean
    Fecha_Inicio?: boolean
    fecha_fin?: boolean
    Salario_Asignado?: boolean
    id_cargo?: boolean
  }

  export type historial_cargoOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id_historial" | "id_empleado" | "Fecha_Inicio" | "fecha_fin" | "Salario_Asignado" | "id_cargo", ExtArgs["result"]["historial_cargo"]>
  export type historial_cargoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cargo?: boolean | cargoDefaultArgs<ExtArgs>
    empleado?: boolean | empleadoDefaultArgs<ExtArgs>
  }
  export type historial_cargoIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cargo?: boolean | cargoDefaultArgs<ExtArgs>
    empleado?: boolean | empleadoDefaultArgs<ExtArgs>
  }
  export type historial_cargoIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cargo?: boolean | cargoDefaultArgs<ExtArgs>
    empleado?: boolean | empleadoDefaultArgs<ExtArgs>
  }

  export type $historial_cargoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "historial_cargo"
    objects: {
      cargo: Prisma.$cargoPayload<ExtArgs>
      empleado: Prisma.$empleadoPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id_historial: number
      id_empleado: number
      Fecha_Inicio: Date
      fecha_fin: Date | null
      Salario_Asignado: number
      id_cargo: number
    }, ExtArgs["result"]["historial_cargo"]>
    composites: {}
  }

  type historial_cargoGetPayload<S extends boolean | null | undefined | historial_cargoDefaultArgs> = $Result.GetResult<Prisma.$historial_cargoPayload, S>

  type historial_cargoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<historial_cargoFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Historial_cargoCountAggregateInputType | true
    }

  export interface historial_cargoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['historial_cargo'], meta: { name: 'historial_cargo' } }
    /**
     * Find zero or one Historial_cargo that matches the filter.
     * @param {historial_cargoFindUniqueArgs} args - Arguments to find a Historial_cargo
     * @example
     * // Get one Historial_cargo
     * const historial_cargo = await prisma.historial_cargo.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends historial_cargoFindUniqueArgs>(args: SelectSubset<T, historial_cargoFindUniqueArgs<ExtArgs>>): Prisma__historial_cargoClient<$Result.GetResult<Prisma.$historial_cargoPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Historial_cargo that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {historial_cargoFindUniqueOrThrowArgs} args - Arguments to find a Historial_cargo
     * @example
     * // Get one Historial_cargo
     * const historial_cargo = await prisma.historial_cargo.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends historial_cargoFindUniqueOrThrowArgs>(args: SelectSubset<T, historial_cargoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__historial_cargoClient<$Result.GetResult<Prisma.$historial_cargoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Historial_cargo that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {historial_cargoFindFirstArgs} args - Arguments to find a Historial_cargo
     * @example
     * // Get one Historial_cargo
     * const historial_cargo = await prisma.historial_cargo.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends historial_cargoFindFirstArgs>(args?: SelectSubset<T, historial_cargoFindFirstArgs<ExtArgs>>): Prisma__historial_cargoClient<$Result.GetResult<Prisma.$historial_cargoPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Historial_cargo that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {historial_cargoFindFirstOrThrowArgs} args - Arguments to find a Historial_cargo
     * @example
     * // Get one Historial_cargo
     * const historial_cargo = await prisma.historial_cargo.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends historial_cargoFindFirstOrThrowArgs>(args?: SelectSubset<T, historial_cargoFindFirstOrThrowArgs<ExtArgs>>): Prisma__historial_cargoClient<$Result.GetResult<Prisma.$historial_cargoPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Historial_cargos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {historial_cargoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Historial_cargos
     * const historial_cargos = await prisma.historial_cargo.findMany()
     * 
     * // Get first 10 Historial_cargos
     * const historial_cargos = await prisma.historial_cargo.findMany({ take: 10 })
     * 
     * // Only select the `id_historial`
     * const historial_cargoWithId_historialOnly = await prisma.historial_cargo.findMany({ select: { id_historial: true } })
     * 
     */
    findMany<T extends historial_cargoFindManyArgs>(args?: SelectSubset<T, historial_cargoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$historial_cargoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Historial_cargo.
     * @param {historial_cargoCreateArgs} args - Arguments to create a Historial_cargo.
     * @example
     * // Create one Historial_cargo
     * const Historial_cargo = await prisma.historial_cargo.create({
     *   data: {
     *     // ... data to create a Historial_cargo
     *   }
     * })
     * 
     */
    create<T extends historial_cargoCreateArgs>(args: SelectSubset<T, historial_cargoCreateArgs<ExtArgs>>): Prisma__historial_cargoClient<$Result.GetResult<Prisma.$historial_cargoPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Historial_cargos.
     * @param {historial_cargoCreateManyArgs} args - Arguments to create many Historial_cargos.
     * @example
     * // Create many Historial_cargos
     * const historial_cargo = await prisma.historial_cargo.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends historial_cargoCreateManyArgs>(args?: SelectSubset<T, historial_cargoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Historial_cargos and returns the data saved in the database.
     * @param {historial_cargoCreateManyAndReturnArgs} args - Arguments to create many Historial_cargos.
     * @example
     * // Create many Historial_cargos
     * const historial_cargo = await prisma.historial_cargo.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Historial_cargos and only return the `id_historial`
     * const historial_cargoWithId_historialOnly = await prisma.historial_cargo.createManyAndReturn({
     *   select: { id_historial: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends historial_cargoCreateManyAndReturnArgs>(args?: SelectSubset<T, historial_cargoCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$historial_cargoPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Historial_cargo.
     * @param {historial_cargoDeleteArgs} args - Arguments to delete one Historial_cargo.
     * @example
     * // Delete one Historial_cargo
     * const Historial_cargo = await prisma.historial_cargo.delete({
     *   where: {
     *     // ... filter to delete one Historial_cargo
     *   }
     * })
     * 
     */
    delete<T extends historial_cargoDeleteArgs>(args: SelectSubset<T, historial_cargoDeleteArgs<ExtArgs>>): Prisma__historial_cargoClient<$Result.GetResult<Prisma.$historial_cargoPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Historial_cargo.
     * @param {historial_cargoUpdateArgs} args - Arguments to update one Historial_cargo.
     * @example
     * // Update one Historial_cargo
     * const historial_cargo = await prisma.historial_cargo.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends historial_cargoUpdateArgs>(args: SelectSubset<T, historial_cargoUpdateArgs<ExtArgs>>): Prisma__historial_cargoClient<$Result.GetResult<Prisma.$historial_cargoPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Historial_cargos.
     * @param {historial_cargoDeleteManyArgs} args - Arguments to filter Historial_cargos to delete.
     * @example
     * // Delete a few Historial_cargos
     * const { count } = await prisma.historial_cargo.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends historial_cargoDeleteManyArgs>(args?: SelectSubset<T, historial_cargoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Historial_cargos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {historial_cargoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Historial_cargos
     * const historial_cargo = await prisma.historial_cargo.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends historial_cargoUpdateManyArgs>(args: SelectSubset<T, historial_cargoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Historial_cargos and returns the data updated in the database.
     * @param {historial_cargoUpdateManyAndReturnArgs} args - Arguments to update many Historial_cargos.
     * @example
     * // Update many Historial_cargos
     * const historial_cargo = await prisma.historial_cargo.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Historial_cargos and only return the `id_historial`
     * const historial_cargoWithId_historialOnly = await prisma.historial_cargo.updateManyAndReturn({
     *   select: { id_historial: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends historial_cargoUpdateManyAndReturnArgs>(args: SelectSubset<T, historial_cargoUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$historial_cargoPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Historial_cargo.
     * @param {historial_cargoUpsertArgs} args - Arguments to update or create a Historial_cargo.
     * @example
     * // Update or create a Historial_cargo
     * const historial_cargo = await prisma.historial_cargo.upsert({
     *   create: {
     *     // ... data to create a Historial_cargo
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Historial_cargo we want to update
     *   }
     * })
     */
    upsert<T extends historial_cargoUpsertArgs>(args: SelectSubset<T, historial_cargoUpsertArgs<ExtArgs>>): Prisma__historial_cargoClient<$Result.GetResult<Prisma.$historial_cargoPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Historial_cargos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {historial_cargoCountArgs} args - Arguments to filter Historial_cargos to count.
     * @example
     * // Count the number of Historial_cargos
     * const count = await prisma.historial_cargo.count({
     *   where: {
     *     // ... the filter for the Historial_cargos we want to count
     *   }
     * })
    **/
    count<T extends historial_cargoCountArgs>(
      args?: Subset<T, historial_cargoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Historial_cargoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Historial_cargo.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Historial_cargoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Historial_cargoAggregateArgs>(args: Subset<T, Historial_cargoAggregateArgs>): Prisma.PrismaPromise<GetHistorial_cargoAggregateType<T>>

    /**
     * Group by Historial_cargo.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {historial_cargoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends historial_cargoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: historial_cargoGroupByArgs['orderBy'] }
        : { orderBy?: historial_cargoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, historial_cargoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetHistorial_cargoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the historial_cargo model
   */
  readonly fields: historial_cargoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for historial_cargo.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__historial_cargoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    cargo<T extends cargoDefaultArgs<ExtArgs> = {}>(args?: Subset<T, cargoDefaultArgs<ExtArgs>>): Prisma__cargoClient<$Result.GetResult<Prisma.$cargoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    empleado<T extends empleadoDefaultArgs<ExtArgs> = {}>(args?: Subset<T, empleadoDefaultArgs<ExtArgs>>): Prisma__empleadoClient<$Result.GetResult<Prisma.$empleadoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the historial_cargo model
   */
  interface historial_cargoFieldRefs {
    readonly id_historial: FieldRef<"historial_cargo", 'Int'>
    readonly id_empleado: FieldRef<"historial_cargo", 'Int'>
    readonly Fecha_Inicio: FieldRef<"historial_cargo", 'DateTime'>
    readonly fecha_fin: FieldRef<"historial_cargo", 'DateTime'>
    readonly Salario_Asignado: FieldRef<"historial_cargo", 'Int'>
    readonly id_cargo: FieldRef<"historial_cargo", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * historial_cargo findUnique
   */
  export type historial_cargoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the historial_cargo
     */
    select?: historial_cargoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the historial_cargo
     */
    omit?: historial_cargoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: historial_cargoInclude<ExtArgs> | null
    /**
     * Filter, which historial_cargo to fetch.
     */
    where: historial_cargoWhereUniqueInput
  }

  /**
   * historial_cargo findUniqueOrThrow
   */
  export type historial_cargoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the historial_cargo
     */
    select?: historial_cargoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the historial_cargo
     */
    omit?: historial_cargoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: historial_cargoInclude<ExtArgs> | null
    /**
     * Filter, which historial_cargo to fetch.
     */
    where: historial_cargoWhereUniqueInput
  }

  /**
   * historial_cargo findFirst
   */
  export type historial_cargoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the historial_cargo
     */
    select?: historial_cargoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the historial_cargo
     */
    omit?: historial_cargoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: historial_cargoInclude<ExtArgs> | null
    /**
     * Filter, which historial_cargo to fetch.
     */
    where?: historial_cargoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of historial_cargos to fetch.
     */
    orderBy?: historial_cargoOrderByWithRelationInput | historial_cargoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for historial_cargos.
     */
    cursor?: historial_cargoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` historial_cargos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` historial_cargos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of historial_cargos.
     */
    distinct?: Historial_cargoScalarFieldEnum | Historial_cargoScalarFieldEnum[]
  }

  /**
   * historial_cargo findFirstOrThrow
   */
  export type historial_cargoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the historial_cargo
     */
    select?: historial_cargoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the historial_cargo
     */
    omit?: historial_cargoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: historial_cargoInclude<ExtArgs> | null
    /**
     * Filter, which historial_cargo to fetch.
     */
    where?: historial_cargoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of historial_cargos to fetch.
     */
    orderBy?: historial_cargoOrderByWithRelationInput | historial_cargoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for historial_cargos.
     */
    cursor?: historial_cargoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` historial_cargos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` historial_cargos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of historial_cargos.
     */
    distinct?: Historial_cargoScalarFieldEnum | Historial_cargoScalarFieldEnum[]
  }

  /**
   * historial_cargo findMany
   */
  export type historial_cargoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the historial_cargo
     */
    select?: historial_cargoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the historial_cargo
     */
    omit?: historial_cargoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: historial_cargoInclude<ExtArgs> | null
    /**
     * Filter, which historial_cargos to fetch.
     */
    where?: historial_cargoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of historial_cargos to fetch.
     */
    orderBy?: historial_cargoOrderByWithRelationInput | historial_cargoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing historial_cargos.
     */
    cursor?: historial_cargoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` historial_cargos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` historial_cargos.
     */
    skip?: number
    distinct?: Historial_cargoScalarFieldEnum | Historial_cargoScalarFieldEnum[]
  }

  /**
   * historial_cargo create
   */
  export type historial_cargoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the historial_cargo
     */
    select?: historial_cargoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the historial_cargo
     */
    omit?: historial_cargoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: historial_cargoInclude<ExtArgs> | null
    /**
     * The data needed to create a historial_cargo.
     */
    data: XOR<historial_cargoCreateInput, historial_cargoUncheckedCreateInput>
  }

  /**
   * historial_cargo createMany
   */
  export type historial_cargoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many historial_cargos.
     */
    data: historial_cargoCreateManyInput | historial_cargoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * historial_cargo createManyAndReturn
   */
  export type historial_cargoCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the historial_cargo
     */
    select?: historial_cargoSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the historial_cargo
     */
    omit?: historial_cargoOmit<ExtArgs> | null
    /**
     * The data used to create many historial_cargos.
     */
    data: historial_cargoCreateManyInput | historial_cargoCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: historial_cargoIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * historial_cargo update
   */
  export type historial_cargoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the historial_cargo
     */
    select?: historial_cargoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the historial_cargo
     */
    omit?: historial_cargoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: historial_cargoInclude<ExtArgs> | null
    /**
     * The data needed to update a historial_cargo.
     */
    data: XOR<historial_cargoUpdateInput, historial_cargoUncheckedUpdateInput>
    /**
     * Choose, which historial_cargo to update.
     */
    where: historial_cargoWhereUniqueInput
  }

  /**
   * historial_cargo updateMany
   */
  export type historial_cargoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update historial_cargos.
     */
    data: XOR<historial_cargoUpdateManyMutationInput, historial_cargoUncheckedUpdateManyInput>
    /**
     * Filter which historial_cargos to update
     */
    where?: historial_cargoWhereInput
    /**
     * Limit how many historial_cargos to update.
     */
    limit?: number
  }

  /**
   * historial_cargo updateManyAndReturn
   */
  export type historial_cargoUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the historial_cargo
     */
    select?: historial_cargoSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the historial_cargo
     */
    omit?: historial_cargoOmit<ExtArgs> | null
    /**
     * The data used to update historial_cargos.
     */
    data: XOR<historial_cargoUpdateManyMutationInput, historial_cargoUncheckedUpdateManyInput>
    /**
     * Filter which historial_cargos to update
     */
    where?: historial_cargoWhereInput
    /**
     * Limit how many historial_cargos to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: historial_cargoIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * historial_cargo upsert
   */
  export type historial_cargoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the historial_cargo
     */
    select?: historial_cargoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the historial_cargo
     */
    omit?: historial_cargoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: historial_cargoInclude<ExtArgs> | null
    /**
     * The filter to search for the historial_cargo to update in case it exists.
     */
    where: historial_cargoWhereUniqueInput
    /**
     * In case the historial_cargo found by the `where` argument doesn't exist, create a new historial_cargo with this data.
     */
    create: XOR<historial_cargoCreateInput, historial_cargoUncheckedCreateInput>
    /**
     * In case the historial_cargo was found with the provided `where` argument, update it with this data.
     */
    update: XOR<historial_cargoUpdateInput, historial_cargoUncheckedUpdateInput>
  }

  /**
   * historial_cargo delete
   */
  export type historial_cargoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the historial_cargo
     */
    select?: historial_cargoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the historial_cargo
     */
    omit?: historial_cargoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: historial_cargoInclude<ExtArgs> | null
    /**
     * Filter which historial_cargo to delete.
     */
    where: historial_cargoWhereUniqueInput
  }

  /**
   * historial_cargo deleteMany
   */
  export type historial_cargoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which historial_cargos to delete
     */
    where?: historial_cargoWhereInput
    /**
     * Limit how many historial_cargos to delete.
     */
    limit?: number
  }

  /**
   * historial_cargo without action
   */
  export type historial_cargoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the historial_cargo
     */
    select?: historial_cargoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the historial_cargo
     */
    omit?: historial_cargoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: historial_cargoInclude<ExtArgs> | null
  }


  /**
   * Model nomina
   */

  export type AggregateNomina = {
    _count: NominaCountAggregateOutputType | null
    _avg: NominaAvgAggregateOutputType | null
    _sum: NominaSumAggregateOutputType | null
    _min: NominaMinAggregateOutputType | null
    _max: NominaMaxAggregateOutputType | null
  }

  export type NominaAvgAggregateOutputType = {
    id_nomina: number | null
    anho: number | null
    mes: number | null
  }

  export type NominaSumAggregateOutputType = {
    id_nomina: number | null
    anho: number | null
    mes: number | null
  }

  export type NominaMinAggregateOutputType = {
    id_nomina: number | null
    anho: number | null
    fecha_generacion: Date | null
    estado: string | null
    mes: number | null
  }

  export type NominaMaxAggregateOutputType = {
    id_nomina: number | null
    anho: number | null
    fecha_generacion: Date | null
    estado: string | null
    mes: number | null
  }

  export type NominaCountAggregateOutputType = {
    id_nomina: number
    anho: number
    fecha_generacion: number
    estado: number
    mes: number
    _all: number
  }


  export type NominaAvgAggregateInputType = {
    id_nomina?: true
    anho?: true
    mes?: true
  }

  export type NominaSumAggregateInputType = {
    id_nomina?: true
    anho?: true
    mes?: true
  }

  export type NominaMinAggregateInputType = {
    id_nomina?: true
    anho?: true
    fecha_generacion?: true
    estado?: true
    mes?: true
  }

  export type NominaMaxAggregateInputType = {
    id_nomina?: true
    anho?: true
    fecha_generacion?: true
    estado?: true
    mes?: true
  }

  export type NominaCountAggregateInputType = {
    id_nomina?: true
    anho?: true
    fecha_generacion?: true
    estado?: true
    mes?: true
    _all?: true
  }

  export type NominaAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which nomina to aggregate.
     */
    where?: nominaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of nominas to fetch.
     */
    orderBy?: nominaOrderByWithRelationInput | nominaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: nominaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` nominas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` nominas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned nominas
    **/
    _count?: true | NominaCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: NominaAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: NominaSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: NominaMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: NominaMaxAggregateInputType
  }

  export type GetNominaAggregateType<T extends NominaAggregateArgs> = {
        [P in keyof T & keyof AggregateNomina]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateNomina[P]>
      : GetScalarType<T[P], AggregateNomina[P]>
  }




  export type nominaGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: nominaWhereInput
    orderBy?: nominaOrderByWithAggregationInput | nominaOrderByWithAggregationInput[]
    by: NominaScalarFieldEnum[] | NominaScalarFieldEnum
    having?: nominaScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: NominaCountAggregateInputType | true
    _avg?: NominaAvgAggregateInputType
    _sum?: NominaSumAggregateInputType
    _min?: NominaMinAggregateInputType
    _max?: NominaMaxAggregateInputType
  }

  export type NominaGroupByOutputType = {
    id_nomina: number
    anho: number
    fecha_generacion: Date
    estado: string
    mes: number
    _count: NominaCountAggregateOutputType | null
    _avg: NominaAvgAggregateOutputType | null
    _sum: NominaSumAggregateOutputType | null
    _min: NominaMinAggregateOutputType | null
    _max: NominaMaxAggregateOutputType | null
  }

  type GetNominaGroupByPayload<T extends nominaGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<NominaGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof NominaGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], NominaGroupByOutputType[P]>
            : GetScalarType<T[P], NominaGroupByOutputType[P]>
        }
      >
    >


  export type nominaSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_nomina?: boolean
    anho?: boolean
    fecha_generacion?: boolean
    estado?: boolean
    mes?: boolean
    detalle_nomina?: boolean | nomina$detalle_nominaArgs<ExtArgs>
    _count?: boolean | NominaCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["nomina"]>

  export type nominaSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_nomina?: boolean
    anho?: boolean
    fecha_generacion?: boolean
    estado?: boolean
    mes?: boolean
  }, ExtArgs["result"]["nomina"]>

  export type nominaSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_nomina?: boolean
    anho?: boolean
    fecha_generacion?: boolean
    estado?: boolean
    mes?: boolean
  }, ExtArgs["result"]["nomina"]>

  export type nominaSelectScalar = {
    id_nomina?: boolean
    anho?: boolean
    fecha_generacion?: boolean
    estado?: boolean
    mes?: boolean
  }

  export type nominaOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id_nomina" | "anho" | "fecha_generacion" | "estado" | "mes", ExtArgs["result"]["nomina"]>
  export type nominaInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    detalle_nomina?: boolean | nomina$detalle_nominaArgs<ExtArgs>
    _count?: boolean | NominaCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type nominaIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type nominaIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $nominaPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "nomina"
    objects: {
      detalle_nomina: Prisma.$detalle_nominaPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id_nomina: number
      anho: number
      fecha_generacion: Date
      estado: string
      mes: number
    }, ExtArgs["result"]["nomina"]>
    composites: {}
  }

  type nominaGetPayload<S extends boolean | null | undefined | nominaDefaultArgs> = $Result.GetResult<Prisma.$nominaPayload, S>

  type nominaCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<nominaFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: NominaCountAggregateInputType | true
    }

  export interface nominaDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['nomina'], meta: { name: 'nomina' } }
    /**
     * Find zero or one Nomina that matches the filter.
     * @param {nominaFindUniqueArgs} args - Arguments to find a Nomina
     * @example
     * // Get one Nomina
     * const nomina = await prisma.nomina.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends nominaFindUniqueArgs>(args: SelectSubset<T, nominaFindUniqueArgs<ExtArgs>>): Prisma__nominaClient<$Result.GetResult<Prisma.$nominaPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Nomina that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {nominaFindUniqueOrThrowArgs} args - Arguments to find a Nomina
     * @example
     * // Get one Nomina
     * const nomina = await prisma.nomina.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends nominaFindUniqueOrThrowArgs>(args: SelectSubset<T, nominaFindUniqueOrThrowArgs<ExtArgs>>): Prisma__nominaClient<$Result.GetResult<Prisma.$nominaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Nomina that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {nominaFindFirstArgs} args - Arguments to find a Nomina
     * @example
     * // Get one Nomina
     * const nomina = await prisma.nomina.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends nominaFindFirstArgs>(args?: SelectSubset<T, nominaFindFirstArgs<ExtArgs>>): Prisma__nominaClient<$Result.GetResult<Prisma.$nominaPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Nomina that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {nominaFindFirstOrThrowArgs} args - Arguments to find a Nomina
     * @example
     * // Get one Nomina
     * const nomina = await prisma.nomina.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends nominaFindFirstOrThrowArgs>(args?: SelectSubset<T, nominaFindFirstOrThrowArgs<ExtArgs>>): Prisma__nominaClient<$Result.GetResult<Prisma.$nominaPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Nominas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {nominaFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Nominas
     * const nominas = await prisma.nomina.findMany()
     * 
     * // Get first 10 Nominas
     * const nominas = await prisma.nomina.findMany({ take: 10 })
     * 
     * // Only select the `id_nomina`
     * const nominaWithId_nominaOnly = await prisma.nomina.findMany({ select: { id_nomina: true } })
     * 
     */
    findMany<T extends nominaFindManyArgs>(args?: SelectSubset<T, nominaFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$nominaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Nomina.
     * @param {nominaCreateArgs} args - Arguments to create a Nomina.
     * @example
     * // Create one Nomina
     * const Nomina = await prisma.nomina.create({
     *   data: {
     *     // ... data to create a Nomina
     *   }
     * })
     * 
     */
    create<T extends nominaCreateArgs>(args: SelectSubset<T, nominaCreateArgs<ExtArgs>>): Prisma__nominaClient<$Result.GetResult<Prisma.$nominaPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Nominas.
     * @param {nominaCreateManyArgs} args - Arguments to create many Nominas.
     * @example
     * // Create many Nominas
     * const nomina = await prisma.nomina.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends nominaCreateManyArgs>(args?: SelectSubset<T, nominaCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Nominas and returns the data saved in the database.
     * @param {nominaCreateManyAndReturnArgs} args - Arguments to create many Nominas.
     * @example
     * // Create many Nominas
     * const nomina = await prisma.nomina.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Nominas and only return the `id_nomina`
     * const nominaWithId_nominaOnly = await prisma.nomina.createManyAndReturn({
     *   select: { id_nomina: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends nominaCreateManyAndReturnArgs>(args?: SelectSubset<T, nominaCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$nominaPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Nomina.
     * @param {nominaDeleteArgs} args - Arguments to delete one Nomina.
     * @example
     * // Delete one Nomina
     * const Nomina = await prisma.nomina.delete({
     *   where: {
     *     // ... filter to delete one Nomina
     *   }
     * })
     * 
     */
    delete<T extends nominaDeleteArgs>(args: SelectSubset<T, nominaDeleteArgs<ExtArgs>>): Prisma__nominaClient<$Result.GetResult<Prisma.$nominaPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Nomina.
     * @param {nominaUpdateArgs} args - Arguments to update one Nomina.
     * @example
     * // Update one Nomina
     * const nomina = await prisma.nomina.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends nominaUpdateArgs>(args: SelectSubset<T, nominaUpdateArgs<ExtArgs>>): Prisma__nominaClient<$Result.GetResult<Prisma.$nominaPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Nominas.
     * @param {nominaDeleteManyArgs} args - Arguments to filter Nominas to delete.
     * @example
     * // Delete a few Nominas
     * const { count } = await prisma.nomina.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends nominaDeleteManyArgs>(args?: SelectSubset<T, nominaDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Nominas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {nominaUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Nominas
     * const nomina = await prisma.nomina.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends nominaUpdateManyArgs>(args: SelectSubset<T, nominaUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Nominas and returns the data updated in the database.
     * @param {nominaUpdateManyAndReturnArgs} args - Arguments to update many Nominas.
     * @example
     * // Update many Nominas
     * const nomina = await prisma.nomina.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Nominas and only return the `id_nomina`
     * const nominaWithId_nominaOnly = await prisma.nomina.updateManyAndReturn({
     *   select: { id_nomina: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends nominaUpdateManyAndReturnArgs>(args: SelectSubset<T, nominaUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$nominaPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Nomina.
     * @param {nominaUpsertArgs} args - Arguments to update or create a Nomina.
     * @example
     * // Update or create a Nomina
     * const nomina = await prisma.nomina.upsert({
     *   create: {
     *     // ... data to create a Nomina
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Nomina we want to update
     *   }
     * })
     */
    upsert<T extends nominaUpsertArgs>(args: SelectSubset<T, nominaUpsertArgs<ExtArgs>>): Prisma__nominaClient<$Result.GetResult<Prisma.$nominaPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Nominas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {nominaCountArgs} args - Arguments to filter Nominas to count.
     * @example
     * // Count the number of Nominas
     * const count = await prisma.nomina.count({
     *   where: {
     *     // ... the filter for the Nominas we want to count
     *   }
     * })
    **/
    count<T extends nominaCountArgs>(
      args?: Subset<T, nominaCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], NominaCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Nomina.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NominaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends NominaAggregateArgs>(args: Subset<T, NominaAggregateArgs>): Prisma.PrismaPromise<GetNominaAggregateType<T>>

    /**
     * Group by Nomina.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {nominaGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends nominaGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: nominaGroupByArgs['orderBy'] }
        : { orderBy?: nominaGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, nominaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetNominaGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the nomina model
   */
  readonly fields: nominaFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for nomina.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__nominaClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    detalle_nomina<T extends nomina$detalle_nominaArgs<ExtArgs> = {}>(args?: Subset<T, nomina$detalle_nominaArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$detalle_nominaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the nomina model
   */
  interface nominaFieldRefs {
    readonly id_nomina: FieldRef<"nomina", 'Int'>
    readonly anho: FieldRef<"nomina", 'Int'>
    readonly fecha_generacion: FieldRef<"nomina", 'DateTime'>
    readonly estado: FieldRef<"nomina", 'String'>
    readonly mes: FieldRef<"nomina", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * nomina findUnique
   */
  export type nominaFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nomina
     */
    select?: nominaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the nomina
     */
    omit?: nominaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: nominaInclude<ExtArgs> | null
    /**
     * Filter, which nomina to fetch.
     */
    where: nominaWhereUniqueInput
  }

  /**
   * nomina findUniqueOrThrow
   */
  export type nominaFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nomina
     */
    select?: nominaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the nomina
     */
    omit?: nominaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: nominaInclude<ExtArgs> | null
    /**
     * Filter, which nomina to fetch.
     */
    where: nominaWhereUniqueInput
  }

  /**
   * nomina findFirst
   */
  export type nominaFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nomina
     */
    select?: nominaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the nomina
     */
    omit?: nominaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: nominaInclude<ExtArgs> | null
    /**
     * Filter, which nomina to fetch.
     */
    where?: nominaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of nominas to fetch.
     */
    orderBy?: nominaOrderByWithRelationInput | nominaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for nominas.
     */
    cursor?: nominaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` nominas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` nominas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of nominas.
     */
    distinct?: NominaScalarFieldEnum | NominaScalarFieldEnum[]
  }

  /**
   * nomina findFirstOrThrow
   */
  export type nominaFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nomina
     */
    select?: nominaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the nomina
     */
    omit?: nominaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: nominaInclude<ExtArgs> | null
    /**
     * Filter, which nomina to fetch.
     */
    where?: nominaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of nominas to fetch.
     */
    orderBy?: nominaOrderByWithRelationInput | nominaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for nominas.
     */
    cursor?: nominaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` nominas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` nominas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of nominas.
     */
    distinct?: NominaScalarFieldEnum | NominaScalarFieldEnum[]
  }

  /**
   * nomina findMany
   */
  export type nominaFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nomina
     */
    select?: nominaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the nomina
     */
    omit?: nominaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: nominaInclude<ExtArgs> | null
    /**
     * Filter, which nominas to fetch.
     */
    where?: nominaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of nominas to fetch.
     */
    orderBy?: nominaOrderByWithRelationInput | nominaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing nominas.
     */
    cursor?: nominaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` nominas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` nominas.
     */
    skip?: number
    distinct?: NominaScalarFieldEnum | NominaScalarFieldEnum[]
  }

  /**
   * nomina create
   */
  export type nominaCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nomina
     */
    select?: nominaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the nomina
     */
    omit?: nominaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: nominaInclude<ExtArgs> | null
    /**
     * The data needed to create a nomina.
     */
    data: XOR<nominaCreateInput, nominaUncheckedCreateInput>
  }

  /**
   * nomina createMany
   */
  export type nominaCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many nominas.
     */
    data: nominaCreateManyInput | nominaCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * nomina createManyAndReturn
   */
  export type nominaCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nomina
     */
    select?: nominaSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the nomina
     */
    omit?: nominaOmit<ExtArgs> | null
    /**
     * The data used to create many nominas.
     */
    data: nominaCreateManyInput | nominaCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * nomina update
   */
  export type nominaUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nomina
     */
    select?: nominaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the nomina
     */
    omit?: nominaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: nominaInclude<ExtArgs> | null
    /**
     * The data needed to update a nomina.
     */
    data: XOR<nominaUpdateInput, nominaUncheckedUpdateInput>
    /**
     * Choose, which nomina to update.
     */
    where: nominaWhereUniqueInput
  }

  /**
   * nomina updateMany
   */
  export type nominaUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update nominas.
     */
    data: XOR<nominaUpdateManyMutationInput, nominaUncheckedUpdateManyInput>
    /**
     * Filter which nominas to update
     */
    where?: nominaWhereInput
    /**
     * Limit how many nominas to update.
     */
    limit?: number
  }

  /**
   * nomina updateManyAndReturn
   */
  export type nominaUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nomina
     */
    select?: nominaSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the nomina
     */
    omit?: nominaOmit<ExtArgs> | null
    /**
     * The data used to update nominas.
     */
    data: XOR<nominaUpdateManyMutationInput, nominaUncheckedUpdateManyInput>
    /**
     * Filter which nominas to update
     */
    where?: nominaWhereInput
    /**
     * Limit how many nominas to update.
     */
    limit?: number
  }

  /**
   * nomina upsert
   */
  export type nominaUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nomina
     */
    select?: nominaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the nomina
     */
    omit?: nominaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: nominaInclude<ExtArgs> | null
    /**
     * The filter to search for the nomina to update in case it exists.
     */
    where: nominaWhereUniqueInput
    /**
     * In case the nomina found by the `where` argument doesn't exist, create a new nomina with this data.
     */
    create: XOR<nominaCreateInput, nominaUncheckedCreateInput>
    /**
     * In case the nomina was found with the provided `where` argument, update it with this data.
     */
    update: XOR<nominaUpdateInput, nominaUncheckedUpdateInput>
  }

  /**
   * nomina delete
   */
  export type nominaDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nomina
     */
    select?: nominaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the nomina
     */
    omit?: nominaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: nominaInclude<ExtArgs> | null
    /**
     * Filter which nomina to delete.
     */
    where: nominaWhereUniqueInput
  }

  /**
   * nomina deleteMany
   */
  export type nominaDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which nominas to delete
     */
    where?: nominaWhereInput
    /**
     * Limit how many nominas to delete.
     */
    limit?: number
  }

  /**
   * nomina.detalle_nomina
   */
  export type nomina$detalle_nominaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the detalle_nomina
     */
    select?: detalle_nominaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the detalle_nomina
     */
    omit?: detalle_nominaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: detalle_nominaInclude<ExtArgs> | null
    where?: detalle_nominaWhereInput
    orderBy?: detalle_nominaOrderByWithRelationInput | detalle_nominaOrderByWithRelationInput[]
    cursor?: detalle_nominaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Detalle_nominaScalarFieldEnum | Detalle_nominaScalarFieldEnum[]
  }

  /**
   * nomina without action
   */
  export type nominaDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nomina
     */
    select?: nominaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the nomina
     */
    omit?: nominaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: nominaInclude<ExtArgs> | null
  }


  /**
   * Model registro_acceso
   */

  export type AggregateRegistro_acceso = {
    _count: Registro_accesoCountAggregateOutputType | null
    _avg: Registro_accesoAvgAggregateOutputType | null
    _sum: Registro_accesoSumAggregateOutputType | null
    _min: Registro_accesoMinAggregateOutputType | null
    _max: Registro_accesoMaxAggregateOutputType | null
  }

  export type Registro_accesoAvgAggregateOutputType = {
    id_registro: number | null
    id_usuario: number | null
  }

  export type Registro_accesoSumAggregateOutputType = {
    id_registro: number | null
    id_usuario: number | null
  }

  export type Registro_accesoMinAggregateOutputType = {
    id_registro: number | null
    id_usuario: number | null
    ip_origen: string | null
    accion: string | null
    fecha_hora: Date | null
  }

  export type Registro_accesoMaxAggregateOutputType = {
    id_registro: number | null
    id_usuario: number | null
    ip_origen: string | null
    accion: string | null
    fecha_hora: Date | null
  }

  export type Registro_accesoCountAggregateOutputType = {
    id_registro: number
    id_usuario: number
    ip_origen: number
    accion: number
    fecha_hora: number
    _all: number
  }


  export type Registro_accesoAvgAggregateInputType = {
    id_registro?: true
    id_usuario?: true
  }

  export type Registro_accesoSumAggregateInputType = {
    id_registro?: true
    id_usuario?: true
  }

  export type Registro_accesoMinAggregateInputType = {
    id_registro?: true
    id_usuario?: true
    ip_origen?: true
    accion?: true
    fecha_hora?: true
  }

  export type Registro_accesoMaxAggregateInputType = {
    id_registro?: true
    id_usuario?: true
    ip_origen?: true
    accion?: true
    fecha_hora?: true
  }

  export type Registro_accesoCountAggregateInputType = {
    id_registro?: true
    id_usuario?: true
    ip_origen?: true
    accion?: true
    fecha_hora?: true
    _all?: true
  }

  export type Registro_accesoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which registro_acceso to aggregate.
     */
    where?: registro_accesoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of registro_accesos to fetch.
     */
    orderBy?: registro_accesoOrderByWithRelationInput | registro_accesoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: registro_accesoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` registro_accesos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` registro_accesos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned registro_accesos
    **/
    _count?: true | Registro_accesoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Registro_accesoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Registro_accesoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Registro_accesoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Registro_accesoMaxAggregateInputType
  }

  export type GetRegistro_accesoAggregateType<T extends Registro_accesoAggregateArgs> = {
        [P in keyof T & keyof AggregateRegistro_acceso]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateRegistro_acceso[P]>
      : GetScalarType<T[P], AggregateRegistro_acceso[P]>
  }




  export type registro_accesoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: registro_accesoWhereInput
    orderBy?: registro_accesoOrderByWithAggregationInput | registro_accesoOrderByWithAggregationInput[]
    by: Registro_accesoScalarFieldEnum[] | Registro_accesoScalarFieldEnum
    having?: registro_accesoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Registro_accesoCountAggregateInputType | true
    _avg?: Registro_accesoAvgAggregateInputType
    _sum?: Registro_accesoSumAggregateInputType
    _min?: Registro_accesoMinAggregateInputType
    _max?: Registro_accesoMaxAggregateInputType
  }

  export type Registro_accesoGroupByOutputType = {
    id_registro: number
    id_usuario: number
    ip_origen: string
    accion: string
    fecha_hora: Date
    _count: Registro_accesoCountAggregateOutputType | null
    _avg: Registro_accesoAvgAggregateOutputType | null
    _sum: Registro_accesoSumAggregateOutputType | null
    _min: Registro_accesoMinAggregateOutputType | null
    _max: Registro_accesoMaxAggregateOutputType | null
  }

  type GetRegistro_accesoGroupByPayload<T extends registro_accesoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Registro_accesoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Registro_accesoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Registro_accesoGroupByOutputType[P]>
            : GetScalarType<T[P], Registro_accesoGroupByOutputType[P]>
        }
      >
    >


  export type registro_accesoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_registro?: boolean
    id_usuario?: boolean
    ip_origen?: boolean
    accion?: boolean
    fecha_hora?: boolean
    usuario?: boolean | usuarioDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["registro_acceso"]>

  export type registro_accesoSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_registro?: boolean
    id_usuario?: boolean
    ip_origen?: boolean
    accion?: boolean
    fecha_hora?: boolean
    usuario?: boolean | usuarioDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["registro_acceso"]>

  export type registro_accesoSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_registro?: boolean
    id_usuario?: boolean
    ip_origen?: boolean
    accion?: boolean
    fecha_hora?: boolean
    usuario?: boolean | usuarioDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["registro_acceso"]>

  export type registro_accesoSelectScalar = {
    id_registro?: boolean
    id_usuario?: boolean
    ip_origen?: boolean
    accion?: boolean
    fecha_hora?: boolean
  }

  export type registro_accesoOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id_registro" | "id_usuario" | "ip_origen" | "accion" | "fecha_hora", ExtArgs["result"]["registro_acceso"]>
  export type registro_accesoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    usuario?: boolean | usuarioDefaultArgs<ExtArgs>
  }
  export type registro_accesoIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    usuario?: boolean | usuarioDefaultArgs<ExtArgs>
  }
  export type registro_accesoIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    usuario?: boolean | usuarioDefaultArgs<ExtArgs>
  }

  export type $registro_accesoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "registro_acceso"
    objects: {
      usuario: Prisma.$usuarioPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id_registro: number
      id_usuario: number
      ip_origen: string
      accion: string
      fecha_hora: Date
    }, ExtArgs["result"]["registro_acceso"]>
    composites: {}
  }

  type registro_accesoGetPayload<S extends boolean | null | undefined | registro_accesoDefaultArgs> = $Result.GetResult<Prisma.$registro_accesoPayload, S>

  type registro_accesoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<registro_accesoFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Registro_accesoCountAggregateInputType | true
    }

  export interface registro_accesoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['registro_acceso'], meta: { name: 'registro_acceso' } }
    /**
     * Find zero or one Registro_acceso that matches the filter.
     * @param {registro_accesoFindUniqueArgs} args - Arguments to find a Registro_acceso
     * @example
     * // Get one Registro_acceso
     * const registro_acceso = await prisma.registro_acceso.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends registro_accesoFindUniqueArgs>(args: SelectSubset<T, registro_accesoFindUniqueArgs<ExtArgs>>): Prisma__registro_accesoClient<$Result.GetResult<Prisma.$registro_accesoPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Registro_acceso that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {registro_accesoFindUniqueOrThrowArgs} args - Arguments to find a Registro_acceso
     * @example
     * // Get one Registro_acceso
     * const registro_acceso = await prisma.registro_acceso.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends registro_accesoFindUniqueOrThrowArgs>(args: SelectSubset<T, registro_accesoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__registro_accesoClient<$Result.GetResult<Prisma.$registro_accesoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Registro_acceso that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {registro_accesoFindFirstArgs} args - Arguments to find a Registro_acceso
     * @example
     * // Get one Registro_acceso
     * const registro_acceso = await prisma.registro_acceso.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends registro_accesoFindFirstArgs>(args?: SelectSubset<T, registro_accesoFindFirstArgs<ExtArgs>>): Prisma__registro_accesoClient<$Result.GetResult<Prisma.$registro_accesoPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Registro_acceso that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {registro_accesoFindFirstOrThrowArgs} args - Arguments to find a Registro_acceso
     * @example
     * // Get one Registro_acceso
     * const registro_acceso = await prisma.registro_acceso.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends registro_accesoFindFirstOrThrowArgs>(args?: SelectSubset<T, registro_accesoFindFirstOrThrowArgs<ExtArgs>>): Prisma__registro_accesoClient<$Result.GetResult<Prisma.$registro_accesoPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Registro_accesos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {registro_accesoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Registro_accesos
     * const registro_accesos = await prisma.registro_acceso.findMany()
     * 
     * // Get first 10 Registro_accesos
     * const registro_accesos = await prisma.registro_acceso.findMany({ take: 10 })
     * 
     * // Only select the `id_registro`
     * const registro_accesoWithId_registroOnly = await prisma.registro_acceso.findMany({ select: { id_registro: true } })
     * 
     */
    findMany<T extends registro_accesoFindManyArgs>(args?: SelectSubset<T, registro_accesoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$registro_accesoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Registro_acceso.
     * @param {registro_accesoCreateArgs} args - Arguments to create a Registro_acceso.
     * @example
     * // Create one Registro_acceso
     * const Registro_acceso = await prisma.registro_acceso.create({
     *   data: {
     *     // ... data to create a Registro_acceso
     *   }
     * })
     * 
     */
    create<T extends registro_accesoCreateArgs>(args: SelectSubset<T, registro_accesoCreateArgs<ExtArgs>>): Prisma__registro_accesoClient<$Result.GetResult<Prisma.$registro_accesoPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Registro_accesos.
     * @param {registro_accesoCreateManyArgs} args - Arguments to create many Registro_accesos.
     * @example
     * // Create many Registro_accesos
     * const registro_acceso = await prisma.registro_acceso.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends registro_accesoCreateManyArgs>(args?: SelectSubset<T, registro_accesoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Registro_accesos and returns the data saved in the database.
     * @param {registro_accesoCreateManyAndReturnArgs} args - Arguments to create many Registro_accesos.
     * @example
     * // Create many Registro_accesos
     * const registro_acceso = await prisma.registro_acceso.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Registro_accesos and only return the `id_registro`
     * const registro_accesoWithId_registroOnly = await prisma.registro_acceso.createManyAndReturn({
     *   select: { id_registro: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends registro_accesoCreateManyAndReturnArgs>(args?: SelectSubset<T, registro_accesoCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$registro_accesoPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Registro_acceso.
     * @param {registro_accesoDeleteArgs} args - Arguments to delete one Registro_acceso.
     * @example
     * // Delete one Registro_acceso
     * const Registro_acceso = await prisma.registro_acceso.delete({
     *   where: {
     *     // ... filter to delete one Registro_acceso
     *   }
     * })
     * 
     */
    delete<T extends registro_accesoDeleteArgs>(args: SelectSubset<T, registro_accesoDeleteArgs<ExtArgs>>): Prisma__registro_accesoClient<$Result.GetResult<Prisma.$registro_accesoPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Registro_acceso.
     * @param {registro_accesoUpdateArgs} args - Arguments to update one Registro_acceso.
     * @example
     * // Update one Registro_acceso
     * const registro_acceso = await prisma.registro_acceso.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends registro_accesoUpdateArgs>(args: SelectSubset<T, registro_accesoUpdateArgs<ExtArgs>>): Prisma__registro_accesoClient<$Result.GetResult<Prisma.$registro_accesoPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Registro_accesos.
     * @param {registro_accesoDeleteManyArgs} args - Arguments to filter Registro_accesos to delete.
     * @example
     * // Delete a few Registro_accesos
     * const { count } = await prisma.registro_acceso.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends registro_accesoDeleteManyArgs>(args?: SelectSubset<T, registro_accesoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Registro_accesos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {registro_accesoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Registro_accesos
     * const registro_acceso = await prisma.registro_acceso.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends registro_accesoUpdateManyArgs>(args: SelectSubset<T, registro_accesoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Registro_accesos and returns the data updated in the database.
     * @param {registro_accesoUpdateManyAndReturnArgs} args - Arguments to update many Registro_accesos.
     * @example
     * // Update many Registro_accesos
     * const registro_acceso = await prisma.registro_acceso.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Registro_accesos and only return the `id_registro`
     * const registro_accesoWithId_registroOnly = await prisma.registro_acceso.updateManyAndReturn({
     *   select: { id_registro: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends registro_accesoUpdateManyAndReturnArgs>(args: SelectSubset<T, registro_accesoUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$registro_accesoPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Registro_acceso.
     * @param {registro_accesoUpsertArgs} args - Arguments to update or create a Registro_acceso.
     * @example
     * // Update or create a Registro_acceso
     * const registro_acceso = await prisma.registro_acceso.upsert({
     *   create: {
     *     // ... data to create a Registro_acceso
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Registro_acceso we want to update
     *   }
     * })
     */
    upsert<T extends registro_accesoUpsertArgs>(args: SelectSubset<T, registro_accesoUpsertArgs<ExtArgs>>): Prisma__registro_accesoClient<$Result.GetResult<Prisma.$registro_accesoPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Registro_accesos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {registro_accesoCountArgs} args - Arguments to filter Registro_accesos to count.
     * @example
     * // Count the number of Registro_accesos
     * const count = await prisma.registro_acceso.count({
     *   where: {
     *     // ... the filter for the Registro_accesos we want to count
     *   }
     * })
    **/
    count<T extends registro_accesoCountArgs>(
      args?: Subset<T, registro_accesoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Registro_accesoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Registro_acceso.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Registro_accesoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Registro_accesoAggregateArgs>(args: Subset<T, Registro_accesoAggregateArgs>): Prisma.PrismaPromise<GetRegistro_accesoAggregateType<T>>

    /**
     * Group by Registro_acceso.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {registro_accesoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends registro_accesoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: registro_accesoGroupByArgs['orderBy'] }
        : { orderBy?: registro_accesoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, registro_accesoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetRegistro_accesoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the registro_acceso model
   */
  readonly fields: registro_accesoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for registro_acceso.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__registro_accesoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    usuario<T extends usuarioDefaultArgs<ExtArgs> = {}>(args?: Subset<T, usuarioDefaultArgs<ExtArgs>>): Prisma__usuarioClient<$Result.GetResult<Prisma.$usuarioPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the registro_acceso model
   */
  interface registro_accesoFieldRefs {
    readonly id_registro: FieldRef<"registro_acceso", 'Int'>
    readonly id_usuario: FieldRef<"registro_acceso", 'Int'>
    readonly ip_origen: FieldRef<"registro_acceso", 'String'>
    readonly accion: FieldRef<"registro_acceso", 'String'>
    readonly fecha_hora: FieldRef<"registro_acceso", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * registro_acceso findUnique
   */
  export type registro_accesoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the registro_acceso
     */
    select?: registro_accesoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the registro_acceso
     */
    omit?: registro_accesoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: registro_accesoInclude<ExtArgs> | null
    /**
     * Filter, which registro_acceso to fetch.
     */
    where: registro_accesoWhereUniqueInput
  }

  /**
   * registro_acceso findUniqueOrThrow
   */
  export type registro_accesoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the registro_acceso
     */
    select?: registro_accesoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the registro_acceso
     */
    omit?: registro_accesoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: registro_accesoInclude<ExtArgs> | null
    /**
     * Filter, which registro_acceso to fetch.
     */
    where: registro_accesoWhereUniqueInput
  }

  /**
   * registro_acceso findFirst
   */
  export type registro_accesoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the registro_acceso
     */
    select?: registro_accesoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the registro_acceso
     */
    omit?: registro_accesoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: registro_accesoInclude<ExtArgs> | null
    /**
     * Filter, which registro_acceso to fetch.
     */
    where?: registro_accesoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of registro_accesos to fetch.
     */
    orderBy?: registro_accesoOrderByWithRelationInput | registro_accesoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for registro_accesos.
     */
    cursor?: registro_accesoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` registro_accesos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` registro_accesos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of registro_accesos.
     */
    distinct?: Registro_accesoScalarFieldEnum | Registro_accesoScalarFieldEnum[]
  }

  /**
   * registro_acceso findFirstOrThrow
   */
  export type registro_accesoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the registro_acceso
     */
    select?: registro_accesoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the registro_acceso
     */
    omit?: registro_accesoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: registro_accesoInclude<ExtArgs> | null
    /**
     * Filter, which registro_acceso to fetch.
     */
    where?: registro_accesoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of registro_accesos to fetch.
     */
    orderBy?: registro_accesoOrderByWithRelationInput | registro_accesoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for registro_accesos.
     */
    cursor?: registro_accesoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` registro_accesos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` registro_accesos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of registro_accesos.
     */
    distinct?: Registro_accesoScalarFieldEnum | Registro_accesoScalarFieldEnum[]
  }

  /**
   * registro_acceso findMany
   */
  export type registro_accesoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the registro_acceso
     */
    select?: registro_accesoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the registro_acceso
     */
    omit?: registro_accesoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: registro_accesoInclude<ExtArgs> | null
    /**
     * Filter, which registro_accesos to fetch.
     */
    where?: registro_accesoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of registro_accesos to fetch.
     */
    orderBy?: registro_accesoOrderByWithRelationInput | registro_accesoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing registro_accesos.
     */
    cursor?: registro_accesoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` registro_accesos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` registro_accesos.
     */
    skip?: number
    distinct?: Registro_accesoScalarFieldEnum | Registro_accesoScalarFieldEnum[]
  }

  /**
   * registro_acceso create
   */
  export type registro_accesoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the registro_acceso
     */
    select?: registro_accesoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the registro_acceso
     */
    omit?: registro_accesoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: registro_accesoInclude<ExtArgs> | null
    /**
     * The data needed to create a registro_acceso.
     */
    data: XOR<registro_accesoCreateInput, registro_accesoUncheckedCreateInput>
  }

  /**
   * registro_acceso createMany
   */
  export type registro_accesoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many registro_accesos.
     */
    data: registro_accesoCreateManyInput | registro_accesoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * registro_acceso createManyAndReturn
   */
  export type registro_accesoCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the registro_acceso
     */
    select?: registro_accesoSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the registro_acceso
     */
    omit?: registro_accesoOmit<ExtArgs> | null
    /**
     * The data used to create many registro_accesos.
     */
    data: registro_accesoCreateManyInput | registro_accesoCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: registro_accesoIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * registro_acceso update
   */
  export type registro_accesoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the registro_acceso
     */
    select?: registro_accesoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the registro_acceso
     */
    omit?: registro_accesoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: registro_accesoInclude<ExtArgs> | null
    /**
     * The data needed to update a registro_acceso.
     */
    data: XOR<registro_accesoUpdateInput, registro_accesoUncheckedUpdateInput>
    /**
     * Choose, which registro_acceso to update.
     */
    where: registro_accesoWhereUniqueInput
  }

  /**
   * registro_acceso updateMany
   */
  export type registro_accesoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update registro_accesos.
     */
    data: XOR<registro_accesoUpdateManyMutationInput, registro_accesoUncheckedUpdateManyInput>
    /**
     * Filter which registro_accesos to update
     */
    where?: registro_accesoWhereInput
    /**
     * Limit how many registro_accesos to update.
     */
    limit?: number
  }

  /**
   * registro_acceso updateManyAndReturn
   */
  export type registro_accesoUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the registro_acceso
     */
    select?: registro_accesoSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the registro_acceso
     */
    omit?: registro_accesoOmit<ExtArgs> | null
    /**
     * The data used to update registro_accesos.
     */
    data: XOR<registro_accesoUpdateManyMutationInput, registro_accesoUncheckedUpdateManyInput>
    /**
     * Filter which registro_accesos to update
     */
    where?: registro_accesoWhereInput
    /**
     * Limit how many registro_accesos to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: registro_accesoIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * registro_acceso upsert
   */
  export type registro_accesoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the registro_acceso
     */
    select?: registro_accesoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the registro_acceso
     */
    omit?: registro_accesoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: registro_accesoInclude<ExtArgs> | null
    /**
     * The filter to search for the registro_acceso to update in case it exists.
     */
    where: registro_accesoWhereUniqueInput
    /**
     * In case the registro_acceso found by the `where` argument doesn't exist, create a new registro_acceso with this data.
     */
    create: XOR<registro_accesoCreateInput, registro_accesoUncheckedCreateInput>
    /**
     * In case the registro_acceso was found with the provided `where` argument, update it with this data.
     */
    update: XOR<registro_accesoUpdateInput, registro_accesoUncheckedUpdateInput>
  }

  /**
   * registro_acceso delete
   */
  export type registro_accesoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the registro_acceso
     */
    select?: registro_accesoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the registro_acceso
     */
    omit?: registro_accesoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: registro_accesoInclude<ExtArgs> | null
    /**
     * Filter which registro_acceso to delete.
     */
    where: registro_accesoWhereUniqueInput
  }

  /**
   * registro_acceso deleteMany
   */
  export type registro_accesoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which registro_accesos to delete
     */
    where?: registro_accesoWhereInput
    /**
     * Limit how many registro_accesos to delete.
     */
    limit?: number
  }

  /**
   * registro_acceso without action
   */
  export type registro_accesoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the registro_acceso
     */
    select?: registro_accesoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the registro_acceso
     */
    omit?: registro_accesoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: registro_accesoInclude<ExtArgs> | null
  }


  /**
   * Model rol_usuario
   */

  export type AggregateRol_usuario = {
    _count: Rol_usuarioCountAggregateOutputType | null
    _avg: Rol_usuarioAvgAggregateOutputType | null
    _sum: Rol_usuarioSumAggregateOutputType | null
    _min: Rol_usuarioMinAggregateOutputType | null
    _max: Rol_usuarioMaxAggregateOutputType | null
  }

  export type Rol_usuarioAvgAggregateOutputType = {
    id_rol_usuario: number | null
  }

  export type Rol_usuarioSumAggregateOutputType = {
    id_rol_usuario: number | null
  }

  export type Rol_usuarioMinAggregateOutputType = {
    id_rol_usuario: number | null
    nombre: string | null
    descripcion_rol: string | null
  }

  export type Rol_usuarioMaxAggregateOutputType = {
    id_rol_usuario: number | null
    nombre: string | null
    descripcion_rol: string | null
  }

  export type Rol_usuarioCountAggregateOutputType = {
    id_rol_usuario: number
    nombre: number
    descripcion_rol: number
    _all: number
  }


  export type Rol_usuarioAvgAggregateInputType = {
    id_rol_usuario?: true
  }

  export type Rol_usuarioSumAggregateInputType = {
    id_rol_usuario?: true
  }

  export type Rol_usuarioMinAggregateInputType = {
    id_rol_usuario?: true
    nombre?: true
    descripcion_rol?: true
  }

  export type Rol_usuarioMaxAggregateInputType = {
    id_rol_usuario?: true
    nombre?: true
    descripcion_rol?: true
  }

  export type Rol_usuarioCountAggregateInputType = {
    id_rol_usuario?: true
    nombre?: true
    descripcion_rol?: true
    _all?: true
  }

  export type Rol_usuarioAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which rol_usuario to aggregate.
     */
    where?: rol_usuarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of rol_usuarios to fetch.
     */
    orderBy?: rol_usuarioOrderByWithRelationInput | rol_usuarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: rol_usuarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` rol_usuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` rol_usuarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned rol_usuarios
    **/
    _count?: true | Rol_usuarioCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Rol_usuarioAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Rol_usuarioSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Rol_usuarioMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Rol_usuarioMaxAggregateInputType
  }

  export type GetRol_usuarioAggregateType<T extends Rol_usuarioAggregateArgs> = {
        [P in keyof T & keyof AggregateRol_usuario]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateRol_usuario[P]>
      : GetScalarType<T[P], AggregateRol_usuario[P]>
  }




  export type rol_usuarioGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: rol_usuarioWhereInput
    orderBy?: rol_usuarioOrderByWithAggregationInput | rol_usuarioOrderByWithAggregationInput[]
    by: Rol_usuarioScalarFieldEnum[] | Rol_usuarioScalarFieldEnum
    having?: rol_usuarioScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Rol_usuarioCountAggregateInputType | true
    _avg?: Rol_usuarioAvgAggregateInputType
    _sum?: Rol_usuarioSumAggregateInputType
    _min?: Rol_usuarioMinAggregateInputType
    _max?: Rol_usuarioMaxAggregateInputType
  }

  export type Rol_usuarioGroupByOutputType = {
    id_rol_usuario: number
    nombre: string
    descripcion_rol: string
    _count: Rol_usuarioCountAggregateOutputType | null
    _avg: Rol_usuarioAvgAggregateOutputType | null
    _sum: Rol_usuarioSumAggregateOutputType | null
    _min: Rol_usuarioMinAggregateOutputType | null
    _max: Rol_usuarioMaxAggregateOutputType | null
  }

  type GetRol_usuarioGroupByPayload<T extends rol_usuarioGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Rol_usuarioGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Rol_usuarioGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Rol_usuarioGroupByOutputType[P]>
            : GetScalarType<T[P], Rol_usuarioGroupByOutputType[P]>
        }
      >
    >


  export type rol_usuarioSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_rol_usuario?: boolean
    nombre?: boolean
    descripcion_rol?: boolean
    usuario?: boolean | rol_usuario$usuarioArgs<ExtArgs>
    _count?: boolean | Rol_usuarioCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["rol_usuario"]>

  export type rol_usuarioSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_rol_usuario?: boolean
    nombre?: boolean
    descripcion_rol?: boolean
  }, ExtArgs["result"]["rol_usuario"]>

  export type rol_usuarioSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_rol_usuario?: boolean
    nombre?: boolean
    descripcion_rol?: boolean
  }, ExtArgs["result"]["rol_usuario"]>

  export type rol_usuarioSelectScalar = {
    id_rol_usuario?: boolean
    nombre?: boolean
    descripcion_rol?: boolean
  }

  export type rol_usuarioOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id_rol_usuario" | "nombre" | "descripcion_rol", ExtArgs["result"]["rol_usuario"]>
  export type rol_usuarioInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    usuario?: boolean | rol_usuario$usuarioArgs<ExtArgs>
    _count?: boolean | Rol_usuarioCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type rol_usuarioIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type rol_usuarioIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $rol_usuarioPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "rol_usuario"
    objects: {
      usuario: Prisma.$usuarioPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id_rol_usuario: number
      nombre: string
      descripcion_rol: string
    }, ExtArgs["result"]["rol_usuario"]>
    composites: {}
  }

  type rol_usuarioGetPayload<S extends boolean | null | undefined | rol_usuarioDefaultArgs> = $Result.GetResult<Prisma.$rol_usuarioPayload, S>

  type rol_usuarioCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<rol_usuarioFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Rol_usuarioCountAggregateInputType | true
    }

  export interface rol_usuarioDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['rol_usuario'], meta: { name: 'rol_usuario' } }
    /**
     * Find zero or one Rol_usuario that matches the filter.
     * @param {rol_usuarioFindUniqueArgs} args - Arguments to find a Rol_usuario
     * @example
     * // Get one Rol_usuario
     * const rol_usuario = await prisma.rol_usuario.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends rol_usuarioFindUniqueArgs>(args: SelectSubset<T, rol_usuarioFindUniqueArgs<ExtArgs>>): Prisma__rol_usuarioClient<$Result.GetResult<Prisma.$rol_usuarioPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Rol_usuario that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {rol_usuarioFindUniqueOrThrowArgs} args - Arguments to find a Rol_usuario
     * @example
     * // Get one Rol_usuario
     * const rol_usuario = await prisma.rol_usuario.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends rol_usuarioFindUniqueOrThrowArgs>(args: SelectSubset<T, rol_usuarioFindUniqueOrThrowArgs<ExtArgs>>): Prisma__rol_usuarioClient<$Result.GetResult<Prisma.$rol_usuarioPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Rol_usuario that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {rol_usuarioFindFirstArgs} args - Arguments to find a Rol_usuario
     * @example
     * // Get one Rol_usuario
     * const rol_usuario = await prisma.rol_usuario.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends rol_usuarioFindFirstArgs>(args?: SelectSubset<T, rol_usuarioFindFirstArgs<ExtArgs>>): Prisma__rol_usuarioClient<$Result.GetResult<Prisma.$rol_usuarioPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Rol_usuario that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {rol_usuarioFindFirstOrThrowArgs} args - Arguments to find a Rol_usuario
     * @example
     * // Get one Rol_usuario
     * const rol_usuario = await prisma.rol_usuario.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends rol_usuarioFindFirstOrThrowArgs>(args?: SelectSubset<T, rol_usuarioFindFirstOrThrowArgs<ExtArgs>>): Prisma__rol_usuarioClient<$Result.GetResult<Prisma.$rol_usuarioPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Rol_usuarios that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {rol_usuarioFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Rol_usuarios
     * const rol_usuarios = await prisma.rol_usuario.findMany()
     * 
     * // Get first 10 Rol_usuarios
     * const rol_usuarios = await prisma.rol_usuario.findMany({ take: 10 })
     * 
     * // Only select the `id_rol_usuario`
     * const rol_usuarioWithId_rol_usuarioOnly = await prisma.rol_usuario.findMany({ select: { id_rol_usuario: true } })
     * 
     */
    findMany<T extends rol_usuarioFindManyArgs>(args?: SelectSubset<T, rol_usuarioFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$rol_usuarioPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Rol_usuario.
     * @param {rol_usuarioCreateArgs} args - Arguments to create a Rol_usuario.
     * @example
     * // Create one Rol_usuario
     * const Rol_usuario = await prisma.rol_usuario.create({
     *   data: {
     *     // ... data to create a Rol_usuario
     *   }
     * })
     * 
     */
    create<T extends rol_usuarioCreateArgs>(args: SelectSubset<T, rol_usuarioCreateArgs<ExtArgs>>): Prisma__rol_usuarioClient<$Result.GetResult<Prisma.$rol_usuarioPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Rol_usuarios.
     * @param {rol_usuarioCreateManyArgs} args - Arguments to create many Rol_usuarios.
     * @example
     * // Create many Rol_usuarios
     * const rol_usuario = await prisma.rol_usuario.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends rol_usuarioCreateManyArgs>(args?: SelectSubset<T, rol_usuarioCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Rol_usuarios and returns the data saved in the database.
     * @param {rol_usuarioCreateManyAndReturnArgs} args - Arguments to create many Rol_usuarios.
     * @example
     * // Create many Rol_usuarios
     * const rol_usuario = await prisma.rol_usuario.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Rol_usuarios and only return the `id_rol_usuario`
     * const rol_usuarioWithId_rol_usuarioOnly = await prisma.rol_usuario.createManyAndReturn({
     *   select: { id_rol_usuario: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends rol_usuarioCreateManyAndReturnArgs>(args?: SelectSubset<T, rol_usuarioCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$rol_usuarioPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Rol_usuario.
     * @param {rol_usuarioDeleteArgs} args - Arguments to delete one Rol_usuario.
     * @example
     * // Delete one Rol_usuario
     * const Rol_usuario = await prisma.rol_usuario.delete({
     *   where: {
     *     // ... filter to delete one Rol_usuario
     *   }
     * })
     * 
     */
    delete<T extends rol_usuarioDeleteArgs>(args: SelectSubset<T, rol_usuarioDeleteArgs<ExtArgs>>): Prisma__rol_usuarioClient<$Result.GetResult<Prisma.$rol_usuarioPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Rol_usuario.
     * @param {rol_usuarioUpdateArgs} args - Arguments to update one Rol_usuario.
     * @example
     * // Update one Rol_usuario
     * const rol_usuario = await prisma.rol_usuario.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends rol_usuarioUpdateArgs>(args: SelectSubset<T, rol_usuarioUpdateArgs<ExtArgs>>): Prisma__rol_usuarioClient<$Result.GetResult<Prisma.$rol_usuarioPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Rol_usuarios.
     * @param {rol_usuarioDeleteManyArgs} args - Arguments to filter Rol_usuarios to delete.
     * @example
     * // Delete a few Rol_usuarios
     * const { count } = await prisma.rol_usuario.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends rol_usuarioDeleteManyArgs>(args?: SelectSubset<T, rol_usuarioDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Rol_usuarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {rol_usuarioUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Rol_usuarios
     * const rol_usuario = await prisma.rol_usuario.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends rol_usuarioUpdateManyArgs>(args: SelectSubset<T, rol_usuarioUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Rol_usuarios and returns the data updated in the database.
     * @param {rol_usuarioUpdateManyAndReturnArgs} args - Arguments to update many Rol_usuarios.
     * @example
     * // Update many Rol_usuarios
     * const rol_usuario = await prisma.rol_usuario.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Rol_usuarios and only return the `id_rol_usuario`
     * const rol_usuarioWithId_rol_usuarioOnly = await prisma.rol_usuario.updateManyAndReturn({
     *   select: { id_rol_usuario: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends rol_usuarioUpdateManyAndReturnArgs>(args: SelectSubset<T, rol_usuarioUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$rol_usuarioPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Rol_usuario.
     * @param {rol_usuarioUpsertArgs} args - Arguments to update or create a Rol_usuario.
     * @example
     * // Update or create a Rol_usuario
     * const rol_usuario = await prisma.rol_usuario.upsert({
     *   create: {
     *     // ... data to create a Rol_usuario
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Rol_usuario we want to update
     *   }
     * })
     */
    upsert<T extends rol_usuarioUpsertArgs>(args: SelectSubset<T, rol_usuarioUpsertArgs<ExtArgs>>): Prisma__rol_usuarioClient<$Result.GetResult<Prisma.$rol_usuarioPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Rol_usuarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {rol_usuarioCountArgs} args - Arguments to filter Rol_usuarios to count.
     * @example
     * // Count the number of Rol_usuarios
     * const count = await prisma.rol_usuario.count({
     *   where: {
     *     // ... the filter for the Rol_usuarios we want to count
     *   }
     * })
    **/
    count<T extends rol_usuarioCountArgs>(
      args?: Subset<T, rol_usuarioCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Rol_usuarioCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Rol_usuario.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Rol_usuarioAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Rol_usuarioAggregateArgs>(args: Subset<T, Rol_usuarioAggregateArgs>): Prisma.PrismaPromise<GetRol_usuarioAggregateType<T>>

    /**
     * Group by Rol_usuario.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {rol_usuarioGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends rol_usuarioGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: rol_usuarioGroupByArgs['orderBy'] }
        : { orderBy?: rol_usuarioGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, rol_usuarioGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetRol_usuarioGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the rol_usuario model
   */
  readonly fields: rol_usuarioFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for rol_usuario.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__rol_usuarioClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    usuario<T extends rol_usuario$usuarioArgs<ExtArgs> = {}>(args?: Subset<T, rol_usuario$usuarioArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$usuarioPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the rol_usuario model
   */
  interface rol_usuarioFieldRefs {
    readonly id_rol_usuario: FieldRef<"rol_usuario", 'Int'>
    readonly nombre: FieldRef<"rol_usuario", 'String'>
    readonly descripcion_rol: FieldRef<"rol_usuario", 'String'>
  }
    

  // Custom InputTypes
  /**
   * rol_usuario findUnique
   */
  export type rol_usuarioFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the rol_usuario
     */
    select?: rol_usuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the rol_usuario
     */
    omit?: rol_usuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: rol_usuarioInclude<ExtArgs> | null
    /**
     * Filter, which rol_usuario to fetch.
     */
    where: rol_usuarioWhereUniqueInput
  }

  /**
   * rol_usuario findUniqueOrThrow
   */
  export type rol_usuarioFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the rol_usuario
     */
    select?: rol_usuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the rol_usuario
     */
    omit?: rol_usuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: rol_usuarioInclude<ExtArgs> | null
    /**
     * Filter, which rol_usuario to fetch.
     */
    where: rol_usuarioWhereUniqueInput
  }

  /**
   * rol_usuario findFirst
   */
  export type rol_usuarioFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the rol_usuario
     */
    select?: rol_usuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the rol_usuario
     */
    omit?: rol_usuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: rol_usuarioInclude<ExtArgs> | null
    /**
     * Filter, which rol_usuario to fetch.
     */
    where?: rol_usuarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of rol_usuarios to fetch.
     */
    orderBy?: rol_usuarioOrderByWithRelationInput | rol_usuarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for rol_usuarios.
     */
    cursor?: rol_usuarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` rol_usuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` rol_usuarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of rol_usuarios.
     */
    distinct?: Rol_usuarioScalarFieldEnum | Rol_usuarioScalarFieldEnum[]
  }

  /**
   * rol_usuario findFirstOrThrow
   */
  export type rol_usuarioFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the rol_usuario
     */
    select?: rol_usuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the rol_usuario
     */
    omit?: rol_usuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: rol_usuarioInclude<ExtArgs> | null
    /**
     * Filter, which rol_usuario to fetch.
     */
    where?: rol_usuarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of rol_usuarios to fetch.
     */
    orderBy?: rol_usuarioOrderByWithRelationInput | rol_usuarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for rol_usuarios.
     */
    cursor?: rol_usuarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` rol_usuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` rol_usuarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of rol_usuarios.
     */
    distinct?: Rol_usuarioScalarFieldEnum | Rol_usuarioScalarFieldEnum[]
  }

  /**
   * rol_usuario findMany
   */
  export type rol_usuarioFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the rol_usuario
     */
    select?: rol_usuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the rol_usuario
     */
    omit?: rol_usuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: rol_usuarioInclude<ExtArgs> | null
    /**
     * Filter, which rol_usuarios to fetch.
     */
    where?: rol_usuarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of rol_usuarios to fetch.
     */
    orderBy?: rol_usuarioOrderByWithRelationInput | rol_usuarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing rol_usuarios.
     */
    cursor?: rol_usuarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` rol_usuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` rol_usuarios.
     */
    skip?: number
    distinct?: Rol_usuarioScalarFieldEnum | Rol_usuarioScalarFieldEnum[]
  }

  /**
   * rol_usuario create
   */
  export type rol_usuarioCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the rol_usuario
     */
    select?: rol_usuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the rol_usuario
     */
    omit?: rol_usuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: rol_usuarioInclude<ExtArgs> | null
    /**
     * The data needed to create a rol_usuario.
     */
    data: XOR<rol_usuarioCreateInput, rol_usuarioUncheckedCreateInput>
  }

  /**
   * rol_usuario createMany
   */
  export type rol_usuarioCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many rol_usuarios.
     */
    data: rol_usuarioCreateManyInput | rol_usuarioCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * rol_usuario createManyAndReturn
   */
  export type rol_usuarioCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the rol_usuario
     */
    select?: rol_usuarioSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the rol_usuario
     */
    omit?: rol_usuarioOmit<ExtArgs> | null
    /**
     * The data used to create many rol_usuarios.
     */
    data: rol_usuarioCreateManyInput | rol_usuarioCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * rol_usuario update
   */
  export type rol_usuarioUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the rol_usuario
     */
    select?: rol_usuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the rol_usuario
     */
    omit?: rol_usuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: rol_usuarioInclude<ExtArgs> | null
    /**
     * The data needed to update a rol_usuario.
     */
    data: XOR<rol_usuarioUpdateInput, rol_usuarioUncheckedUpdateInput>
    /**
     * Choose, which rol_usuario to update.
     */
    where: rol_usuarioWhereUniqueInput
  }

  /**
   * rol_usuario updateMany
   */
  export type rol_usuarioUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update rol_usuarios.
     */
    data: XOR<rol_usuarioUpdateManyMutationInput, rol_usuarioUncheckedUpdateManyInput>
    /**
     * Filter which rol_usuarios to update
     */
    where?: rol_usuarioWhereInput
    /**
     * Limit how many rol_usuarios to update.
     */
    limit?: number
  }

  /**
   * rol_usuario updateManyAndReturn
   */
  export type rol_usuarioUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the rol_usuario
     */
    select?: rol_usuarioSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the rol_usuario
     */
    omit?: rol_usuarioOmit<ExtArgs> | null
    /**
     * The data used to update rol_usuarios.
     */
    data: XOR<rol_usuarioUpdateManyMutationInput, rol_usuarioUncheckedUpdateManyInput>
    /**
     * Filter which rol_usuarios to update
     */
    where?: rol_usuarioWhereInput
    /**
     * Limit how many rol_usuarios to update.
     */
    limit?: number
  }

  /**
   * rol_usuario upsert
   */
  export type rol_usuarioUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the rol_usuario
     */
    select?: rol_usuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the rol_usuario
     */
    omit?: rol_usuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: rol_usuarioInclude<ExtArgs> | null
    /**
     * The filter to search for the rol_usuario to update in case it exists.
     */
    where: rol_usuarioWhereUniqueInput
    /**
     * In case the rol_usuario found by the `where` argument doesn't exist, create a new rol_usuario with this data.
     */
    create: XOR<rol_usuarioCreateInput, rol_usuarioUncheckedCreateInput>
    /**
     * In case the rol_usuario was found with the provided `where` argument, update it with this data.
     */
    update: XOR<rol_usuarioUpdateInput, rol_usuarioUncheckedUpdateInput>
  }

  /**
   * rol_usuario delete
   */
  export type rol_usuarioDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the rol_usuario
     */
    select?: rol_usuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the rol_usuario
     */
    omit?: rol_usuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: rol_usuarioInclude<ExtArgs> | null
    /**
     * Filter which rol_usuario to delete.
     */
    where: rol_usuarioWhereUniqueInput
  }

  /**
   * rol_usuario deleteMany
   */
  export type rol_usuarioDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which rol_usuarios to delete
     */
    where?: rol_usuarioWhereInput
    /**
     * Limit how many rol_usuarios to delete.
     */
    limit?: number
  }

  /**
   * rol_usuario.usuario
   */
  export type rol_usuario$usuarioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the usuario
     */
    select?: usuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the usuario
     */
    omit?: usuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usuarioInclude<ExtArgs> | null
    where?: usuarioWhereInput
    orderBy?: usuarioOrderByWithRelationInput | usuarioOrderByWithRelationInput[]
    cursor?: usuarioWhereUniqueInput
    take?: number
    skip?: number
    distinct?: UsuarioScalarFieldEnum | UsuarioScalarFieldEnum[]
  }

  /**
   * rol_usuario without action
   */
  export type rol_usuarioDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the rol_usuario
     */
    select?: rol_usuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the rol_usuario
     */
    omit?: rol_usuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: rol_usuarioInclude<ExtArgs> | null
  }


  /**
   * Model tipo_concepto_salarial
   */

  export type AggregateTipo_concepto_salarial = {
    _count: Tipo_concepto_salarialCountAggregateOutputType | null
    _avg: Tipo_concepto_salarialAvgAggregateOutputType | null
    _sum: Tipo_concepto_salarialSumAggregateOutputType | null
    _min: Tipo_concepto_salarialMinAggregateOutputType | null
    _max: Tipo_concepto_salarialMaxAggregateOutputType | null
  }

  export type Tipo_concepto_salarialAvgAggregateOutputType = {
    id_concepto_salarial: number | null
  }

  export type Tipo_concepto_salarialSumAggregateOutputType = {
    id_concepto_salarial: number | null
  }

  export type Tipo_concepto_salarialMinAggregateOutputType = {
    id_concepto_salarial: number | null
    descripcion: string | null
  }

  export type Tipo_concepto_salarialMaxAggregateOutputType = {
    id_concepto_salarial: number | null
    descripcion: string | null
  }

  export type Tipo_concepto_salarialCountAggregateOutputType = {
    id_concepto_salarial: number
    descripcion: number
    _all: number
  }


  export type Tipo_concepto_salarialAvgAggregateInputType = {
    id_concepto_salarial?: true
  }

  export type Tipo_concepto_salarialSumAggregateInputType = {
    id_concepto_salarial?: true
  }

  export type Tipo_concepto_salarialMinAggregateInputType = {
    id_concepto_salarial?: true
    descripcion?: true
  }

  export type Tipo_concepto_salarialMaxAggregateInputType = {
    id_concepto_salarial?: true
    descripcion?: true
  }

  export type Tipo_concepto_salarialCountAggregateInputType = {
    id_concepto_salarial?: true
    descripcion?: true
    _all?: true
  }

  export type Tipo_concepto_salarialAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which tipo_concepto_salarial to aggregate.
     */
    where?: tipo_concepto_salarialWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tipo_concepto_salarials to fetch.
     */
    orderBy?: tipo_concepto_salarialOrderByWithRelationInput | tipo_concepto_salarialOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: tipo_concepto_salarialWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tipo_concepto_salarials from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tipo_concepto_salarials.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned tipo_concepto_salarials
    **/
    _count?: true | Tipo_concepto_salarialCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Tipo_concepto_salarialAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Tipo_concepto_salarialSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Tipo_concepto_salarialMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Tipo_concepto_salarialMaxAggregateInputType
  }

  export type GetTipo_concepto_salarialAggregateType<T extends Tipo_concepto_salarialAggregateArgs> = {
        [P in keyof T & keyof AggregateTipo_concepto_salarial]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTipo_concepto_salarial[P]>
      : GetScalarType<T[P], AggregateTipo_concepto_salarial[P]>
  }




  export type tipo_concepto_salarialGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: tipo_concepto_salarialWhereInput
    orderBy?: tipo_concepto_salarialOrderByWithAggregationInput | tipo_concepto_salarialOrderByWithAggregationInput[]
    by: Tipo_concepto_salarialScalarFieldEnum[] | Tipo_concepto_salarialScalarFieldEnum
    having?: tipo_concepto_salarialScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Tipo_concepto_salarialCountAggregateInputType | true
    _avg?: Tipo_concepto_salarialAvgAggregateInputType
    _sum?: Tipo_concepto_salarialSumAggregateInputType
    _min?: Tipo_concepto_salarialMinAggregateInputType
    _max?: Tipo_concepto_salarialMaxAggregateInputType
  }

  export type Tipo_concepto_salarialGroupByOutputType = {
    id_concepto_salarial: number
    descripcion: string
    _count: Tipo_concepto_salarialCountAggregateOutputType | null
    _avg: Tipo_concepto_salarialAvgAggregateOutputType | null
    _sum: Tipo_concepto_salarialSumAggregateOutputType | null
    _min: Tipo_concepto_salarialMinAggregateOutputType | null
    _max: Tipo_concepto_salarialMaxAggregateOutputType | null
  }

  type GetTipo_concepto_salarialGroupByPayload<T extends tipo_concepto_salarialGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Tipo_concepto_salarialGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Tipo_concepto_salarialGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Tipo_concepto_salarialGroupByOutputType[P]>
            : GetScalarType<T[P], Tipo_concepto_salarialGroupByOutputType[P]>
        }
      >
    >


  export type tipo_concepto_salarialSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_concepto_salarial?: boolean
    descripcion?: boolean
    concepto_salarial?: boolean | tipo_concepto_salarial$concepto_salarialArgs<ExtArgs>
    _count?: boolean | Tipo_concepto_salarialCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["tipo_concepto_salarial"]>

  export type tipo_concepto_salarialSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_concepto_salarial?: boolean
    descripcion?: boolean
  }, ExtArgs["result"]["tipo_concepto_salarial"]>

  export type tipo_concepto_salarialSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_concepto_salarial?: boolean
    descripcion?: boolean
  }, ExtArgs["result"]["tipo_concepto_salarial"]>

  export type tipo_concepto_salarialSelectScalar = {
    id_concepto_salarial?: boolean
    descripcion?: boolean
  }

  export type tipo_concepto_salarialOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id_concepto_salarial" | "descripcion", ExtArgs["result"]["tipo_concepto_salarial"]>
  export type tipo_concepto_salarialInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    concepto_salarial?: boolean | tipo_concepto_salarial$concepto_salarialArgs<ExtArgs>
    _count?: boolean | Tipo_concepto_salarialCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type tipo_concepto_salarialIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type tipo_concepto_salarialIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $tipo_concepto_salarialPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "tipo_concepto_salarial"
    objects: {
      concepto_salarial: Prisma.$concepto_salarialPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id_concepto_salarial: number
      descripcion: string
    }, ExtArgs["result"]["tipo_concepto_salarial"]>
    composites: {}
  }

  type tipo_concepto_salarialGetPayload<S extends boolean | null | undefined | tipo_concepto_salarialDefaultArgs> = $Result.GetResult<Prisma.$tipo_concepto_salarialPayload, S>

  type tipo_concepto_salarialCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<tipo_concepto_salarialFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Tipo_concepto_salarialCountAggregateInputType | true
    }

  export interface tipo_concepto_salarialDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['tipo_concepto_salarial'], meta: { name: 'tipo_concepto_salarial' } }
    /**
     * Find zero or one Tipo_concepto_salarial that matches the filter.
     * @param {tipo_concepto_salarialFindUniqueArgs} args - Arguments to find a Tipo_concepto_salarial
     * @example
     * // Get one Tipo_concepto_salarial
     * const tipo_concepto_salarial = await prisma.tipo_concepto_salarial.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends tipo_concepto_salarialFindUniqueArgs>(args: SelectSubset<T, tipo_concepto_salarialFindUniqueArgs<ExtArgs>>): Prisma__tipo_concepto_salarialClient<$Result.GetResult<Prisma.$tipo_concepto_salarialPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Tipo_concepto_salarial that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {tipo_concepto_salarialFindUniqueOrThrowArgs} args - Arguments to find a Tipo_concepto_salarial
     * @example
     * // Get one Tipo_concepto_salarial
     * const tipo_concepto_salarial = await prisma.tipo_concepto_salarial.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends tipo_concepto_salarialFindUniqueOrThrowArgs>(args: SelectSubset<T, tipo_concepto_salarialFindUniqueOrThrowArgs<ExtArgs>>): Prisma__tipo_concepto_salarialClient<$Result.GetResult<Prisma.$tipo_concepto_salarialPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Tipo_concepto_salarial that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tipo_concepto_salarialFindFirstArgs} args - Arguments to find a Tipo_concepto_salarial
     * @example
     * // Get one Tipo_concepto_salarial
     * const tipo_concepto_salarial = await prisma.tipo_concepto_salarial.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends tipo_concepto_salarialFindFirstArgs>(args?: SelectSubset<T, tipo_concepto_salarialFindFirstArgs<ExtArgs>>): Prisma__tipo_concepto_salarialClient<$Result.GetResult<Prisma.$tipo_concepto_salarialPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Tipo_concepto_salarial that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tipo_concepto_salarialFindFirstOrThrowArgs} args - Arguments to find a Tipo_concepto_salarial
     * @example
     * // Get one Tipo_concepto_salarial
     * const tipo_concepto_salarial = await prisma.tipo_concepto_salarial.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends tipo_concepto_salarialFindFirstOrThrowArgs>(args?: SelectSubset<T, tipo_concepto_salarialFindFirstOrThrowArgs<ExtArgs>>): Prisma__tipo_concepto_salarialClient<$Result.GetResult<Prisma.$tipo_concepto_salarialPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Tipo_concepto_salarials that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tipo_concepto_salarialFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Tipo_concepto_salarials
     * const tipo_concepto_salarials = await prisma.tipo_concepto_salarial.findMany()
     * 
     * // Get first 10 Tipo_concepto_salarials
     * const tipo_concepto_salarials = await prisma.tipo_concepto_salarial.findMany({ take: 10 })
     * 
     * // Only select the `id_concepto_salarial`
     * const tipo_concepto_salarialWithId_concepto_salarialOnly = await prisma.tipo_concepto_salarial.findMany({ select: { id_concepto_salarial: true } })
     * 
     */
    findMany<T extends tipo_concepto_salarialFindManyArgs>(args?: SelectSubset<T, tipo_concepto_salarialFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tipo_concepto_salarialPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Tipo_concepto_salarial.
     * @param {tipo_concepto_salarialCreateArgs} args - Arguments to create a Tipo_concepto_salarial.
     * @example
     * // Create one Tipo_concepto_salarial
     * const Tipo_concepto_salarial = await prisma.tipo_concepto_salarial.create({
     *   data: {
     *     // ... data to create a Tipo_concepto_salarial
     *   }
     * })
     * 
     */
    create<T extends tipo_concepto_salarialCreateArgs>(args: SelectSubset<T, tipo_concepto_salarialCreateArgs<ExtArgs>>): Prisma__tipo_concepto_salarialClient<$Result.GetResult<Prisma.$tipo_concepto_salarialPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Tipo_concepto_salarials.
     * @param {tipo_concepto_salarialCreateManyArgs} args - Arguments to create many Tipo_concepto_salarials.
     * @example
     * // Create many Tipo_concepto_salarials
     * const tipo_concepto_salarial = await prisma.tipo_concepto_salarial.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends tipo_concepto_salarialCreateManyArgs>(args?: SelectSubset<T, tipo_concepto_salarialCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Tipo_concepto_salarials and returns the data saved in the database.
     * @param {tipo_concepto_salarialCreateManyAndReturnArgs} args - Arguments to create many Tipo_concepto_salarials.
     * @example
     * // Create many Tipo_concepto_salarials
     * const tipo_concepto_salarial = await prisma.tipo_concepto_salarial.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Tipo_concepto_salarials and only return the `id_concepto_salarial`
     * const tipo_concepto_salarialWithId_concepto_salarialOnly = await prisma.tipo_concepto_salarial.createManyAndReturn({
     *   select: { id_concepto_salarial: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends tipo_concepto_salarialCreateManyAndReturnArgs>(args?: SelectSubset<T, tipo_concepto_salarialCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tipo_concepto_salarialPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Tipo_concepto_salarial.
     * @param {tipo_concepto_salarialDeleteArgs} args - Arguments to delete one Tipo_concepto_salarial.
     * @example
     * // Delete one Tipo_concepto_salarial
     * const Tipo_concepto_salarial = await prisma.tipo_concepto_salarial.delete({
     *   where: {
     *     // ... filter to delete one Tipo_concepto_salarial
     *   }
     * })
     * 
     */
    delete<T extends tipo_concepto_salarialDeleteArgs>(args: SelectSubset<T, tipo_concepto_salarialDeleteArgs<ExtArgs>>): Prisma__tipo_concepto_salarialClient<$Result.GetResult<Prisma.$tipo_concepto_salarialPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Tipo_concepto_salarial.
     * @param {tipo_concepto_salarialUpdateArgs} args - Arguments to update one Tipo_concepto_salarial.
     * @example
     * // Update one Tipo_concepto_salarial
     * const tipo_concepto_salarial = await prisma.tipo_concepto_salarial.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends tipo_concepto_salarialUpdateArgs>(args: SelectSubset<T, tipo_concepto_salarialUpdateArgs<ExtArgs>>): Prisma__tipo_concepto_salarialClient<$Result.GetResult<Prisma.$tipo_concepto_salarialPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Tipo_concepto_salarials.
     * @param {tipo_concepto_salarialDeleteManyArgs} args - Arguments to filter Tipo_concepto_salarials to delete.
     * @example
     * // Delete a few Tipo_concepto_salarials
     * const { count } = await prisma.tipo_concepto_salarial.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends tipo_concepto_salarialDeleteManyArgs>(args?: SelectSubset<T, tipo_concepto_salarialDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Tipo_concepto_salarials.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tipo_concepto_salarialUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Tipo_concepto_salarials
     * const tipo_concepto_salarial = await prisma.tipo_concepto_salarial.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends tipo_concepto_salarialUpdateManyArgs>(args: SelectSubset<T, tipo_concepto_salarialUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Tipo_concepto_salarials and returns the data updated in the database.
     * @param {tipo_concepto_salarialUpdateManyAndReturnArgs} args - Arguments to update many Tipo_concepto_salarials.
     * @example
     * // Update many Tipo_concepto_salarials
     * const tipo_concepto_salarial = await prisma.tipo_concepto_salarial.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Tipo_concepto_salarials and only return the `id_concepto_salarial`
     * const tipo_concepto_salarialWithId_concepto_salarialOnly = await prisma.tipo_concepto_salarial.updateManyAndReturn({
     *   select: { id_concepto_salarial: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends tipo_concepto_salarialUpdateManyAndReturnArgs>(args: SelectSubset<T, tipo_concepto_salarialUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tipo_concepto_salarialPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Tipo_concepto_salarial.
     * @param {tipo_concepto_salarialUpsertArgs} args - Arguments to update or create a Tipo_concepto_salarial.
     * @example
     * // Update or create a Tipo_concepto_salarial
     * const tipo_concepto_salarial = await prisma.tipo_concepto_salarial.upsert({
     *   create: {
     *     // ... data to create a Tipo_concepto_salarial
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Tipo_concepto_salarial we want to update
     *   }
     * })
     */
    upsert<T extends tipo_concepto_salarialUpsertArgs>(args: SelectSubset<T, tipo_concepto_salarialUpsertArgs<ExtArgs>>): Prisma__tipo_concepto_salarialClient<$Result.GetResult<Prisma.$tipo_concepto_salarialPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Tipo_concepto_salarials.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tipo_concepto_salarialCountArgs} args - Arguments to filter Tipo_concepto_salarials to count.
     * @example
     * // Count the number of Tipo_concepto_salarials
     * const count = await prisma.tipo_concepto_salarial.count({
     *   where: {
     *     // ... the filter for the Tipo_concepto_salarials we want to count
     *   }
     * })
    **/
    count<T extends tipo_concepto_salarialCountArgs>(
      args?: Subset<T, tipo_concepto_salarialCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Tipo_concepto_salarialCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Tipo_concepto_salarial.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Tipo_concepto_salarialAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Tipo_concepto_salarialAggregateArgs>(args: Subset<T, Tipo_concepto_salarialAggregateArgs>): Prisma.PrismaPromise<GetTipo_concepto_salarialAggregateType<T>>

    /**
     * Group by Tipo_concepto_salarial.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tipo_concepto_salarialGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends tipo_concepto_salarialGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: tipo_concepto_salarialGroupByArgs['orderBy'] }
        : { orderBy?: tipo_concepto_salarialGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, tipo_concepto_salarialGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTipo_concepto_salarialGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the tipo_concepto_salarial model
   */
  readonly fields: tipo_concepto_salarialFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for tipo_concepto_salarial.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__tipo_concepto_salarialClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    concepto_salarial<T extends tipo_concepto_salarial$concepto_salarialArgs<ExtArgs> = {}>(args?: Subset<T, tipo_concepto_salarial$concepto_salarialArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$concepto_salarialPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the tipo_concepto_salarial model
   */
  interface tipo_concepto_salarialFieldRefs {
    readonly id_concepto_salarial: FieldRef<"tipo_concepto_salarial", 'Int'>
    readonly descripcion: FieldRef<"tipo_concepto_salarial", 'String'>
  }
    

  // Custom InputTypes
  /**
   * tipo_concepto_salarial findUnique
   */
  export type tipo_concepto_salarialFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tipo_concepto_salarial
     */
    select?: tipo_concepto_salarialSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tipo_concepto_salarial
     */
    omit?: tipo_concepto_salarialOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tipo_concepto_salarialInclude<ExtArgs> | null
    /**
     * Filter, which tipo_concepto_salarial to fetch.
     */
    where: tipo_concepto_salarialWhereUniqueInput
  }

  /**
   * tipo_concepto_salarial findUniqueOrThrow
   */
  export type tipo_concepto_salarialFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tipo_concepto_salarial
     */
    select?: tipo_concepto_salarialSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tipo_concepto_salarial
     */
    omit?: tipo_concepto_salarialOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tipo_concepto_salarialInclude<ExtArgs> | null
    /**
     * Filter, which tipo_concepto_salarial to fetch.
     */
    where: tipo_concepto_salarialWhereUniqueInput
  }

  /**
   * tipo_concepto_salarial findFirst
   */
  export type tipo_concepto_salarialFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tipo_concepto_salarial
     */
    select?: tipo_concepto_salarialSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tipo_concepto_salarial
     */
    omit?: tipo_concepto_salarialOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tipo_concepto_salarialInclude<ExtArgs> | null
    /**
     * Filter, which tipo_concepto_salarial to fetch.
     */
    where?: tipo_concepto_salarialWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tipo_concepto_salarials to fetch.
     */
    orderBy?: tipo_concepto_salarialOrderByWithRelationInput | tipo_concepto_salarialOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tipo_concepto_salarials.
     */
    cursor?: tipo_concepto_salarialWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tipo_concepto_salarials from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tipo_concepto_salarials.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tipo_concepto_salarials.
     */
    distinct?: Tipo_concepto_salarialScalarFieldEnum | Tipo_concepto_salarialScalarFieldEnum[]
  }

  /**
   * tipo_concepto_salarial findFirstOrThrow
   */
  export type tipo_concepto_salarialFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tipo_concepto_salarial
     */
    select?: tipo_concepto_salarialSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tipo_concepto_salarial
     */
    omit?: tipo_concepto_salarialOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tipo_concepto_salarialInclude<ExtArgs> | null
    /**
     * Filter, which tipo_concepto_salarial to fetch.
     */
    where?: tipo_concepto_salarialWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tipo_concepto_salarials to fetch.
     */
    orderBy?: tipo_concepto_salarialOrderByWithRelationInput | tipo_concepto_salarialOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tipo_concepto_salarials.
     */
    cursor?: tipo_concepto_salarialWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tipo_concepto_salarials from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tipo_concepto_salarials.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tipo_concepto_salarials.
     */
    distinct?: Tipo_concepto_salarialScalarFieldEnum | Tipo_concepto_salarialScalarFieldEnum[]
  }

  /**
   * tipo_concepto_salarial findMany
   */
  export type tipo_concepto_salarialFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tipo_concepto_salarial
     */
    select?: tipo_concepto_salarialSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tipo_concepto_salarial
     */
    omit?: tipo_concepto_salarialOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tipo_concepto_salarialInclude<ExtArgs> | null
    /**
     * Filter, which tipo_concepto_salarials to fetch.
     */
    where?: tipo_concepto_salarialWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tipo_concepto_salarials to fetch.
     */
    orderBy?: tipo_concepto_salarialOrderByWithRelationInput | tipo_concepto_salarialOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing tipo_concepto_salarials.
     */
    cursor?: tipo_concepto_salarialWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tipo_concepto_salarials from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tipo_concepto_salarials.
     */
    skip?: number
    distinct?: Tipo_concepto_salarialScalarFieldEnum | Tipo_concepto_salarialScalarFieldEnum[]
  }

  /**
   * tipo_concepto_salarial create
   */
  export type tipo_concepto_salarialCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tipo_concepto_salarial
     */
    select?: tipo_concepto_salarialSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tipo_concepto_salarial
     */
    omit?: tipo_concepto_salarialOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tipo_concepto_salarialInclude<ExtArgs> | null
    /**
     * The data needed to create a tipo_concepto_salarial.
     */
    data: XOR<tipo_concepto_salarialCreateInput, tipo_concepto_salarialUncheckedCreateInput>
  }

  /**
   * tipo_concepto_salarial createMany
   */
  export type tipo_concepto_salarialCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many tipo_concepto_salarials.
     */
    data: tipo_concepto_salarialCreateManyInput | tipo_concepto_salarialCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * tipo_concepto_salarial createManyAndReturn
   */
  export type tipo_concepto_salarialCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tipo_concepto_salarial
     */
    select?: tipo_concepto_salarialSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the tipo_concepto_salarial
     */
    omit?: tipo_concepto_salarialOmit<ExtArgs> | null
    /**
     * The data used to create many tipo_concepto_salarials.
     */
    data: tipo_concepto_salarialCreateManyInput | tipo_concepto_salarialCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * tipo_concepto_salarial update
   */
  export type tipo_concepto_salarialUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tipo_concepto_salarial
     */
    select?: tipo_concepto_salarialSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tipo_concepto_salarial
     */
    omit?: tipo_concepto_salarialOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tipo_concepto_salarialInclude<ExtArgs> | null
    /**
     * The data needed to update a tipo_concepto_salarial.
     */
    data: XOR<tipo_concepto_salarialUpdateInput, tipo_concepto_salarialUncheckedUpdateInput>
    /**
     * Choose, which tipo_concepto_salarial to update.
     */
    where: tipo_concepto_salarialWhereUniqueInput
  }

  /**
   * tipo_concepto_salarial updateMany
   */
  export type tipo_concepto_salarialUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update tipo_concepto_salarials.
     */
    data: XOR<tipo_concepto_salarialUpdateManyMutationInput, tipo_concepto_salarialUncheckedUpdateManyInput>
    /**
     * Filter which tipo_concepto_salarials to update
     */
    where?: tipo_concepto_salarialWhereInput
    /**
     * Limit how many tipo_concepto_salarials to update.
     */
    limit?: number
  }

  /**
   * tipo_concepto_salarial updateManyAndReturn
   */
  export type tipo_concepto_salarialUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tipo_concepto_salarial
     */
    select?: tipo_concepto_salarialSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the tipo_concepto_salarial
     */
    omit?: tipo_concepto_salarialOmit<ExtArgs> | null
    /**
     * The data used to update tipo_concepto_salarials.
     */
    data: XOR<tipo_concepto_salarialUpdateManyMutationInput, tipo_concepto_salarialUncheckedUpdateManyInput>
    /**
     * Filter which tipo_concepto_salarials to update
     */
    where?: tipo_concepto_salarialWhereInput
    /**
     * Limit how many tipo_concepto_salarials to update.
     */
    limit?: number
  }

  /**
   * tipo_concepto_salarial upsert
   */
  export type tipo_concepto_salarialUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tipo_concepto_salarial
     */
    select?: tipo_concepto_salarialSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tipo_concepto_salarial
     */
    omit?: tipo_concepto_salarialOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tipo_concepto_salarialInclude<ExtArgs> | null
    /**
     * The filter to search for the tipo_concepto_salarial to update in case it exists.
     */
    where: tipo_concepto_salarialWhereUniqueInput
    /**
     * In case the tipo_concepto_salarial found by the `where` argument doesn't exist, create a new tipo_concepto_salarial with this data.
     */
    create: XOR<tipo_concepto_salarialCreateInput, tipo_concepto_salarialUncheckedCreateInput>
    /**
     * In case the tipo_concepto_salarial was found with the provided `where` argument, update it with this data.
     */
    update: XOR<tipo_concepto_salarialUpdateInput, tipo_concepto_salarialUncheckedUpdateInput>
  }

  /**
   * tipo_concepto_salarial delete
   */
  export type tipo_concepto_salarialDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tipo_concepto_salarial
     */
    select?: tipo_concepto_salarialSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tipo_concepto_salarial
     */
    omit?: tipo_concepto_salarialOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tipo_concepto_salarialInclude<ExtArgs> | null
    /**
     * Filter which tipo_concepto_salarial to delete.
     */
    where: tipo_concepto_salarialWhereUniqueInput
  }

  /**
   * tipo_concepto_salarial deleteMany
   */
  export type tipo_concepto_salarialDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which tipo_concepto_salarials to delete
     */
    where?: tipo_concepto_salarialWhereInput
    /**
     * Limit how many tipo_concepto_salarials to delete.
     */
    limit?: number
  }

  /**
   * tipo_concepto_salarial.concepto_salarial
   */
  export type tipo_concepto_salarial$concepto_salarialArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the concepto_salarial
     */
    select?: concepto_salarialSelect<ExtArgs> | null
    /**
     * Omit specific fields from the concepto_salarial
     */
    omit?: concepto_salarialOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: concepto_salarialInclude<ExtArgs> | null
    where?: concepto_salarialWhereInput
    orderBy?: concepto_salarialOrderByWithRelationInput | concepto_salarialOrderByWithRelationInput[]
    cursor?: concepto_salarialWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Concepto_salarialScalarFieldEnum | Concepto_salarialScalarFieldEnum[]
  }

  /**
   * tipo_concepto_salarial without action
   */
  export type tipo_concepto_salarialDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tipo_concepto_salarial
     */
    select?: tipo_concepto_salarialSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tipo_concepto_salarial
     */
    omit?: tipo_concepto_salarialOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tipo_concepto_salarialInclude<ExtArgs> | null
  }


  /**
   * Model usuario
   */

  export type AggregateUsuario = {
    _count: UsuarioCountAggregateOutputType | null
    _avg: UsuarioAvgAggregateOutputType | null
    _sum: UsuarioSumAggregateOutputType | null
    _min: UsuarioMinAggregateOutputType | null
    _max: UsuarioMaxAggregateOutputType | null
  }

  export type UsuarioAvgAggregateOutputType = {
    id_usuario: number | null
    id_rol_usuario: number | null
    id_empleado: number | null
  }

  export type UsuarioSumAggregateOutputType = {
    id_usuario: number | null
    id_rol_usuario: number | null
    id_empleado: number | null
  }

  export type UsuarioMinAggregateOutputType = {
    id_usuario: number | null
    nombre_usuario: string | null
    estado: boolean | null
    clave: string | null
    id_rol_usuario: number | null
    id_empleado: number | null
  }

  export type UsuarioMaxAggregateOutputType = {
    id_usuario: number | null
    nombre_usuario: string | null
    estado: boolean | null
    clave: string | null
    id_rol_usuario: number | null
    id_empleado: number | null
  }

  export type UsuarioCountAggregateOutputType = {
    id_usuario: number
    nombre_usuario: number
    estado: number
    clave: number
    id_rol_usuario: number
    id_empleado: number
    _all: number
  }


  export type UsuarioAvgAggregateInputType = {
    id_usuario?: true
    id_rol_usuario?: true
    id_empleado?: true
  }

  export type UsuarioSumAggregateInputType = {
    id_usuario?: true
    id_rol_usuario?: true
    id_empleado?: true
  }

  export type UsuarioMinAggregateInputType = {
    id_usuario?: true
    nombre_usuario?: true
    estado?: true
    clave?: true
    id_rol_usuario?: true
    id_empleado?: true
  }

  export type UsuarioMaxAggregateInputType = {
    id_usuario?: true
    nombre_usuario?: true
    estado?: true
    clave?: true
    id_rol_usuario?: true
    id_empleado?: true
  }

  export type UsuarioCountAggregateInputType = {
    id_usuario?: true
    nombre_usuario?: true
    estado?: true
    clave?: true
    id_rol_usuario?: true
    id_empleado?: true
    _all?: true
  }

  export type UsuarioAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which usuario to aggregate.
     */
    where?: usuarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of usuarios to fetch.
     */
    orderBy?: usuarioOrderByWithRelationInput | usuarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: usuarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` usuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` usuarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned usuarios
    **/
    _count?: true | UsuarioCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: UsuarioAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: UsuarioSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UsuarioMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UsuarioMaxAggregateInputType
  }

  export type GetUsuarioAggregateType<T extends UsuarioAggregateArgs> = {
        [P in keyof T & keyof AggregateUsuario]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUsuario[P]>
      : GetScalarType<T[P], AggregateUsuario[P]>
  }




  export type usuarioGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: usuarioWhereInput
    orderBy?: usuarioOrderByWithAggregationInput | usuarioOrderByWithAggregationInput[]
    by: UsuarioScalarFieldEnum[] | UsuarioScalarFieldEnum
    having?: usuarioScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UsuarioCountAggregateInputType | true
    _avg?: UsuarioAvgAggregateInputType
    _sum?: UsuarioSumAggregateInputType
    _min?: UsuarioMinAggregateInputType
    _max?: UsuarioMaxAggregateInputType
  }

  export type UsuarioGroupByOutputType = {
    id_usuario: number
    nombre_usuario: string
    estado: boolean
    clave: string
    id_rol_usuario: number
    id_empleado: number
    _count: UsuarioCountAggregateOutputType | null
    _avg: UsuarioAvgAggregateOutputType | null
    _sum: UsuarioSumAggregateOutputType | null
    _min: UsuarioMinAggregateOutputType | null
    _max: UsuarioMaxAggregateOutputType | null
  }

  type GetUsuarioGroupByPayload<T extends usuarioGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UsuarioGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UsuarioGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UsuarioGroupByOutputType[P]>
            : GetScalarType<T[P], UsuarioGroupByOutputType[P]>
        }
      >
    >


  export type usuarioSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_usuario?: boolean
    nombre_usuario?: boolean
    estado?: boolean
    clave?: boolean
    id_rol_usuario?: boolean
    id_empleado?: boolean
    detalle_nomina?: boolean | usuario$detalle_nominaArgs<ExtArgs>
    registro_acceso?: boolean | usuario$registro_accesoArgs<ExtArgs>
    empleado?: boolean | empleadoDefaultArgs<ExtArgs>
    rol_usuario?: boolean | rol_usuarioDefaultArgs<ExtArgs>
    _count?: boolean | UsuarioCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["usuario"]>

  export type usuarioSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_usuario?: boolean
    nombre_usuario?: boolean
    estado?: boolean
    clave?: boolean
    id_rol_usuario?: boolean
    id_empleado?: boolean
    empleado?: boolean | empleadoDefaultArgs<ExtArgs>
    rol_usuario?: boolean | rol_usuarioDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["usuario"]>

  export type usuarioSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_usuario?: boolean
    nombre_usuario?: boolean
    estado?: boolean
    clave?: boolean
    id_rol_usuario?: boolean
    id_empleado?: boolean
    empleado?: boolean | empleadoDefaultArgs<ExtArgs>
    rol_usuario?: boolean | rol_usuarioDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["usuario"]>

  export type usuarioSelectScalar = {
    id_usuario?: boolean
    nombre_usuario?: boolean
    estado?: boolean
    clave?: boolean
    id_rol_usuario?: boolean
    id_empleado?: boolean
  }

  export type usuarioOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id_usuario" | "nombre_usuario" | "estado" | "clave" | "id_rol_usuario" | "id_empleado", ExtArgs["result"]["usuario"]>
  export type usuarioInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    detalle_nomina?: boolean | usuario$detalle_nominaArgs<ExtArgs>
    registro_acceso?: boolean | usuario$registro_accesoArgs<ExtArgs>
    empleado?: boolean | empleadoDefaultArgs<ExtArgs>
    rol_usuario?: boolean | rol_usuarioDefaultArgs<ExtArgs>
    _count?: boolean | UsuarioCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type usuarioIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    empleado?: boolean | empleadoDefaultArgs<ExtArgs>
    rol_usuario?: boolean | rol_usuarioDefaultArgs<ExtArgs>
  }
  export type usuarioIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    empleado?: boolean | empleadoDefaultArgs<ExtArgs>
    rol_usuario?: boolean | rol_usuarioDefaultArgs<ExtArgs>
  }

  export type $usuarioPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "usuario"
    objects: {
      detalle_nomina: Prisma.$detalle_nominaPayload<ExtArgs>[]
      registro_acceso: Prisma.$registro_accesoPayload<ExtArgs>[]
      empleado: Prisma.$empleadoPayload<ExtArgs>
      rol_usuario: Prisma.$rol_usuarioPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id_usuario: number
      nombre_usuario: string
      estado: boolean
      clave: string
      id_rol_usuario: number
      id_empleado: number
    }, ExtArgs["result"]["usuario"]>
    composites: {}
  }

  type usuarioGetPayload<S extends boolean | null | undefined | usuarioDefaultArgs> = $Result.GetResult<Prisma.$usuarioPayload, S>

  type usuarioCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<usuarioFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: UsuarioCountAggregateInputType | true
    }

  export interface usuarioDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['usuario'], meta: { name: 'usuario' } }
    /**
     * Find zero or one Usuario that matches the filter.
     * @param {usuarioFindUniqueArgs} args - Arguments to find a Usuario
     * @example
     * // Get one Usuario
     * const usuario = await prisma.usuario.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends usuarioFindUniqueArgs>(args: SelectSubset<T, usuarioFindUniqueArgs<ExtArgs>>): Prisma__usuarioClient<$Result.GetResult<Prisma.$usuarioPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Usuario that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {usuarioFindUniqueOrThrowArgs} args - Arguments to find a Usuario
     * @example
     * // Get one Usuario
     * const usuario = await prisma.usuario.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends usuarioFindUniqueOrThrowArgs>(args: SelectSubset<T, usuarioFindUniqueOrThrowArgs<ExtArgs>>): Prisma__usuarioClient<$Result.GetResult<Prisma.$usuarioPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Usuario that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usuarioFindFirstArgs} args - Arguments to find a Usuario
     * @example
     * // Get one Usuario
     * const usuario = await prisma.usuario.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends usuarioFindFirstArgs>(args?: SelectSubset<T, usuarioFindFirstArgs<ExtArgs>>): Prisma__usuarioClient<$Result.GetResult<Prisma.$usuarioPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Usuario that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usuarioFindFirstOrThrowArgs} args - Arguments to find a Usuario
     * @example
     * // Get one Usuario
     * const usuario = await prisma.usuario.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends usuarioFindFirstOrThrowArgs>(args?: SelectSubset<T, usuarioFindFirstOrThrowArgs<ExtArgs>>): Prisma__usuarioClient<$Result.GetResult<Prisma.$usuarioPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Usuarios that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usuarioFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Usuarios
     * const usuarios = await prisma.usuario.findMany()
     * 
     * // Get first 10 Usuarios
     * const usuarios = await prisma.usuario.findMany({ take: 10 })
     * 
     * // Only select the `id_usuario`
     * const usuarioWithId_usuarioOnly = await prisma.usuario.findMany({ select: { id_usuario: true } })
     * 
     */
    findMany<T extends usuarioFindManyArgs>(args?: SelectSubset<T, usuarioFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$usuarioPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Usuario.
     * @param {usuarioCreateArgs} args - Arguments to create a Usuario.
     * @example
     * // Create one Usuario
     * const Usuario = await prisma.usuario.create({
     *   data: {
     *     // ... data to create a Usuario
     *   }
     * })
     * 
     */
    create<T extends usuarioCreateArgs>(args: SelectSubset<T, usuarioCreateArgs<ExtArgs>>): Prisma__usuarioClient<$Result.GetResult<Prisma.$usuarioPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Usuarios.
     * @param {usuarioCreateManyArgs} args - Arguments to create many Usuarios.
     * @example
     * // Create many Usuarios
     * const usuario = await prisma.usuario.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends usuarioCreateManyArgs>(args?: SelectSubset<T, usuarioCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Usuarios and returns the data saved in the database.
     * @param {usuarioCreateManyAndReturnArgs} args - Arguments to create many Usuarios.
     * @example
     * // Create many Usuarios
     * const usuario = await prisma.usuario.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Usuarios and only return the `id_usuario`
     * const usuarioWithId_usuarioOnly = await prisma.usuario.createManyAndReturn({
     *   select: { id_usuario: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends usuarioCreateManyAndReturnArgs>(args?: SelectSubset<T, usuarioCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$usuarioPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Usuario.
     * @param {usuarioDeleteArgs} args - Arguments to delete one Usuario.
     * @example
     * // Delete one Usuario
     * const Usuario = await prisma.usuario.delete({
     *   where: {
     *     // ... filter to delete one Usuario
     *   }
     * })
     * 
     */
    delete<T extends usuarioDeleteArgs>(args: SelectSubset<T, usuarioDeleteArgs<ExtArgs>>): Prisma__usuarioClient<$Result.GetResult<Prisma.$usuarioPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Usuario.
     * @param {usuarioUpdateArgs} args - Arguments to update one Usuario.
     * @example
     * // Update one Usuario
     * const usuario = await prisma.usuario.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends usuarioUpdateArgs>(args: SelectSubset<T, usuarioUpdateArgs<ExtArgs>>): Prisma__usuarioClient<$Result.GetResult<Prisma.$usuarioPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Usuarios.
     * @param {usuarioDeleteManyArgs} args - Arguments to filter Usuarios to delete.
     * @example
     * // Delete a few Usuarios
     * const { count } = await prisma.usuario.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends usuarioDeleteManyArgs>(args?: SelectSubset<T, usuarioDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Usuarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usuarioUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Usuarios
     * const usuario = await prisma.usuario.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends usuarioUpdateManyArgs>(args: SelectSubset<T, usuarioUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Usuarios and returns the data updated in the database.
     * @param {usuarioUpdateManyAndReturnArgs} args - Arguments to update many Usuarios.
     * @example
     * // Update many Usuarios
     * const usuario = await prisma.usuario.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Usuarios and only return the `id_usuario`
     * const usuarioWithId_usuarioOnly = await prisma.usuario.updateManyAndReturn({
     *   select: { id_usuario: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends usuarioUpdateManyAndReturnArgs>(args: SelectSubset<T, usuarioUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$usuarioPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Usuario.
     * @param {usuarioUpsertArgs} args - Arguments to update or create a Usuario.
     * @example
     * // Update or create a Usuario
     * const usuario = await prisma.usuario.upsert({
     *   create: {
     *     // ... data to create a Usuario
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Usuario we want to update
     *   }
     * })
     */
    upsert<T extends usuarioUpsertArgs>(args: SelectSubset<T, usuarioUpsertArgs<ExtArgs>>): Prisma__usuarioClient<$Result.GetResult<Prisma.$usuarioPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Usuarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usuarioCountArgs} args - Arguments to filter Usuarios to count.
     * @example
     * // Count the number of Usuarios
     * const count = await prisma.usuario.count({
     *   where: {
     *     // ... the filter for the Usuarios we want to count
     *   }
     * })
    **/
    count<T extends usuarioCountArgs>(
      args?: Subset<T, usuarioCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UsuarioCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Usuario.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UsuarioAggregateArgs>(args: Subset<T, UsuarioAggregateArgs>): Prisma.PrismaPromise<GetUsuarioAggregateType<T>>

    /**
     * Group by Usuario.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usuarioGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends usuarioGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: usuarioGroupByArgs['orderBy'] }
        : { orderBy?: usuarioGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, usuarioGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUsuarioGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the usuario model
   */
  readonly fields: usuarioFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for usuario.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__usuarioClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    detalle_nomina<T extends usuario$detalle_nominaArgs<ExtArgs> = {}>(args?: Subset<T, usuario$detalle_nominaArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$detalle_nominaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    registro_acceso<T extends usuario$registro_accesoArgs<ExtArgs> = {}>(args?: Subset<T, usuario$registro_accesoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$registro_accesoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    empleado<T extends empleadoDefaultArgs<ExtArgs> = {}>(args?: Subset<T, empleadoDefaultArgs<ExtArgs>>): Prisma__empleadoClient<$Result.GetResult<Prisma.$empleadoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    rol_usuario<T extends rol_usuarioDefaultArgs<ExtArgs> = {}>(args?: Subset<T, rol_usuarioDefaultArgs<ExtArgs>>): Prisma__rol_usuarioClient<$Result.GetResult<Prisma.$rol_usuarioPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the usuario model
   */
  interface usuarioFieldRefs {
    readonly id_usuario: FieldRef<"usuario", 'Int'>
    readonly nombre_usuario: FieldRef<"usuario", 'String'>
    readonly estado: FieldRef<"usuario", 'Boolean'>
    readonly clave: FieldRef<"usuario", 'String'>
    readonly id_rol_usuario: FieldRef<"usuario", 'Int'>
    readonly id_empleado: FieldRef<"usuario", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * usuario findUnique
   */
  export type usuarioFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the usuario
     */
    select?: usuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the usuario
     */
    omit?: usuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usuarioInclude<ExtArgs> | null
    /**
     * Filter, which usuario to fetch.
     */
    where: usuarioWhereUniqueInput
  }

  /**
   * usuario findUniqueOrThrow
   */
  export type usuarioFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the usuario
     */
    select?: usuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the usuario
     */
    omit?: usuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usuarioInclude<ExtArgs> | null
    /**
     * Filter, which usuario to fetch.
     */
    where: usuarioWhereUniqueInput
  }

  /**
   * usuario findFirst
   */
  export type usuarioFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the usuario
     */
    select?: usuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the usuario
     */
    omit?: usuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usuarioInclude<ExtArgs> | null
    /**
     * Filter, which usuario to fetch.
     */
    where?: usuarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of usuarios to fetch.
     */
    orderBy?: usuarioOrderByWithRelationInput | usuarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for usuarios.
     */
    cursor?: usuarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` usuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` usuarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of usuarios.
     */
    distinct?: UsuarioScalarFieldEnum | UsuarioScalarFieldEnum[]
  }

  /**
   * usuario findFirstOrThrow
   */
  export type usuarioFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the usuario
     */
    select?: usuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the usuario
     */
    omit?: usuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usuarioInclude<ExtArgs> | null
    /**
     * Filter, which usuario to fetch.
     */
    where?: usuarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of usuarios to fetch.
     */
    orderBy?: usuarioOrderByWithRelationInput | usuarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for usuarios.
     */
    cursor?: usuarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` usuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` usuarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of usuarios.
     */
    distinct?: UsuarioScalarFieldEnum | UsuarioScalarFieldEnum[]
  }

  /**
   * usuario findMany
   */
  export type usuarioFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the usuario
     */
    select?: usuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the usuario
     */
    omit?: usuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usuarioInclude<ExtArgs> | null
    /**
     * Filter, which usuarios to fetch.
     */
    where?: usuarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of usuarios to fetch.
     */
    orderBy?: usuarioOrderByWithRelationInput | usuarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing usuarios.
     */
    cursor?: usuarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` usuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` usuarios.
     */
    skip?: number
    distinct?: UsuarioScalarFieldEnum | UsuarioScalarFieldEnum[]
  }

  /**
   * usuario create
   */
  export type usuarioCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the usuario
     */
    select?: usuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the usuario
     */
    omit?: usuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usuarioInclude<ExtArgs> | null
    /**
     * The data needed to create a usuario.
     */
    data: XOR<usuarioCreateInput, usuarioUncheckedCreateInput>
  }

  /**
   * usuario createMany
   */
  export type usuarioCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many usuarios.
     */
    data: usuarioCreateManyInput | usuarioCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * usuario createManyAndReturn
   */
  export type usuarioCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the usuario
     */
    select?: usuarioSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the usuario
     */
    omit?: usuarioOmit<ExtArgs> | null
    /**
     * The data used to create many usuarios.
     */
    data: usuarioCreateManyInput | usuarioCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usuarioIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * usuario update
   */
  export type usuarioUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the usuario
     */
    select?: usuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the usuario
     */
    omit?: usuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usuarioInclude<ExtArgs> | null
    /**
     * The data needed to update a usuario.
     */
    data: XOR<usuarioUpdateInput, usuarioUncheckedUpdateInput>
    /**
     * Choose, which usuario to update.
     */
    where: usuarioWhereUniqueInput
  }

  /**
   * usuario updateMany
   */
  export type usuarioUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update usuarios.
     */
    data: XOR<usuarioUpdateManyMutationInput, usuarioUncheckedUpdateManyInput>
    /**
     * Filter which usuarios to update
     */
    where?: usuarioWhereInput
    /**
     * Limit how many usuarios to update.
     */
    limit?: number
  }

  /**
   * usuario updateManyAndReturn
   */
  export type usuarioUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the usuario
     */
    select?: usuarioSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the usuario
     */
    omit?: usuarioOmit<ExtArgs> | null
    /**
     * The data used to update usuarios.
     */
    data: XOR<usuarioUpdateManyMutationInput, usuarioUncheckedUpdateManyInput>
    /**
     * Filter which usuarios to update
     */
    where?: usuarioWhereInput
    /**
     * Limit how many usuarios to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usuarioIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * usuario upsert
   */
  export type usuarioUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the usuario
     */
    select?: usuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the usuario
     */
    omit?: usuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usuarioInclude<ExtArgs> | null
    /**
     * The filter to search for the usuario to update in case it exists.
     */
    where: usuarioWhereUniqueInput
    /**
     * In case the usuario found by the `where` argument doesn't exist, create a new usuario with this data.
     */
    create: XOR<usuarioCreateInput, usuarioUncheckedCreateInput>
    /**
     * In case the usuario was found with the provided `where` argument, update it with this data.
     */
    update: XOR<usuarioUpdateInput, usuarioUncheckedUpdateInput>
  }

  /**
   * usuario delete
   */
  export type usuarioDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the usuario
     */
    select?: usuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the usuario
     */
    omit?: usuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usuarioInclude<ExtArgs> | null
    /**
     * Filter which usuario to delete.
     */
    where: usuarioWhereUniqueInput
  }

  /**
   * usuario deleteMany
   */
  export type usuarioDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which usuarios to delete
     */
    where?: usuarioWhereInput
    /**
     * Limit how many usuarios to delete.
     */
    limit?: number
  }

  /**
   * usuario.detalle_nomina
   */
  export type usuario$detalle_nominaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the detalle_nomina
     */
    select?: detalle_nominaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the detalle_nomina
     */
    omit?: detalle_nominaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: detalle_nominaInclude<ExtArgs> | null
    where?: detalle_nominaWhereInput
    orderBy?: detalle_nominaOrderByWithRelationInput | detalle_nominaOrderByWithRelationInput[]
    cursor?: detalle_nominaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Detalle_nominaScalarFieldEnum | Detalle_nominaScalarFieldEnum[]
  }

  /**
   * usuario.registro_acceso
   */
  export type usuario$registro_accesoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the registro_acceso
     */
    select?: registro_accesoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the registro_acceso
     */
    omit?: registro_accesoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: registro_accesoInclude<ExtArgs> | null
    where?: registro_accesoWhereInput
    orderBy?: registro_accesoOrderByWithRelationInput | registro_accesoOrderByWithRelationInput[]
    cursor?: registro_accesoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Registro_accesoScalarFieldEnum | Registro_accesoScalarFieldEnum[]
  }

  /**
   * usuario without action
   */
  export type usuarioDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the usuario
     */
    select?: usuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the usuario
     */
    omit?: usuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usuarioInclude<ExtArgs> | null
  }


  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const CargoScalarFieldEnum: {
    id_cargo: 'id_cargo',
    nombre_cargo: 'nombre_cargo',
    departamento_nombre: 'departamento_nombre',
    id_departamento: 'id_departamento',
    Activo: 'Activo',
    id_categoria_salarial: 'id_categoria_salarial'
  };

  export type CargoScalarFieldEnum = (typeof CargoScalarFieldEnum)[keyof typeof CargoScalarFieldEnum]


  export const Categoria_salarialScalarFieldEnum: {
    id_categoria_salarial: 'id_categoria_salarial',
    monto: 'monto'
  };

  export type Categoria_salarialScalarFieldEnum = (typeof Categoria_salarialScalarFieldEnum)[keyof typeof Categoria_salarialScalarFieldEnum]


  export const Concepto_empleadoScalarFieldEnum: {
    id_concepto_empleado: 'id_concepto_empleado',
    monto: 'monto',
    id_empleado: 'id_empleado',
    observacion: 'observacion',
    activo: 'activo',
    id_concepto: 'id_concepto'
  };

  export type Concepto_empleadoScalarFieldEnum = (typeof Concepto_empleadoScalarFieldEnum)[keyof typeof Concepto_empleadoScalarFieldEnum]


  export const Concepto_salarialScalarFieldEnum: {
    id_concepto: 'id_concepto',
    nombre: 'nombre',
    recurrente: 'recurrente',
    afecta_IPS: 'afecta_IPS',
    afecta_aguinaldo: 'afecta_aguinaldo',
    id_concepto_salarial: 'id_concepto_salarial'
  };

  export type Concepto_salarialScalarFieldEnum = (typeof Concepto_salarialScalarFieldEnum)[keyof typeof Concepto_salarialScalarFieldEnum]


  export const DepartamentoScalarFieldEnum: {
    id_departamento: 'id_departamento',
    nombre: 'nombre',
    ubicacion: 'ubicacion'
  };

  export type DepartamentoScalarFieldEnum = (typeof DepartamentoScalarFieldEnum)[keyof typeof DepartamentoScalarFieldEnum]


  export const Detalle_nominaScalarFieldEnum: {
    id_detalle: 'id_detalle',
    total_descuentos: 'total_descuentos',
    total_bonificaciones: 'total_bonificaciones',
    neto_a_cobrar: 'neto_a_cobrar',
    creado_por: 'creado_por',
    id_nomina: 'id_nomina',
    id_empleado: 'id_empleado'
  };

  export type Detalle_nominaScalarFieldEnum = (typeof Detalle_nominaScalarFieldEnum)[keyof typeof Detalle_nominaScalarFieldEnum]


  export const Detalle_nomina_conceptoScalarFieldEnum: {
    id_detalle_conceptos: 'id_detalle_conceptos',
    monto: 'monto',
    id_concepto: 'id_concepto',
    id_detalle: 'id_detalle',
    origen: 'origen'
  };

  export type Detalle_nomina_conceptoScalarFieldEnum = (typeof Detalle_nomina_conceptoScalarFieldEnum)[keyof typeof Detalle_nomina_conceptoScalarFieldEnum]


  export const EmpleadoScalarFieldEnum: {
    id_empleado: 'id_empleado',
    nombre: 'nombre',
    cedula: 'cedula',
    apellido: 'apellido',
    fecha_nacimiento: 'fecha_nacimiento',
    correo: 'correo',
    fecha_ingreso: 'fecha_ingreso',
    telefono: 'telefono',
    fecha_egreso: 'fecha_egreso',
    direccion: 'direccion',
    afiliado_IPS: 'afiliado_IPS',
    id_estado_civil: 'id_estado_civil'
  };

  export type EmpleadoScalarFieldEnum = (typeof EmpleadoScalarFieldEnum)[keyof typeof EmpleadoScalarFieldEnum]


  export const Estado_civilScalarFieldEnum: {
    id_estado: 'id_estado',
    descripcion: 'descripcion'
  };

  export type Estado_civilScalarFieldEnum = (typeof Estado_civilScalarFieldEnum)[keyof typeof Estado_civilScalarFieldEnum]


  export const HijoScalarFieldEnum: {
    id_hijo: 'id_hijo',
    nombre: 'nombre',
    certificado_vida_residencia: 'certificado_vida_residencia',
    fecha_vencimiento_certificado: 'fecha_vencimiento_certificado',
    id_empleado: 'id_empleado',
    discapacidad: 'discapacidad',
    fecha_nacimiento: 'fecha_nacimiento',
    certificado_nacimiento: 'certificado_nacimiento'
  };

  export type HijoScalarFieldEnum = (typeof HijoScalarFieldEnum)[keyof typeof HijoScalarFieldEnum]


  export const Historial_cargoScalarFieldEnum: {
    id_historial: 'id_historial',
    id_empleado: 'id_empleado',
    Fecha_Inicio: 'Fecha_Inicio',
    fecha_fin: 'fecha_fin',
    Salario_Asignado: 'Salario_Asignado',
    id_cargo: 'id_cargo'
  };

  export type Historial_cargoScalarFieldEnum = (typeof Historial_cargoScalarFieldEnum)[keyof typeof Historial_cargoScalarFieldEnum]


  export const NominaScalarFieldEnum: {
    id_nomina: 'id_nomina',
    anho: 'anho',
    fecha_generacion: 'fecha_generacion',
    estado: 'estado',
    mes: 'mes'
  };

  export type NominaScalarFieldEnum = (typeof NominaScalarFieldEnum)[keyof typeof NominaScalarFieldEnum]


  export const Registro_accesoScalarFieldEnum: {
    id_registro: 'id_registro',
    id_usuario: 'id_usuario',
    ip_origen: 'ip_origen',
    accion: 'accion',
    fecha_hora: 'fecha_hora'
  };

  export type Registro_accesoScalarFieldEnum = (typeof Registro_accesoScalarFieldEnum)[keyof typeof Registro_accesoScalarFieldEnum]


  export const Rol_usuarioScalarFieldEnum: {
    id_rol_usuario: 'id_rol_usuario',
    nombre: 'nombre',
    descripcion_rol: 'descripcion_rol'
  };

  export type Rol_usuarioScalarFieldEnum = (typeof Rol_usuarioScalarFieldEnum)[keyof typeof Rol_usuarioScalarFieldEnum]


  export const Tipo_concepto_salarialScalarFieldEnum: {
    id_concepto_salarial: 'id_concepto_salarial',
    descripcion: 'descripcion'
  };

  export type Tipo_concepto_salarialScalarFieldEnum = (typeof Tipo_concepto_salarialScalarFieldEnum)[keyof typeof Tipo_concepto_salarialScalarFieldEnum]


  export const UsuarioScalarFieldEnum: {
    id_usuario: 'id_usuario',
    nombre_usuario: 'nombre_usuario',
    estado: 'estado',
    clave: 'clave',
    id_rol_usuario: 'id_rol_usuario',
    id_empleado: 'id_empleado'
  };

  export type UsuarioScalarFieldEnum = (typeof UsuarioScalarFieldEnum)[keyof typeof UsuarioScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const QueryMode: {
    default: 'default',
    insensitive: 'insensitive'
  };

  export type QueryMode = (typeof QueryMode)[keyof typeof QueryMode]


  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


  /**
   * Field references
   */


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'Int[]'
   */
  export type ListIntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int[]'>
    


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'String[]'
   */
  export type ListStringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String[]'>
    


  /**
   * Reference to a field of type 'Boolean'
   */
  export type BooleanFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Boolean'>
    


  /**
   * Reference to a field of type 'Decimal'
   */
  export type DecimalFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Decimal'>
    


  /**
   * Reference to a field of type 'Decimal[]'
   */
  export type ListDecimalFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Decimal[]'>
    


  /**
   * Reference to a field of type 'DateTime'
   */
  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>
    


  /**
   * Reference to a field of type 'DateTime[]'
   */
  export type ListDateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime[]'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    


  /**
   * Reference to a field of type 'Float[]'
   */
  export type ListFloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float[]'>
    
  /**
   * Deep Input Types
   */


  export type cargoWhereInput = {
    AND?: cargoWhereInput | cargoWhereInput[]
    OR?: cargoWhereInput[]
    NOT?: cargoWhereInput | cargoWhereInput[]
    id_cargo?: IntFilter<"cargo"> | number
    nombre_cargo?: StringFilter<"cargo"> | string
    departamento_nombre?: StringFilter<"cargo"> | string
    id_departamento?: IntFilter<"cargo"> | number
    Activo?: BoolFilter<"cargo"> | boolean
    id_categoria_salarial?: IntFilter<"cargo"> | number
    categoria_salarial?: XOR<Categoria_salarialScalarRelationFilter, categoria_salarialWhereInput>
    departamento_ref?: XOR<DepartamentoScalarRelationFilter, departamentoWhereInput>
    historial_cargo?: Historial_cargoListRelationFilter
  }

  export type cargoOrderByWithRelationInput = {
    id_cargo?: SortOrder
    nombre_cargo?: SortOrder
    departamento_nombre?: SortOrder
    id_departamento?: SortOrder
    Activo?: SortOrder
    id_categoria_salarial?: SortOrder
    categoria_salarial?: categoria_salarialOrderByWithRelationInput
    departamento_ref?: departamentoOrderByWithRelationInput
    historial_cargo?: historial_cargoOrderByRelationAggregateInput
  }

  export type cargoWhereUniqueInput = Prisma.AtLeast<{
    id_cargo?: number
    AND?: cargoWhereInput | cargoWhereInput[]
    OR?: cargoWhereInput[]
    NOT?: cargoWhereInput | cargoWhereInput[]
    nombre_cargo?: StringFilter<"cargo"> | string
    departamento_nombre?: StringFilter<"cargo"> | string
    id_departamento?: IntFilter<"cargo"> | number
    Activo?: BoolFilter<"cargo"> | boolean
    id_categoria_salarial?: IntFilter<"cargo"> | number
    categoria_salarial?: XOR<Categoria_salarialScalarRelationFilter, categoria_salarialWhereInput>
    departamento_ref?: XOR<DepartamentoScalarRelationFilter, departamentoWhereInput>
    historial_cargo?: Historial_cargoListRelationFilter
  }, "id_cargo">

  export type cargoOrderByWithAggregationInput = {
    id_cargo?: SortOrder
    nombre_cargo?: SortOrder
    departamento_nombre?: SortOrder
    id_departamento?: SortOrder
    Activo?: SortOrder
    id_categoria_salarial?: SortOrder
    _count?: cargoCountOrderByAggregateInput
    _avg?: cargoAvgOrderByAggregateInput
    _max?: cargoMaxOrderByAggregateInput
    _min?: cargoMinOrderByAggregateInput
    _sum?: cargoSumOrderByAggregateInput
  }

  export type cargoScalarWhereWithAggregatesInput = {
    AND?: cargoScalarWhereWithAggregatesInput | cargoScalarWhereWithAggregatesInput[]
    OR?: cargoScalarWhereWithAggregatesInput[]
    NOT?: cargoScalarWhereWithAggregatesInput | cargoScalarWhereWithAggregatesInput[]
    id_cargo?: IntWithAggregatesFilter<"cargo"> | number
    nombre_cargo?: StringWithAggregatesFilter<"cargo"> | string
    departamento_nombre?: StringWithAggregatesFilter<"cargo"> | string
    id_departamento?: IntWithAggregatesFilter<"cargo"> | number
    Activo?: BoolWithAggregatesFilter<"cargo"> | boolean
    id_categoria_salarial?: IntWithAggregatesFilter<"cargo"> | number
  }

  export type categoria_salarialWhereInput = {
    AND?: categoria_salarialWhereInput | categoria_salarialWhereInput[]
    OR?: categoria_salarialWhereInput[]
    NOT?: categoria_salarialWhereInput | categoria_salarialWhereInput[]
    id_categoria_salarial?: IntFilter<"categoria_salarial"> | number
    monto?: IntFilter<"categoria_salarial"> | number
    cargo?: CargoListRelationFilter
  }

  export type categoria_salarialOrderByWithRelationInput = {
    id_categoria_salarial?: SortOrder
    monto?: SortOrder
    cargo?: cargoOrderByRelationAggregateInput
  }

  export type categoria_salarialWhereUniqueInput = Prisma.AtLeast<{
    id_categoria_salarial?: number
    AND?: categoria_salarialWhereInput | categoria_salarialWhereInput[]
    OR?: categoria_salarialWhereInput[]
    NOT?: categoria_salarialWhereInput | categoria_salarialWhereInput[]
    monto?: IntFilter<"categoria_salarial"> | number
    cargo?: CargoListRelationFilter
  }, "id_categoria_salarial">

  export type categoria_salarialOrderByWithAggregationInput = {
    id_categoria_salarial?: SortOrder
    monto?: SortOrder
    _count?: categoria_salarialCountOrderByAggregateInput
    _avg?: categoria_salarialAvgOrderByAggregateInput
    _max?: categoria_salarialMaxOrderByAggregateInput
    _min?: categoria_salarialMinOrderByAggregateInput
    _sum?: categoria_salarialSumOrderByAggregateInput
  }

  export type categoria_salarialScalarWhereWithAggregatesInput = {
    AND?: categoria_salarialScalarWhereWithAggregatesInput | categoria_salarialScalarWhereWithAggregatesInput[]
    OR?: categoria_salarialScalarWhereWithAggregatesInput[]
    NOT?: categoria_salarialScalarWhereWithAggregatesInput | categoria_salarialScalarWhereWithAggregatesInput[]
    id_categoria_salarial?: IntWithAggregatesFilter<"categoria_salarial"> | number
    monto?: IntWithAggregatesFilter<"categoria_salarial"> | number
  }

  export type concepto_empleadoWhereInput = {
    AND?: concepto_empleadoWhereInput | concepto_empleadoWhereInput[]
    OR?: concepto_empleadoWhereInput[]
    NOT?: concepto_empleadoWhereInput | concepto_empleadoWhereInput[]
    id_concepto_empleado?: IntFilter<"concepto_empleado"> | number
    monto?: DecimalFilter<"concepto_empleado"> | Decimal | DecimalJsLike | number | string
    id_empleado?: IntFilter<"concepto_empleado"> | number
    observacion?: StringFilter<"concepto_empleado"> | string
    activo?: BoolFilter<"concepto_empleado"> | boolean
    id_concepto?: IntFilter<"concepto_empleado"> | number
    concepto_salarial?: XOR<Concepto_salarialScalarRelationFilter, concepto_salarialWhereInput>
    empleado?: XOR<EmpleadoScalarRelationFilter, empleadoWhereInput>
  }

  export type concepto_empleadoOrderByWithRelationInput = {
    id_concepto_empleado?: SortOrder
    monto?: SortOrder
    id_empleado?: SortOrder
    observacion?: SortOrder
    activo?: SortOrder
    id_concepto?: SortOrder
    concepto_salarial?: concepto_salarialOrderByWithRelationInput
    empleado?: empleadoOrderByWithRelationInput
  }

  export type concepto_empleadoWhereUniqueInput = Prisma.AtLeast<{
    id_concepto_empleado?: number
    AND?: concepto_empleadoWhereInput | concepto_empleadoWhereInput[]
    OR?: concepto_empleadoWhereInput[]
    NOT?: concepto_empleadoWhereInput | concepto_empleadoWhereInput[]
    monto?: DecimalFilter<"concepto_empleado"> | Decimal | DecimalJsLike | number | string
    id_empleado?: IntFilter<"concepto_empleado"> | number
    observacion?: StringFilter<"concepto_empleado"> | string
    activo?: BoolFilter<"concepto_empleado"> | boolean
    id_concepto?: IntFilter<"concepto_empleado"> | number
    concepto_salarial?: XOR<Concepto_salarialScalarRelationFilter, concepto_salarialWhereInput>
    empleado?: XOR<EmpleadoScalarRelationFilter, empleadoWhereInput>
  }, "id_concepto_empleado">

  export type concepto_empleadoOrderByWithAggregationInput = {
    id_concepto_empleado?: SortOrder
    monto?: SortOrder
    id_empleado?: SortOrder
    observacion?: SortOrder
    activo?: SortOrder
    id_concepto?: SortOrder
    _count?: concepto_empleadoCountOrderByAggregateInput
    _avg?: concepto_empleadoAvgOrderByAggregateInput
    _max?: concepto_empleadoMaxOrderByAggregateInput
    _min?: concepto_empleadoMinOrderByAggregateInput
    _sum?: concepto_empleadoSumOrderByAggregateInput
  }

  export type concepto_empleadoScalarWhereWithAggregatesInput = {
    AND?: concepto_empleadoScalarWhereWithAggregatesInput | concepto_empleadoScalarWhereWithAggregatesInput[]
    OR?: concepto_empleadoScalarWhereWithAggregatesInput[]
    NOT?: concepto_empleadoScalarWhereWithAggregatesInput | concepto_empleadoScalarWhereWithAggregatesInput[]
    id_concepto_empleado?: IntWithAggregatesFilter<"concepto_empleado"> | number
    monto?: DecimalWithAggregatesFilter<"concepto_empleado"> | Decimal | DecimalJsLike | number | string
    id_empleado?: IntWithAggregatesFilter<"concepto_empleado"> | number
    observacion?: StringWithAggregatesFilter<"concepto_empleado"> | string
    activo?: BoolWithAggregatesFilter<"concepto_empleado"> | boolean
    id_concepto?: IntWithAggregatesFilter<"concepto_empleado"> | number
  }

  export type concepto_salarialWhereInput = {
    AND?: concepto_salarialWhereInput | concepto_salarialWhereInput[]
    OR?: concepto_salarialWhereInput[]
    NOT?: concepto_salarialWhereInput | concepto_salarialWhereInput[]
    id_concepto?: IntFilter<"concepto_salarial"> | number
    nombre?: StringFilter<"concepto_salarial"> | string
    recurrente?: BoolFilter<"concepto_salarial"> | boolean
    afecta_IPS?: BoolFilter<"concepto_salarial"> | boolean
    afecta_aguinaldo?: BoolFilter<"concepto_salarial"> | boolean
    id_concepto_salarial?: IntFilter<"concepto_salarial"> | number
    concepto_empleado?: Concepto_empleadoListRelationFilter
    tipo_concepto_salarial?: XOR<Tipo_concepto_salarialScalarRelationFilter, tipo_concepto_salarialWhereInput>
    detalle_nomina_concepto?: Detalle_nomina_conceptoListRelationFilter
  }

  export type concepto_salarialOrderByWithRelationInput = {
    id_concepto?: SortOrder
    nombre?: SortOrder
    recurrente?: SortOrder
    afecta_IPS?: SortOrder
    afecta_aguinaldo?: SortOrder
    id_concepto_salarial?: SortOrder
    concepto_empleado?: concepto_empleadoOrderByRelationAggregateInput
    tipo_concepto_salarial?: tipo_concepto_salarialOrderByWithRelationInput
    detalle_nomina_concepto?: detalle_nomina_conceptoOrderByRelationAggregateInput
  }

  export type concepto_salarialWhereUniqueInput = Prisma.AtLeast<{
    id_concepto?: number
    AND?: concepto_salarialWhereInput | concepto_salarialWhereInput[]
    OR?: concepto_salarialWhereInput[]
    NOT?: concepto_salarialWhereInput | concepto_salarialWhereInput[]
    nombre?: StringFilter<"concepto_salarial"> | string
    recurrente?: BoolFilter<"concepto_salarial"> | boolean
    afecta_IPS?: BoolFilter<"concepto_salarial"> | boolean
    afecta_aguinaldo?: BoolFilter<"concepto_salarial"> | boolean
    id_concepto_salarial?: IntFilter<"concepto_salarial"> | number
    concepto_empleado?: Concepto_empleadoListRelationFilter
    tipo_concepto_salarial?: XOR<Tipo_concepto_salarialScalarRelationFilter, tipo_concepto_salarialWhereInput>
    detalle_nomina_concepto?: Detalle_nomina_conceptoListRelationFilter
  }, "id_concepto">

  export type concepto_salarialOrderByWithAggregationInput = {
    id_concepto?: SortOrder
    nombre?: SortOrder
    recurrente?: SortOrder
    afecta_IPS?: SortOrder
    afecta_aguinaldo?: SortOrder
    id_concepto_salarial?: SortOrder
    _count?: concepto_salarialCountOrderByAggregateInput
    _avg?: concepto_salarialAvgOrderByAggregateInput
    _max?: concepto_salarialMaxOrderByAggregateInput
    _min?: concepto_salarialMinOrderByAggregateInput
    _sum?: concepto_salarialSumOrderByAggregateInput
  }

  export type concepto_salarialScalarWhereWithAggregatesInput = {
    AND?: concepto_salarialScalarWhereWithAggregatesInput | concepto_salarialScalarWhereWithAggregatesInput[]
    OR?: concepto_salarialScalarWhereWithAggregatesInput[]
    NOT?: concepto_salarialScalarWhereWithAggregatesInput | concepto_salarialScalarWhereWithAggregatesInput[]
    id_concepto?: IntWithAggregatesFilter<"concepto_salarial"> | number
    nombre?: StringWithAggregatesFilter<"concepto_salarial"> | string
    recurrente?: BoolWithAggregatesFilter<"concepto_salarial"> | boolean
    afecta_IPS?: BoolWithAggregatesFilter<"concepto_salarial"> | boolean
    afecta_aguinaldo?: BoolWithAggregatesFilter<"concepto_salarial"> | boolean
    id_concepto_salarial?: IntWithAggregatesFilter<"concepto_salarial"> | number
  }

  export type departamentoWhereInput = {
    AND?: departamentoWhereInput | departamentoWhereInput[]
    OR?: departamentoWhereInput[]
    NOT?: departamentoWhereInput | departamentoWhereInput[]
    id_departamento?: IntFilter<"departamento"> | number
    nombre?: StringFilter<"departamento"> | string
    ubicacion?: StringFilter<"departamento"> | string
    cargo?: CargoListRelationFilter
  }

  export type departamentoOrderByWithRelationInput = {
    id_departamento?: SortOrder
    nombre?: SortOrder
    ubicacion?: SortOrder
    cargo?: cargoOrderByRelationAggregateInput
  }

  export type departamentoWhereUniqueInput = Prisma.AtLeast<{
    id_departamento?: number
    AND?: departamentoWhereInput | departamentoWhereInput[]
    OR?: departamentoWhereInput[]
    NOT?: departamentoWhereInput | departamentoWhereInput[]
    nombre?: StringFilter<"departamento"> | string
    ubicacion?: StringFilter<"departamento"> | string
    cargo?: CargoListRelationFilter
  }, "id_departamento">

  export type departamentoOrderByWithAggregationInput = {
    id_departamento?: SortOrder
    nombre?: SortOrder
    ubicacion?: SortOrder
    _count?: departamentoCountOrderByAggregateInput
    _avg?: departamentoAvgOrderByAggregateInput
    _max?: departamentoMaxOrderByAggregateInput
    _min?: departamentoMinOrderByAggregateInput
    _sum?: departamentoSumOrderByAggregateInput
  }

  export type departamentoScalarWhereWithAggregatesInput = {
    AND?: departamentoScalarWhereWithAggregatesInput | departamentoScalarWhereWithAggregatesInput[]
    OR?: departamentoScalarWhereWithAggregatesInput[]
    NOT?: departamentoScalarWhereWithAggregatesInput | departamentoScalarWhereWithAggregatesInput[]
    id_departamento?: IntWithAggregatesFilter<"departamento"> | number
    nombre?: StringWithAggregatesFilter<"departamento"> | string
    ubicacion?: StringWithAggregatesFilter<"departamento"> | string
  }

  export type detalle_nominaWhereInput = {
    AND?: detalle_nominaWhereInput | detalle_nominaWhereInput[]
    OR?: detalle_nominaWhereInput[]
    NOT?: detalle_nominaWhereInput | detalle_nominaWhereInput[]
    id_detalle?: IntFilter<"detalle_nomina"> | number
    total_descuentos?: DecimalFilter<"detalle_nomina"> | Decimal | DecimalJsLike | number | string
    total_bonificaciones?: DecimalFilter<"detalle_nomina"> | Decimal | DecimalJsLike | number | string
    neto_a_cobrar?: IntFilter<"detalle_nomina"> | number
    creado_por?: IntFilter<"detalle_nomina"> | number
    id_nomina?: IntFilter<"detalle_nomina"> | number
    id_empleado?: IntFilter<"detalle_nomina"> | number
    usuario?: XOR<UsuarioScalarRelationFilter, usuarioWhereInput>
    empleado?: XOR<EmpleadoScalarRelationFilter, empleadoWhereInput>
    nomina?: XOR<NominaScalarRelationFilter, nominaWhereInput>
    detalle_nomina_concepto?: Detalle_nomina_conceptoListRelationFilter
  }

  export type detalle_nominaOrderByWithRelationInput = {
    id_detalle?: SortOrder
    total_descuentos?: SortOrder
    total_bonificaciones?: SortOrder
    neto_a_cobrar?: SortOrder
    creado_por?: SortOrder
    id_nomina?: SortOrder
    id_empleado?: SortOrder
    usuario?: usuarioOrderByWithRelationInput
    empleado?: empleadoOrderByWithRelationInput
    nomina?: nominaOrderByWithRelationInput
    detalle_nomina_concepto?: detalle_nomina_conceptoOrderByRelationAggregateInput
  }

  export type detalle_nominaWhereUniqueInput = Prisma.AtLeast<{
    id_detalle?: number
    AND?: detalle_nominaWhereInput | detalle_nominaWhereInput[]
    OR?: detalle_nominaWhereInput[]
    NOT?: detalle_nominaWhereInput | detalle_nominaWhereInput[]
    total_descuentos?: DecimalFilter<"detalle_nomina"> | Decimal | DecimalJsLike | number | string
    total_bonificaciones?: DecimalFilter<"detalle_nomina"> | Decimal | DecimalJsLike | number | string
    neto_a_cobrar?: IntFilter<"detalle_nomina"> | number
    creado_por?: IntFilter<"detalle_nomina"> | number
    id_nomina?: IntFilter<"detalle_nomina"> | number
    id_empleado?: IntFilter<"detalle_nomina"> | number
    usuario?: XOR<UsuarioScalarRelationFilter, usuarioWhereInput>
    empleado?: XOR<EmpleadoScalarRelationFilter, empleadoWhereInput>
    nomina?: XOR<NominaScalarRelationFilter, nominaWhereInput>
    detalle_nomina_concepto?: Detalle_nomina_conceptoListRelationFilter
  }, "id_detalle">

  export type detalle_nominaOrderByWithAggregationInput = {
    id_detalle?: SortOrder
    total_descuentos?: SortOrder
    total_bonificaciones?: SortOrder
    neto_a_cobrar?: SortOrder
    creado_por?: SortOrder
    id_nomina?: SortOrder
    id_empleado?: SortOrder
    _count?: detalle_nominaCountOrderByAggregateInput
    _avg?: detalle_nominaAvgOrderByAggregateInput
    _max?: detalle_nominaMaxOrderByAggregateInput
    _min?: detalle_nominaMinOrderByAggregateInput
    _sum?: detalle_nominaSumOrderByAggregateInput
  }

  export type detalle_nominaScalarWhereWithAggregatesInput = {
    AND?: detalle_nominaScalarWhereWithAggregatesInput | detalle_nominaScalarWhereWithAggregatesInput[]
    OR?: detalle_nominaScalarWhereWithAggregatesInput[]
    NOT?: detalle_nominaScalarWhereWithAggregatesInput | detalle_nominaScalarWhereWithAggregatesInput[]
    id_detalle?: IntWithAggregatesFilter<"detalle_nomina"> | number
    total_descuentos?: DecimalWithAggregatesFilter<"detalle_nomina"> | Decimal | DecimalJsLike | number | string
    total_bonificaciones?: DecimalWithAggregatesFilter<"detalle_nomina"> | Decimal | DecimalJsLike | number | string
    neto_a_cobrar?: IntWithAggregatesFilter<"detalle_nomina"> | number
    creado_por?: IntWithAggregatesFilter<"detalle_nomina"> | number
    id_nomina?: IntWithAggregatesFilter<"detalle_nomina"> | number
    id_empleado?: IntWithAggregatesFilter<"detalle_nomina"> | number
  }

  export type detalle_nomina_conceptoWhereInput = {
    AND?: detalle_nomina_conceptoWhereInput | detalle_nomina_conceptoWhereInput[]
    OR?: detalle_nomina_conceptoWhereInput[]
    NOT?: detalle_nomina_conceptoWhereInput | detalle_nomina_conceptoWhereInput[]
    id_detalle_conceptos?: IntFilter<"detalle_nomina_concepto"> | number
    monto?: DecimalFilter<"detalle_nomina_concepto"> | Decimal | DecimalJsLike | number | string
    id_concepto?: IntFilter<"detalle_nomina_concepto"> | number
    id_detalle?: IntFilter<"detalle_nomina_concepto"> | number
    origen?: StringFilter<"detalle_nomina_concepto"> | string
    concepto_salarial?: XOR<Concepto_salarialScalarRelationFilter, concepto_salarialWhereInput>
    detalle_nomina?: XOR<Detalle_nominaScalarRelationFilter, detalle_nominaWhereInput>
  }

  export type detalle_nomina_conceptoOrderByWithRelationInput = {
    id_detalle_conceptos?: SortOrder
    monto?: SortOrder
    id_concepto?: SortOrder
    id_detalle?: SortOrder
    origen?: SortOrder
    concepto_salarial?: concepto_salarialOrderByWithRelationInput
    detalle_nomina?: detalle_nominaOrderByWithRelationInput
  }

  export type detalle_nomina_conceptoWhereUniqueInput = Prisma.AtLeast<{
    id_detalle_conceptos?: number
    AND?: detalle_nomina_conceptoWhereInput | detalle_nomina_conceptoWhereInput[]
    OR?: detalle_nomina_conceptoWhereInput[]
    NOT?: detalle_nomina_conceptoWhereInput | detalle_nomina_conceptoWhereInput[]
    monto?: DecimalFilter<"detalle_nomina_concepto"> | Decimal | DecimalJsLike | number | string
    id_concepto?: IntFilter<"detalle_nomina_concepto"> | number
    id_detalle?: IntFilter<"detalle_nomina_concepto"> | number
    origen?: StringFilter<"detalle_nomina_concepto"> | string
    concepto_salarial?: XOR<Concepto_salarialScalarRelationFilter, concepto_salarialWhereInput>
    detalle_nomina?: XOR<Detalle_nominaScalarRelationFilter, detalle_nominaWhereInput>
  }, "id_detalle_conceptos">

  export type detalle_nomina_conceptoOrderByWithAggregationInput = {
    id_detalle_conceptos?: SortOrder
    monto?: SortOrder
    id_concepto?: SortOrder
    id_detalle?: SortOrder
    origen?: SortOrder
    _count?: detalle_nomina_conceptoCountOrderByAggregateInput
    _avg?: detalle_nomina_conceptoAvgOrderByAggregateInput
    _max?: detalle_nomina_conceptoMaxOrderByAggregateInput
    _min?: detalle_nomina_conceptoMinOrderByAggregateInput
    _sum?: detalle_nomina_conceptoSumOrderByAggregateInput
  }

  export type detalle_nomina_conceptoScalarWhereWithAggregatesInput = {
    AND?: detalle_nomina_conceptoScalarWhereWithAggregatesInput | detalle_nomina_conceptoScalarWhereWithAggregatesInput[]
    OR?: detalle_nomina_conceptoScalarWhereWithAggregatesInput[]
    NOT?: detalle_nomina_conceptoScalarWhereWithAggregatesInput | detalle_nomina_conceptoScalarWhereWithAggregatesInput[]
    id_detalle_conceptos?: IntWithAggregatesFilter<"detalle_nomina_concepto"> | number
    monto?: DecimalWithAggregatesFilter<"detalle_nomina_concepto"> | Decimal | DecimalJsLike | number | string
    id_concepto?: IntWithAggregatesFilter<"detalle_nomina_concepto"> | number
    id_detalle?: IntWithAggregatesFilter<"detalle_nomina_concepto"> | number
    origen?: StringWithAggregatesFilter<"detalle_nomina_concepto"> | string
  }

  export type empleadoWhereInput = {
    AND?: empleadoWhereInput | empleadoWhereInput[]
    OR?: empleadoWhereInput[]
    NOT?: empleadoWhereInput | empleadoWhereInput[]
    id_empleado?: IntFilter<"empleado"> | number
    nombre?: StringFilter<"empleado"> | string
    cedula?: StringFilter<"empleado"> | string
    apellido?: StringFilter<"empleado"> | string
    fecha_nacimiento?: DateTimeFilter<"empleado"> | Date | string
    correo?: StringFilter<"empleado"> | string
    fecha_ingreso?: DateTimeFilter<"empleado"> | Date | string
    telefono?: StringFilter<"empleado"> | string
    fecha_egreso?: DateTimeNullableFilter<"empleado"> | Date | string | null
    direccion?: StringFilter<"empleado"> | string
    afiliado_IPS?: BoolFilter<"empleado"> | boolean
    id_estado_civil?: IntFilter<"empleado"> | number
    concepto_empleado?: Concepto_empleadoListRelationFilter
    detalle_nomina?: Detalle_nominaListRelationFilter
    estado_civil?: XOR<Estado_civilScalarRelationFilter, estado_civilWhereInput>
    hijo?: HijoListRelationFilter
    historial_cargo?: Historial_cargoListRelationFilter
    usuario?: XOR<UsuarioNullableScalarRelationFilter, usuarioWhereInput> | null
  }

  export type empleadoOrderByWithRelationInput = {
    id_empleado?: SortOrder
    nombre?: SortOrder
    cedula?: SortOrder
    apellido?: SortOrder
    fecha_nacimiento?: SortOrder
    correo?: SortOrder
    fecha_ingreso?: SortOrder
    telefono?: SortOrder
    fecha_egreso?: SortOrderInput | SortOrder
    direccion?: SortOrder
    afiliado_IPS?: SortOrder
    id_estado_civil?: SortOrder
    concepto_empleado?: concepto_empleadoOrderByRelationAggregateInput
    detalle_nomina?: detalle_nominaOrderByRelationAggregateInput
    estado_civil?: estado_civilOrderByWithRelationInput
    hijo?: hijoOrderByRelationAggregateInput
    historial_cargo?: historial_cargoOrderByRelationAggregateInput
    usuario?: usuarioOrderByWithRelationInput
  }

  export type empleadoWhereUniqueInput = Prisma.AtLeast<{
    id_empleado?: number
    AND?: empleadoWhereInput | empleadoWhereInput[]
    OR?: empleadoWhereInput[]
    NOT?: empleadoWhereInput | empleadoWhereInput[]
    nombre?: StringFilter<"empleado"> | string
    cedula?: StringFilter<"empleado"> | string
    apellido?: StringFilter<"empleado"> | string
    fecha_nacimiento?: DateTimeFilter<"empleado"> | Date | string
    correo?: StringFilter<"empleado"> | string
    fecha_ingreso?: DateTimeFilter<"empleado"> | Date | string
    telefono?: StringFilter<"empleado"> | string
    fecha_egreso?: DateTimeNullableFilter<"empleado"> | Date | string | null
    direccion?: StringFilter<"empleado"> | string
    afiliado_IPS?: BoolFilter<"empleado"> | boolean
    id_estado_civil?: IntFilter<"empleado"> | number
    concepto_empleado?: Concepto_empleadoListRelationFilter
    detalle_nomina?: Detalle_nominaListRelationFilter
    estado_civil?: XOR<Estado_civilScalarRelationFilter, estado_civilWhereInput>
    hijo?: HijoListRelationFilter
    historial_cargo?: Historial_cargoListRelationFilter
    usuario?: XOR<UsuarioNullableScalarRelationFilter, usuarioWhereInput> | null
  }, "id_empleado">

  export type empleadoOrderByWithAggregationInput = {
    id_empleado?: SortOrder
    nombre?: SortOrder
    cedula?: SortOrder
    apellido?: SortOrder
    fecha_nacimiento?: SortOrder
    correo?: SortOrder
    fecha_ingreso?: SortOrder
    telefono?: SortOrder
    fecha_egreso?: SortOrderInput | SortOrder
    direccion?: SortOrder
    afiliado_IPS?: SortOrder
    id_estado_civil?: SortOrder
    _count?: empleadoCountOrderByAggregateInput
    _avg?: empleadoAvgOrderByAggregateInput
    _max?: empleadoMaxOrderByAggregateInput
    _min?: empleadoMinOrderByAggregateInput
    _sum?: empleadoSumOrderByAggregateInput
  }

  export type empleadoScalarWhereWithAggregatesInput = {
    AND?: empleadoScalarWhereWithAggregatesInput | empleadoScalarWhereWithAggregatesInput[]
    OR?: empleadoScalarWhereWithAggregatesInput[]
    NOT?: empleadoScalarWhereWithAggregatesInput | empleadoScalarWhereWithAggregatesInput[]
    id_empleado?: IntWithAggregatesFilter<"empleado"> | number
    nombre?: StringWithAggregatesFilter<"empleado"> | string
    cedula?: StringWithAggregatesFilter<"empleado"> | string
    apellido?: StringWithAggregatesFilter<"empleado"> | string
    fecha_nacimiento?: DateTimeWithAggregatesFilter<"empleado"> | Date | string
    correo?: StringWithAggregatesFilter<"empleado"> | string
    fecha_ingreso?: DateTimeWithAggregatesFilter<"empleado"> | Date | string
    telefono?: StringWithAggregatesFilter<"empleado"> | string
    fecha_egreso?: DateTimeNullableWithAggregatesFilter<"empleado"> | Date | string | null
    direccion?: StringWithAggregatesFilter<"empleado"> | string
    afiliado_IPS?: BoolWithAggregatesFilter<"empleado"> | boolean
    id_estado_civil?: IntWithAggregatesFilter<"empleado"> | number
  }

  export type estado_civilWhereInput = {
    AND?: estado_civilWhereInput | estado_civilWhereInput[]
    OR?: estado_civilWhereInput[]
    NOT?: estado_civilWhereInput | estado_civilWhereInput[]
    id_estado?: IntFilter<"estado_civil"> | number
    descripcion?: StringFilter<"estado_civil"> | string
    empleado?: EmpleadoListRelationFilter
  }

  export type estado_civilOrderByWithRelationInput = {
    id_estado?: SortOrder
    descripcion?: SortOrder
    empleado?: empleadoOrderByRelationAggregateInput
  }

  export type estado_civilWhereUniqueInput = Prisma.AtLeast<{
    id_estado?: number
    AND?: estado_civilWhereInput | estado_civilWhereInput[]
    OR?: estado_civilWhereInput[]
    NOT?: estado_civilWhereInput | estado_civilWhereInput[]
    descripcion?: StringFilter<"estado_civil"> | string
    empleado?: EmpleadoListRelationFilter
  }, "id_estado">

  export type estado_civilOrderByWithAggregationInput = {
    id_estado?: SortOrder
    descripcion?: SortOrder
    _count?: estado_civilCountOrderByAggregateInput
    _avg?: estado_civilAvgOrderByAggregateInput
    _max?: estado_civilMaxOrderByAggregateInput
    _min?: estado_civilMinOrderByAggregateInput
    _sum?: estado_civilSumOrderByAggregateInput
  }

  export type estado_civilScalarWhereWithAggregatesInput = {
    AND?: estado_civilScalarWhereWithAggregatesInput | estado_civilScalarWhereWithAggregatesInput[]
    OR?: estado_civilScalarWhereWithAggregatesInput[]
    NOT?: estado_civilScalarWhereWithAggregatesInput | estado_civilScalarWhereWithAggregatesInput[]
    id_estado?: IntWithAggregatesFilter<"estado_civil"> | number
    descripcion?: StringWithAggregatesFilter<"estado_civil"> | string
  }

  export type hijoWhereInput = {
    AND?: hijoWhereInput | hijoWhereInput[]
    OR?: hijoWhereInput[]
    NOT?: hijoWhereInput | hijoWhereInput[]
    id_hijo?: IntFilter<"hijo"> | number
    nombre?: StringFilter<"hijo"> | string
    certificado_vida_residencia?: StringFilter<"hijo"> | string
    fecha_vencimiento_certificado?: DateTimeFilter<"hijo"> | Date | string
    id_empleado?: IntFilter<"hijo"> | number
    discapacidad?: BoolFilter<"hijo"> | boolean
    fecha_nacimiento?: DateTimeFilter<"hijo"> | Date | string
    certificado_nacimiento?: StringFilter<"hijo"> | string
    empleado?: XOR<EmpleadoScalarRelationFilter, empleadoWhereInput>
  }

  export type hijoOrderByWithRelationInput = {
    id_hijo?: SortOrder
    nombre?: SortOrder
    certificado_vida_residencia?: SortOrder
    fecha_vencimiento_certificado?: SortOrder
    id_empleado?: SortOrder
    discapacidad?: SortOrder
    fecha_nacimiento?: SortOrder
    certificado_nacimiento?: SortOrder
    empleado?: empleadoOrderByWithRelationInput
  }

  export type hijoWhereUniqueInput = Prisma.AtLeast<{
    id_hijo?: number
    AND?: hijoWhereInput | hijoWhereInput[]
    OR?: hijoWhereInput[]
    NOT?: hijoWhereInput | hijoWhereInput[]
    nombre?: StringFilter<"hijo"> | string
    certificado_vida_residencia?: StringFilter<"hijo"> | string
    fecha_vencimiento_certificado?: DateTimeFilter<"hijo"> | Date | string
    id_empleado?: IntFilter<"hijo"> | number
    discapacidad?: BoolFilter<"hijo"> | boolean
    fecha_nacimiento?: DateTimeFilter<"hijo"> | Date | string
    certificado_nacimiento?: StringFilter<"hijo"> | string
    empleado?: XOR<EmpleadoScalarRelationFilter, empleadoWhereInput>
  }, "id_hijo">

  export type hijoOrderByWithAggregationInput = {
    id_hijo?: SortOrder
    nombre?: SortOrder
    certificado_vida_residencia?: SortOrder
    fecha_vencimiento_certificado?: SortOrder
    id_empleado?: SortOrder
    discapacidad?: SortOrder
    fecha_nacimiento?: SortOrder
    certificado_nacimiento?: SortOrder
    _count?: hijoCountOrderByAggregateInput
    _avg?: hijoAvgOrderByAggregateInput
    _max?: hijoMaxOrderByAggregateInput
    _min?: hijoMinOrderByAggregateInput
    _sum?: hijoSumOrderByAggregateInput
  }

  export type hijoScalarWhereWithAggregatesInput = {
    AND?: hijoScalarWhereWithAggregatesInput | hijoScalarWhereWithAggregatesInput[]
    OR?: hijoScalarWhereWithAggregatesInput[]
    NOT?: hijoScalarWhereWithAggregatesInput | hijoScalarWhereWithAggregatesInput[]
    id_hijo?: IntWithAggregatesFilter<"hijo"> | number
    nombre?: StringWithAggregatesFilter<"hijo"> | string
    certificado_vida_residencia?: StringWithAggregatesFilter<"hijo"> | string
    fecha_vencimiento_certificado?: DateTimeWithAggregatesFilter<"hijo"> | Date | string
    id_empleado?: IntWithAggregatesFilter<"hijo"> | number
    discapacidad?: BoolWithAggregatesFilter<"hijo"> | boolean
    fecha_nacimiento?: DateTimeWithAggregatesFilter<"hijo"> | Date | string
    certificado_nacimiento?: StringWithAggregatesFilter<"hijo"> | string
  }

  export type historial_cargoWhereInput = {
    AND?: historial_cargoWhereInput | historial_cargoWhereInput[]
    OR?: historial_cargoWhereInput[]
    NOT?: historial_cargoWhereInput | historial_cargoWhereInput[]
    id_historial?: IntFilter<"historial_cargo"> | number
    id_empleado?: IntFilter<"historial_cargo"> | number
    Fecha_Inicio?: DateTimeFilter<"historial_cargo"> | Date | string
    fecha_fin?: DateTimeNullableFilter<"historial_cargo"> | Date | string | null
    Salario_Asignado?: IntFilter<"historial_cargo"> | number
    id_cargo?: IntFilter<"historial_cargo"> | number
    cargo?: XOR<CargoScalarRelationFilter, cargoWhereInput>
    empleado?: XOR<EmpleadoScalarRelationFilter, empleadoWhereInput>
  }

  export type historial_cargoOrderByWithRelationInput = {
    id_historial?: SortOrder
    id_empleado?: SortOrder
    Fecha_Inicio?: SortOrder
    fecha_fin?: SortOrderInput | SortOrder
    Salario_Asignado?: SortOrder
    id_cargo?: SortOrder
    cargo?: cargoOrderByWithRelationInput
    empleado?: empleadoOrderByWithRelationInput
  }

  export type historial_cargoWhereUniqueInput = Prisma.AtLeast<{
    id_historial?: number
    AND?: historial_cargoWhereInput | historial_cargoWhereInput[]
    OR?: historial_cargoWhereInput[]
    NOT?: historial_cargoWhereInput | historial_cargoWhereInput[]
    id_empleado?: IntFilter<"historial_cargo"> | number
    Fecha_Inicio?: DateTimeFilter<"historial_cargo"> | Date | string
    fecha_fin?: DateTimeNullableFilter<"historial_cargo"> | Date | string | null
    Salario_Asignado?: IntFilter<"historial_cargo"> | number
    id_cargo?: IntFilter<"historial_cargo"> | number
    cargo?: XOR<CargoScalarRelationFilter, cargoWhereInput>
    empleado?: XOR<EmpleadoScalarRelationFilter, empleadoWhereInput>
  }, "id_historial">

  export type historial_cargoOrderByWithAggregationInput = {
    id_historial?: SortOrder
    id_empleado?: SortOrder
    Fecha_Inicio?: SortOrder
    fecha_fin?: SortOrderInput | SortOrder
    Salario_Asignado?: SortOrder
    id_cargo?: SortOrder
    _count?: historial_cargoCountOrderByAggregateInput
    _avg?: historial_cargoAvgOrderByAggregateInput
    _max?: historial_cargoMaxOrderByAggregateInput
    _min?: historial_cargoMinOrderByAggregateInput
    _sum?: historial_cargoSumOrderByAggregateInput
  }

  export type historial_cargoScalarWhereWithAggregatesInput = {
    AND?: historial_cargoScalarWhereWithAggregatesInput | historial_cargoScalarWhereWithAggregatesInput[]
    OR?: historial_cargoScalarWhereWithAggregatesInput[]
    NOT?: historial_cargoScalarWhereWithAggregatesInput | historial_cargoScalarWhereWithAggregatesInput[]
    id_historial?: IntWithAggregatesFilter<"historial_cargo"> | number
    id_empleado?: IntWithAggregatesFilter<"historial_cargo"> | number
    Fecha_Inicio?: DateTimeWithAggregatesFilter<"historial_cargo"> | Date | string
    fecha_fin?: DateTimeNullableWithAggregatesFilter<"historial_cargo"> | Date | string | null
    Salario_Asignado?: IntWithAggregatesFilter<"historial_cargo"> | number
    id_cargo?: IntWithAggregatesFilter<"historial_cargo"> | number
  }

  export type nominaWhereInput = {
    AND?: nominaWhereInput | nominaWhereInput[]
    OR?: nominaWhereInput[]
    NOT?: nominaWhereInput | nominaWhereInput[]
    id_nomina?: IntFilter<"nomina"> | number
    anho?: IntFilter<"nomina"> | number
    fecha_generacion?: DateTimeFilter<"nomina"> | Date | string
    estado?: StringFilter<"nomina"> | string
    mes?: IntFilter<"nomina"> | number
    detalle_nomina?: Detalle_nominaListRelationFilter
  }

  export type nominaOrderByWithRelationInput = {
    id_nomina?: SortOrder
    anho?: SortOrder
    fecha_generacion?: SortOrder
    estado?: SortOrder
    mes?: SortOrder
    detalle_nomina?: detalle_nominaOrderByRelationAggregateInput
  }

  export type nominaWhereUniqueInput = Prisma.AtLeast<{
    id_nomina?: number
    AND?: nominaWhereInput | nominaWhereInput[]
    OR?: nominaWhereInput[]
    NOT?: nominaWhereInput | nominaWhereInput[]
    anho?: IntFilter<"nomina"> | number
    fecha_generacion?: DateTimeFilter<"nomina"> | Date | string
    estado?: StringFilter<"nomina"> | string
    mes?: IntFilter<"nomina"> | number
    detalle_nomina?: Detalle_nominaListRelationFilter
  }, "id_nomina">

  export type nominaOrderByWithAggregationInput = {
    id_nomina?: SortOrder
    anho?: SortOrder
    fecha_generacion?: SortOrder
    estado?: SortOrder
    mes?: SortOrder
    _count?: nominaCountOrderByAggregateInput
    _avg?: nominaAvgOrderByAggregateInput
    _max?: nominaMaxOrderByAggregateInput
    _min?: nominaMinOrderByAggregateInput
    _sum?: nominaSumOrderByAggregateInput
  }

  export type nominaScalarWhereWithAggregatesInput = {
    AND?: nominaScalarWhereWithAggregatesInput | nominaScalarWhereWithAggregatesInput[]
    OR?: nominaScalarWhereWithAggregatesInput[]
    NOT?: nominaScalarWhereWithAggregatesInput | nominaScalarWhereWithAggregatesInput[]
    id_nomina?: IntWithAggregatesFilter<"nomina"> | number
    anho?: IntWithAggregatesFilter<"nomina"> | number
    fecha_generacion?: DateTimeWithAggregatesFilter<"nomina"> | Date | string
    estado?: StringWithAggregatesFilter<"nomina"> | string
    mes?: IntWithAggregatesFilter<"nomina"> | number
  }

  export type registro_accesoWhereInput = {
    AND?: registro_accesoWhereInput | registro_accesoWhereInput[]
    OR?: registro_accesoWhereInput[]
    NOT?: registro_accesoWhereInput | registro_accesoWhereInput[]
    id_registro?: IntFilter<"registro_acceso"> | number
    id_usuario?: IntFilter<"registro_acceso"> | number
    ip_origen?: StringFilter<"registro_acceso"> | string
    accion?: StringFilter<"registro_acceso"> | string
    fecha_hora?: DateTimeFilter<"registro_acceso"> | Date | string
    usuario?: XOR<UsuarioScalarRelationFilter, usuarioWhereInput>
  }

  export type registro_accesoOrderByWithRelationInput = {
    id_registro?: SortOrder
    id_usuario?: SortOrder
    ip_origen?: SortOrder
    accion?: SortOrder
    fecha_hora?: SortOrder
    usuario?: usuarioOrderByWithRelationInput
  }

  export type registro_accesoWhereUniqueInput = Prisma.AtLeast<{
    id_registro?: number
    AND?: registro_accesoWhereInput | registro_accesoWhereInput[]
    OR?: registro_accesoWhereInput[]
    NOT?: registro_accesoWhereInput | registro_accesoWhereInput[]
    id_usuario?: IntFilter<"registro_acceso"> | number
    ip_origen?: StringFilter<"registro_acceso"> | string
    accion?: StringFilter<"registro_acceso"> | string
    fecha_hora?: DateTimeFilter<"registro_acceso"> | Date | string
    usuario?: XOR<UsuarioScalarRelationFilter, usuarioWhereInput>
  }, "id_registro">

  export type registro_accesoOrderByWithAggregationInput = {
    id_registro?: SortOrder
    id_usuario?: SortOrder
    ip_origen?: SortOrder
    accion?: SortOrder
    fecha_hora?: SortOrder
    _count?: registro_accesoCountOrderByAggregateInput
    _avg?: registro_accesoAvgOrderByAggregateInput
    _max?: registro_accesoMaxOrderByAggregateInput
    _min?: registro_accesoMinOrderByAggregateInput
    _sum?: registro_accesoSumOrderByAggregateInput
  }

  export type registro_accesoScalarWhereWithAggregatesInput = {
    AND?: registro_accesoScalarWhereWithAggregatesInput | registro_accesoScalarWhereWithAggregatesInput[]
    OR?: registro_accesoScalarWhereWithAggregatesInput[]
    NOT?: registro_accesoScalarWhereWithAggregatesInput | registro_accesoScalarWhereWithAggregatesInput[]
    id_registro?: IntWithAggregatesFilter<"registro_acceso"> | number
    id_usuario?: IntWithAggregatesFilter<"registro_acceso"> | number
    ip_origen?: StringWithAggregatesFilter<"registro_acceso"> | string
    accion?: StringWithAggregatesFilter<"registro_acceso"> | string
    fecha_hora?: DateTimeWithAggregatesFilter<"registro_acceso"> | Date | string
  }

  export type rol_usuarioWhereInput = {
    AND?: rol_usuarioWhereInput | rol_usuarioWhereInput[]
    OR?: rol_usuarioWhereInput[]
    NOT?: rol_usuarioWhereInput | rol_usuarioWhereInput[]
    id_rol_usuario?: IntFilter<"rol_usuario"> | number
    nombre?: StringFilter<"rol_usuario"> | string
    descripcion_rol?: StringFilter<"rol_usuario"> | string
    usuario?: UsuarioListRelationFilter
  }

  export type rol_usuarioOrderByWithRelationInput = {
    id_rol_usuario?: SortOrder
    nombre?: SortOrder
    descripcion_rol?: SortOrder
    usuario?: usuarioOrderByRelationAggregateInput
  }

  export type rol_usuarioWhereUniqueInput = Prisma.AtLeast<{
    id_rol_usuario?: number
    AND?: rol_usuarioWhereInput | rol_usuarioWhereInput[]
    OR?: rol_usuarioWhereInput[]
    NOT?: rol_usuarioWhereInput | rol_usuarioWhereInput[]
    nombre?: StringFilter<"rol_usuario"> | string
    descripcion_rol?: StringFilter<"rol_usuario"> | string
    usuario?: UsuarioListRelationFilter
  }, "id_rol_usuario">

  export type rol_usuarioOrderByWithAggregationInput = {
    id_rol_usuario?: SortOrder
    nombre?: SortOrder
    descripcion_rol?: SortOrder
    _count?: rol_usuarioCountOrderByAggregateInput
    _avg?: rol_usuarioAvgOrderByAggregateInput
    _max?: rol_usuarioMaxOrderByAggregateInput
    _min?: rol_usuarioMinOrderByAggregateInput
    _sum?: rol_usuarioSumOrderByAggregateInput
  }

  export type rol_usuarioScalarWhereWithAggregatesInput = {
    AND?: rol_usuarioScalarWhereWithAggregatesInput | rol_usuarioScalarWhereWithAggregatesInput[]
    OR?: rol_usuarioScalarWhereWithAggregatesInput[]
    NOT?: rol_usuarioScalarWhereWithAggregatesInput | rol_usuarioScalarWhereWithAggregatesInput[]
    id_rol_usuario?: IntWithAggregatesFilter<"rol_usuario"> | number
    nombre?: StringWithAggregatesFilter<"rol_usuario"> | string
    descripcion_rol?: StringWithAggregatesFilter<"rol_usuario"> | string
  }

  export type tipo_concepto_salarialWhereInput = {
    AND?: tipo_concepto_salarialWhereInput | tipo_concepto_salarialWhereInput[]
    OR?: tipo_concepto_salarialWhereInput[]
    NOT?: tipo_concepto_salarialWhereInput | tipo_concepto_salarialWhereInput[]
    id_concepto_salarial?: IntFilter<"tipo_concepto_salarial"> | number
    descripcion?: StringFilter<"tipo_concepto_salarial"> | string
    concepto_salarial?: Concepto_salarialListRelationFilter
  }

  export type tipo_concepto_salarialOrderByWithRelationInput = {
    id_concepto_salarial?: SortOrder
    descripcion?: SortOrder
    concepto_salarial?: concepto_salarialOrderByRelationAggregateInput
  }

  export type tipo_concepto_salarialWhereUniqueInput = Prisma.AtLeast<{
    id_concepto_salarial?: number
    AND?: tipo_concepto_salarialWhereInput | tipo_concepto_salarialWhereInput[]
    OR?: tipo_concepto_salarialWhereInput[]
    NOT?: tipo_concepto_salarialWhereInput | tipo_concepto_salarialWhereInput[]
    descripcion?: StringFilter<"tipo_concepto_salarial"> | string
    concepto_salarial?: Concepto_salarialListRelationFilter
  }, "id_concepto_salarial">

  export type tipo_concepto_salarialOrderByWithAggregationInput = {
    id_concepto_salarial?: SortOrder
    descripcion?: SortOrder
    _count?: tipo_concepto_salarialCountOrderByAggregateInput
    _avg?: tipo_concepto_salarialAvgOrderByAggregateInput
    _max?: tipo_concepto_salarialMaxOrderByAggregateInput
    _min?: tipo_concepto_salarialMinOrderByAggregateInput
    _sum?: tipo_concepto_salarialSumOrderByAggregateInput
  }

  export type tipo_concepto_salarialScalarWhereWithAggregatesInput = {
    AND?: tipo_concepto_salarialScalarWhereWithAggregatesInput | tipo_concepto_salarialScalarWhereWithAggregatesInput[]
    OR?: tipo_concepto_salarialScalarWhereWithAggregatesInput[]
    NOT?: tipo_concepto_salarialScalarWhereWithAggregatesInput | tipo_concepto_salarialScalarWhereWithAggregatesInput[]
    id_concepto_salarial?: IntWithAggregatesFilter<"tipo_concepto_salarial"> | number
    descripcion?: StringWithAggregatesFilter<"tipo_concepto_salarial"> | string
  }

  export type usuarioWhereInput = {
    AND?: usuarioWhereInput | usuarioWhereInput[]
    OR?: usuarioWhereInput[]
    NOT?: usuarioWhereInput | usuarioWhereInput[]
    id_usuario?: IntFilter<"usuario"> | number
    nombre_usuario?: StringFilter<"usuario"> | string
    estado?: BoolFilter<"usuario"> | boolean
    clave?: StringFilter<"usuario"> | string
    id_rol_usuario?: IntFilter<"usuario"> | number
    id_empleado?: IntFilter<"usuario"> | number
    detalle_nomina?: Detalle_nominaListRelationFilter
    registro_acceso?: Registro_accesoListRelationFilter
    empleado?: XOR<EmpleadoScalarRelationFilter, empleadoWhereInput>
    rol_usuario?: XOR<Rol_usuarioScalarRelationFilter, rol_usuarioWhereInput>
  }

  export type usuarioOrderByWithRelationInput = {
    id_usuario?: SortOrder
    nombre_usuario?: SortOrder
    estado?: SortOrder
    clave?: SortOrder
    id_rol_usuario?: SortOrder
    id_empleado?: SortOrder
    detalle_nomina?: detalle_nominaOrderByRelationAggregateInput
    registro_acceso?: registro_accesoOrderByRelationAggregateInput
    empleado?: empleadoOrderByWithRelationInput
    rol_usuario?: rol_usuarioOrderByWithRelationInput
  }

  export type usuarioWhereUniqueInput = Prisma.AtLeast<{
    id_usuario?: number
    id_empleado?: number
    AND?: usuarioWhereInput | usuarioWhereInput[]
    OR?: usuarioWhereInput[]
    NOT?: usuarioWhereInput | usuarioWhereInput[]
    nombre_usuario?: StringFilter<"usuario"> | string
    estado?: BoolFilter<"usuario"> | boolean
    clave?: StringFilter<"usuario"> | string
    id_rol_usuario?: IntFilter<"usuario"> | number
    detalle_nomina?: Detalle_nominaListRelationFilter
    registro_acceso?: Registro_accesoListRelationFilter
    empleado?: XOR<EmpleadoScalarRelationFilter, empleadoWhereInput>
    rol_usuario?: XOR<Rol_usuarioScalarRelationFilter, rol_usuarioWhereInput>
  }, "id_usuario" | "id_empleado">

  export type usuarioOrderByWithAggregationInput = {
    id_usuario?: SortOrder
    nombre_usuario?: SortOrder
    estado?: SortOrder
    clave?: SortOrder
    id_rol_usuario?: SortOrder
    id_empleado?: SortOrder
    _count?: usuarioCountOrderByAggregateInput
    _avg?: usuarioAvgOrderByAggregateInput
    _max?: usuarioMaxOrderByAggregateInput
    _min?: usuarioMinOrderByAggregateInput
    _sum?: usuarioSumOrderByAggregateInput
  }

  export type usuarioScalarWhereWithAggregatesInput = {
    AND?: usuarioScalarWhereWithAggregatesInput | usuarioScalarWhereWithAggregatesInput[]
    OR?: usuarioScalarWhereWithAggregatesInput[]
    NOT?: usuarioScalarWhereWithAggregatesInput | usuarioScalarWhereWithAggregatesInput[]
    id_usuario?: IntWithAggregatesFilter<"usuario"> | number
    nombre_usuario?: StringWithAggregatesFilter<"usuario"> | string
    estado?: BoolWithAggregatesFilter<"usuario"> | boolean
    clave?: StringWithAggregatesFilter<"usuario"> | string
    id_rol_usuario?: IntWithAggregatesFilter<"usuario"> | number
    id_empleado?: IntWithAggregatesFilter<"usuario"> | number
  }

  export type cargoCreateInput = {
    nombre_cargo: string
    departamento_nombre: string
    Activo: boolean
    categoria_salarial: categoria_salarialCreateNestedOneWithoutCargoInput
    departamento_ref: departamentoCreateNestedOneWithoutCargoInput
    historial_cargo?: historial_cargoCreateNestedManyWithoutCargoInput
  }

  export type cargoUncheckedCreateInput = {
    id_cargo?: number
    nombre_cargo: string
    departamento_nombre: string
    id_departamento: number
    Activo: boolean
    id_categoria_salarial: number
    historial_cargo?: historial_cargoUncheckedCreateNestedManyWithoutCargoInput
  }

  export type cargoUpdateInput = {
    nombre_cargo?: StringFieldUpdateOperationsInput | string
    departamento_nombre?: StringFieldUpdateOperationsInput | string
    Activo?: BoolFieldUpdateOperationsInput | boolean
    categoria_salarial?: categoria_salarialUpdateOneRequiredWithoutCargoNestedInput
    departamento_ref?: departamentoUpdateOneRequiredWithoutCargoNestedInput
    historial_cargo?: historial_cargoUpdateManyWithoutCargoNestedInput
  }

  export type cargoUncheckedUpdateInput = {
    id_cargo?: IntFieldUpdateOperationsInput | number
    nombre_cargo?: StringFieldUpdateOperationsInput | string
    departamento_nombre?: StringFieldUpdateOperationsInput | string
    id_departamento?: IntFieldUpdateOperationsInput | number
    Activo?: BoolFieldUpdateOperationsInput | boolean
    id_categoria_salarial?: IntFieldUpdateOperationsInput | number
    historial_cargo?: historial_cargoUncheckedUpdateManyWithoutCargoNestedInput
  }

  export type cargoCreateManyInput = {
    id_cargo?: number
    nombre_cargo: string
    departamento_nombre: string
    id_departamento: number
    Activo: boolean
    id_categoria_salarial: number
  }

  export type cargoUpdateManyMutationInput = {
    nombre_cargo?: StringFieldUpdateOperationsInput | string
    departamento_nombre?: StringFieldUpdateOperationsInput | string
    Activo?: BoolFieldUpdateOperationsInput | boolean
  }

  export type cargoUncheckedUpdateManyInput = {
    id_cargo?: IntFieldUpdateOperationsInput | number
    nombre_cargo?: StringFieldUpdateOperationsInput | string
    departamento_nombre?: StringFieldUpdateOperationsInput | string
    id_departamento?: IntFieldUpdateOperationsInput | number
    Activo?: BoolFieldUpdateOperationsInput | boolean
    id_categoria_salarial?: IntFieldUpdateOperationsInput | number
  }

  export type categoria_salarialCreateInput = {
    monto: number
    cargo?: cargoCreateNestedManyWithoutCategoria_salarialInput
  }

  export type categoria_salarialUncheckedCreateInput = {
    id_categoria_salarial?: number
    monto: number
    cargo?: cargoUncheckedCreateNestedManyWithoutCategoria_salarialInput
  }

  export type categoria_salarialUpdateInput = {
    monto?: IntFieldUpdateOperationsInput | number
    cargo?: cargoUpdateManyWithoutCategoria_salarialNestedInput
  }

  export type categoria_salarialUncheckedUpdateInput = {
    id_categoria_salarial?: IntFieldUpdateOperationsInput | number
    monto?: IntFieldUpdateOperationsInput | number
    cargo?: cargoUncheckedUpdateManyWithoutCategoria_salarialNestedInput
  }

  export type categoria_salarialCreateManyInput = {
    id_categoria_salarial?: number
    monto: number
  }

  export type categoria_salarialUpdateManyMutationInput = {
    monto?: IntFieldUpdateOperationsInput | number
  }

  export type categoria_salarialUncheckedUpdateManyInput = {
    id_categoria_salarial?: IntFieldUpdateOperationsInput | number
    monto?: IntFieldUpdateOperationsInput | number
  }

  export type concepto_empleadoCreateInput = {
    monto: Decimal | DecimalJsLike | number | string
    observacion: string
    activo: boolean
    concepto_salarial: concepto_salarialCreateNestedOneWithoutConcepto_empleadoInput
    empleado: empleadoCreateNestedOneWithoutConcepto_empleadoInput
  }

  export type concepto_empleadoUncheckedCreateInput = {
    id_concepto_empleado?: number
    monto: Decimal | DecimalJsLike | number | string
    id_empleado: number
    observacion: string
    activo: boolean
    id_concepto: number
  }

  export type concepto_empleadoUpdateInput = {
    monto?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    observacion?: StringFieldUpdateOperationsInput | string
    activo?: BoolFieldUpdateOperationsInput | boolean
    concepto_salarial?: concepto_salarialUpdateOneRequiredWithoutConcepto_empleadoNestedInput
    empleado?: empleadoUpdateOneRequiredWithoutConcepto_empleadoNestedInput
  }

  export type concepto_empleadoUncheckedUpdateInput = {
    id_concepto_empleado?: IntFieldUpdateOperationsInput | number
    monto?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    id_empleado?: IntFieldUpdateOperationsInput | number
    observacion?: StringFieldUpdateOperationsInput | string
    activo?: BoolFieldUpdateOperationsInput | boolean
    id_concepto?: IntFieldUpdateOperationsInput | number
  }

  export type concepto_empleadoCreateManyInput = {
    id_concepto_empleado?: number
    monto: Decimal | DecimalJsLike | number | string
    id_empleado: number
    observacion: string
    activo: boolean
    id_concepto: number
  }

  export type concepto_empleadoUpdateManyMutationInput = {
    monto?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    observacion?: StringFieldUpdateOperationsInput | string
    activo?: BoolFieldUpdateOperationsInput | boolean
  }

  export type concepto_empleadoUncheckedUpdateManyInput = {
    id_concepto_empleado?: IntFieldUpdateOperationsInput | number
    monto?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    id_empleado?: IntFieldUpdateOperationsInput | number
    observacion?: StringFieldUpdateOperationsInput | string
    activo?: BoolFieldUpdateOperationsInput | boolean
    id_concepto?: IntFieldUpdateOperationsInput | number
  }

  export type concepto_salarialCreateInput = {
    nombre: string
    recurrente: boolean
    afecta_IPS: boolean
    afecta_aguinaldo: boolean
    concepto_empleado?: concepto_empleadoCreateNestedManyWithoutConcepto_salarialInput
    tipo_concepto_salarial: tipo_concepto_salarialCreateNestedOneWithoutConcepto_salarialInput
    detalle_nomina_concepto?: detalle_nomina_conceptoCreateNestedManyWithoutConcepto_salarialInput
  }

  export type concepto_salarialUncheckedCreateInput = {
    id_concepto?: number
    nombre: string
    recurrente: boolean
    afecta_IPS: boolean
    afecta_aguinaldo: boolean
    id_concepto_salarial: number
    concepto_empleado?: concepto_empleadoUncheckedCreateNestedManyWithoutConcepto_salarialInput
    detalle_nomina_concepto?: detalle_nomina_conceptoUncheckedCreateNestedManyWithoutConcepto_salarialInput
  }

  export type concepto_salarialUpdateInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    recurrente?: BoolFieldUpdateOperationsInput | boolean
    afecta_IPS?: BoolFieldUpdateOperationsInput | boolean
    afecta_aguinaldo?: BoolFieldUpdateOperationsInput | boolean
    concepto_empleado?: concepto_empleadoUpdateManyWithoutConcepto_salarialNestedInput
    tipo_concepto_salarial?: tipo_concepto_salarialUpdateOneRequiredWithoutConcepto_salarialNestedInput
    detalle_nomina_concepto?: detalle_nomina_conceptoUpdateManyWithoutConcepto_salarialNestedInput
  }

  export type concepto_salarialUncheckedUpdateInput = {
    id_concepto?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    recurrente?: BoolFieldUpdateOperationsInput | boolean
    afecta_IPS?: BoolFieldUpdateOperationsInput | boolean
    afecta_aguinaldo?: BoolFieldUpdateOperationsInput | boolean
    id_concepto_salarial?: IntFieldUpdateOperationsInput | number
    concepto_empleado?: concepto_empleadoUncheckedUpdateManyWithoutConcepto_salarialNestedInput
    detalle_nomina_concepto?: detalle_nomina_conceptoUncheckedUpdateManyWithoutConcepto_salarialNestedInput
  }

  export type concepto_salarialCreateManyInput = {
    id_concepto?: number
    nombre: string
    recurrente: boolean
    afecta_IPS: boolean
    afecta_aguinaldo: boolean
    id_concepto_salarial: number
  }

  export type concepto_salarialUpdateManyMutationInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    recurrente?: BoolFieldUpdateOperationsInput | boolean
    afecta_IPS?: BoolFieldUpdateOperationsInput | boolean
    afecta_aguinaldo?: BoolFieldUpdateOperationsInput | boolean
  }

  export type concepto_salarialUncheckedUpdateManyInput = {
    id_concepto?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    recurrente?: BoolFieldUpdateOperationsInput | boolean
    afecta_IPS?: BoolFieldUpdateOperationsInput | boolean
    afecta_aguinaldo?: BoolFieldUpdateOperationsInput | boolean
    id_concepto_salarial?: IntFieldUpdateOperationsInput | number
  }

  export type departamentoCreateInput = {
    nombre: string
    ubicacion: string
    cargo?: cargoCreateNestedManyWithoutDepartamento_refInput
  }

  export type departamentoUncheckedCreateInput = {
    id_departamento?: number
    nombre: string
    ubicacion: string
    cargo?: cargoUncheckedCreateNestedManyWithoutDepartamento_refInput
  }

  export type departamentoUpdateInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    ubicacion?: StringFieldUpdateOperationsInput | string
    cargo?: cargoUpdateManyWithoutDepartamento_refNestedInput
  }

  export type departamentoUncheckedUpdateInput = {
    id_departamento?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    ubicacion?: StringFieldUpdateOperationsInput | string
    cargo?: cargoUncheckedUpdateManyWithoutDepartamento_refNestedInput
  }

  export type departamentoCreateManyInput = {
    id_departamento?: number
    nombre: string
    ubicacion: string
  }

  export type departamentoUpdateManyMutationInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    ubicacion?: StringFieldUpdateOperationsInput | string
  }

  export type departamentoUncheckedUpdateManyInput = {
    id_departamento?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    ubicacion?: StringFieldUpdateOperationsInput | string
  }

  export type detalle_nominaCreateInput = {
    total_descuentos: Decimal | DecimalJsLike | number | string
    total_bonificaciones: Decimal | DecimalJsLike | number | string
    neto_a_cobrar: number
    usuario: usuarioCreateNestedOneWithoutDetalle_nominaInput
    empleado: empleadoCreateNestedOneWithoutDetalle_nominaInput
    nomina: nominaCreateNestedOneWithoutDetalle_nominaInput
    detalle_nomina_concepto?: detalle_nomina_conceptoCreateNestedManyWithoutDetalle_nominaInput
  }

  export type detalle_nominaUncheckedCreateInput = {
    id_detalle?: number
    total_descuentos: Decimal | DecimalJsLike | number | string
    total_bonificaciones: Decimal | DecimalJsLike | number | string
    neto_a_cobrar: number
    creado_por: number
    id_nomina: number
    id_empleado: number
    detalle_nomina_concepto?: detalle_nomina_conceptoUncheckedCreateNestedManyWithoutDetalle_nominaInput
  }

  export type detalle_nominaUpdateInput = {
    total_descuentos?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    total_bonificaciones?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    neto_a_cobrar?: IntFieldUpdateOperationsInput | number
    usuario?: usuarioUpdateOneRequiredWithoutDetalle_nominaNestedInput
    empleado?: empleadoUpdateOneRequiredWithoutDetalle_nominaNestedInput
    nomina?: nominaUpdateOneRequiredWithoutDetalle_nominaNestedInput
    detalle_nomina_concepto?: detalle_nomina_conceptoUpdateManyWithoutDetalle_nominaNestedInput
  }

  export type detalle_nominaUncheckedUpdateInput = {
    id_detalle?: IntFieldUpdateOperationsInput | number
    total_descuentos?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    total_bonificaciones?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    neto_a_cobrar?: IntFieldUpdateOperationsInput | number
    creado_por?: IntFieldUpdateOperationsInput | number
    id_nomina?: IntFieldUpdateOperationsInput | number
    id_empleado?: IntFieldUpdateOperationsInput | number
    detalle_nomina_concepto?: detalle_nomina_conceptoUncheckedUpdateManyWithoutDetalle_nominaNestedInput
  }

  export type detalle_nominaCreateManyInput = {
    id_detalle?: number
    total_descuentos: Decimal | DecimalJsLike | number | string
    total_bonificaciones: Decimal | DecimalJsLike | number | string
    neto_a_cobrar: number
    creado_por: number
    id_nomina: number
    id_empleado: number
  }

  export type detalle_nominaUpdateManyMutationInput = {
    total_descuentos?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    total_bonificaciones?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    neto_a_cobrar?: IntFieldUpdateOperationsInput | number
  }

  export type detalle_nominaUncheckedUpdateManyInput = {
    id_detalle?: IntFieldUpdateOperationsInput | number
    total_descuentos?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    total_bonificaciones?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    neto_a_cobrar?: IntFieldUpdateOperationsInput | number
    creado_por?: IntFieldUpdateOperationsInput | number
    id_nomina?: IntFieldUpdateOperationsInput | number
    id_empleado?: IntFieldUpdateOperationsInput | number
  }

  export type detalle_nomina_conceptoCreateInput = {
    id_detalle_conceptos: number
    monto: Decimal | DecimalJsLike | number | string
    origen: string
    concepto_salarial: concepto_salarialCreateNestedOneWithoutDetalle_nomina_conceptoInput
    detalle_nomina: detalle_nominaCreateNestedOneWithoutDetalle_nomina_conceptoInput
  }

  export type detalle_nomina_conceptoUncheckedCreateInput = {
    id_detalle_conceptos: number
    monto: Decimal | DecimalJsLike | number | string
    id_concepto: number
    id_detalle: number
    origen: string
  }

  export type detalle_nomina_conceptoUpdateInput = {
    id_detalle_conceptos?: IntFieldUpdateOperationsInput | number
    monto?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    origen?: StringFieldUpdateOperationsInput | string
    concepto_salarial?: concepto_salarialUpdateOneRequiredWithoutDetalle_nomina_conceptoNestedInput
    detalle_nomina?: detalle_nominaUpdateOneRequiredWithoutDetalle_nomina_conceptoNestedInput
  }

  export type detalle_nomina_conceptoUncheckedUpdateInput = {
    id_detalle_conceptos?: IntFieldUpdateOperationsInput | number
    monto?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    id_concepto?: IntFieldUpdateOperationsInput | number
    id_detalle?: IntFieldUpdateOperationsInput | number
    origen?: StringFieldUpdateOperationsInput | string
  }

  export type detalle_nomina_conceptoCreateManyInput = {
    id_detalle_conceptos: number
    monto: Decimal | DecimalJsLike | number | string
    id_concepto: number
    id_detalle: number
    origen: string
  }

  export type detalle_nomina_conceptoUpdateManyMutationInput = {
    id_detalle_conceptos?: IntFieldUpdateOperationsInput | number
    monto?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    origen?: StringFieldUpdateOperationsInput | string
  }

  export type detalle_nomina_conceptoUncheckedUpdateManyInput = {
    id_detalle_conceptos?: IntFieldUpdateOperationsInput | number
    monto?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    id_concepto?: IntFieldUpdateOperationsInput | number
    id_detalle?: IntFieldUpdateOperationsInput | number
    origen?: StringFieldUpdateOperationsInput | string
  }

  export type empleadoCreateInput = {
    nombre: string
    cedula: string
    apellido: string
    fecha_nacimiento: Date | string
    correo: string
    fecha_ingreso: Date | string
    telefono: string
    fecha_egreso?: Date | string | null
    direccion: string
    afiliado_IPS: boolean
    concepto_empleado?: concepto_empleadoCreateNestedManyWithoutEmpleadoInput
    detalle_nomina?: detalle_nominaCreateNestedManyWithoutEmpleadoInput
    estado_civil: estado_civilCreateNestedOneWithoutEmpleadoInput
    hijo?: hijoCreateNestedManyWithoutEmpleadoInput
    historial_cargo?: historial_cargoCreateNestedManyWithoutEmpleadoInput
    usuario?: usuarioCreateNestedOneWithoutEmpleadoInput
  }

  export type empleadoUncheckedCreateInput = {
    id_empleado?: number
    nombre: string
    cedula: string
    apellido: string
    fecha_nacimiento: Date | string
    correo: string
    fecha_ingreso: Date | string
    telefono: string
    fecha_egreso?: Date | string | null
    direccion: string
    afiliado_IPS: boolean
    id_estado_civil: number
    concepto_empleado?: concepto_empleadoUncheckedCreateNestedManyWithoutEmpleadoInput
    detalle_nomina?: detalle_nominaUncheckedCreateNestedManyWithoutEmpleadoInput
    hijo?: hijoUncheckedCreateNestedManyWithoutEmpleadoInput
    historial_cargo?: historial_cargoUncheckedCreateNestedManyWithoutEmpleadoInput
    usuario?: usuarioUncheckedCreateNestedOneWithoutEmpleadoInput
  }

  export type empleadoUpdateInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    cedula?: StringFieldUpdateOperationsInput | string
    apellido?: StringFieldUpdateOperationsInput | string
    fecha_nacimiento?: DateTimeFieldUpdateOperationsInput | Date | string
    correo?: StringFieldUpdateOperationsInput | string
    fecha_ingreso?: DateTimeFieldUpdateOperationsInput | Date | string
    telefono?: StringFieldUpdateOperationsInput | string
    fecha_egreso?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    direccion?: StringFieldUpdateOperationsInput | string
    afiliado_IPS?: BoolFieldUpdateOperationsInput | boolean
    concepto_empleado?: concepto_empleadoUpdateManyWithoutEmpleadoNestedInput
    detalle_nomina?: detalle_nominaUpdateManyWithoutEmpleadoNestedInput
    estado_civil?: estado_civilUpdateOneRequiredWithoutEmpleadoNestedInput
    hijo?: hijoUpdateManyWithoutEmpleadoNestedInput
    historial_cargo?: historial_cargoUpdateManyWithoutEmpleadoNestedInput
    usuario?: usuarioUpdateOneWithoutEmpleadoNestedInput
  }

  export type empleadoUncheckedUpdateInput = {
    id_empleado?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    cedula?: StringFieldUpdateOperationsInput | string
    apellido?: StringFieldUpdateOperationsInput | string
    fecha_nacimiento?: DateTimeFieldUpdateOperationsInput | Date | string
    correo?: StringFieldUpdateOperationsInput | string
    fecha_ingreso?: DateTimeFieldUpdateOperationsInput | Date | string
    telefono?: StringFieldUpdateOperationsInput | string
    fecha_egreso?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    direccion?: StringFieldUpdateOperationsInput | string
    afiliado_IPS?: BoolFieldUpdateOperationsInput | boolean
    id_estado_civil?: IntFieldUpdateOperationsInput | number
    concepto_empleado?: concepto_empleadoUncheckedUpdateManyWithoutEmpleadoNestedInput
    detalle_nomina?: detalle_nominaUncheckedUpdateManyWithoutEmpleadoNestedInput
    hijo?: hijoUncheckedUpdateManyWithoutEmpleadoNestedInput
    historial_cargo?: historial_cargoUncheckedUpdateManyWithoutEmpleadoNestedInput
    usuario?: usuarioUncheckedUpdateOneWithoutEmpleadoNestedInput
  }

  export type empleadoCreateManyInput = {
    id_empleado?: number
    nombre: string
    cedula: string
    apellido: string
    fecha_nacimiento: Date | string
    correo: string
    fecha_ingreso: Date | string
    telefono: string
    fecha_egreso?: Date | string | null
    direccion: string
    afiliado_IPS: boolean
    id_estado_civil: number
  }

  export type empleadoUpdateManyMutationInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    cedula?: StringFieldUpdateOperationsInput | string
    apellido?: StringFieldUpdateOperationsInput | string
    fecha_nacimiento?: DateTimeFieldUpdateOperationsInput | Date | string
    correo?: StringFieldUpdateOperationsInput | string
    fecha_ingreso?: DateTimeFieldUpdateOperationsInput | Date | string
    telefono?: StringFieldUpdateOperationsInput | string
    fecha_egreso?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    direccion?: StringFieldUpdateOperationsInput | string
    afiliado_IPS?: BoolFieldUpdateOperationsInput | boolean
  }

  export type empleadoUncheckedUpdateManyInput = {
    id_empleado?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    cedula?: StringFieldUpdateOperationsInput | string
    apellido?: StringFieldUpdateOperationsInput | string
    fecha_nacimiento?: DateTimeFieldUpdateOperationsInput | Date | string
    correo?: StringFieldUpdateOperationsInput | string
    fecha_ingreso?: DateTimeFieldUpdateOperationsInput | Date | string
    telefono?: StringFieldUpdateOperationsInput | string
    fecha_egreso?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    direccion?: StringFieldUpdateOperationsInput | string
    afiliado_IPS?: BoolFieldUpdateOperationsInput | boolean
    id_estado_civil?: IntFieldUpdateOperationsInput | number
  }

  export type estado_civilCreateInput = {
    descripcion: string
    empleado?: empleadoCreateNestedManyWithoutEstado_civilInput
  }

  export type estado_civilUncheckedCreateInput = {
    id_estado?: number
    descripcion: string
    empleado?: empleadoUncheckedCreateNestedManyWithoutEstado_civilInput
  }

  export type estado_civilUpdateInput = {
    descripcion?: StringFieldUpdateOperationsInput | string
    empleado?: empleadoUpdateManyWithoutEstado_civilNestedInput
  }

  export type estado_civilUncheckedUpdateInput = {
    id_estado?: IntFieldUpdateOperationsInput | number
    descripcion?: StringFieldUpdateOperationsInput | string
    empleado?: empleadoUncheckedUpdateManyWithoutEstado_civilNestedInput
  }

  export type estado_civilCreateManyInput = {
    id_estado?: number
    descripcion: string
  }

  export type estado_civilUpdateManyMutationInput = {
    descripcion?: StringFieldUpdateOperationsInput | string
  }

  export type estado_civilUncheckedUpdateManyInput = {
    id_estado?: IntFieldUpdateOperationsInput | number
    descripcion?: StringFieldUpdateOperationsInput | string
  }

  export type hijoCreateInput = {
    nombre: string
    certificado_vida_residencia: string
    fecha_vencimiento_certificado: Date | string
    discapacidad: boolean
    fecha_nacimiento: Date | string
    certificado_nacimiento: string
    empleado: empleadoCreateNestedOneWithoutHijoInput
  }

  export type hijoUncheckedCreateInput = {
    id_hijo?: number
    nombre: string
    certificado_vida_residencia: string
    fecha_vencimiento_certificado: Date | string
    id_empleado: number
    discapacidad: boolean
    fecha_nacimiento: Date | string
    certificado_nacimiento: string
  }

  export type hijoUpdateInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    certificado_vida_residencia?: StringFieldUpdateOperationsInput | string
    fecha_vencimiento_certificado?: DateTimeFieldUpdateOperationsInput | Date | string
    discapacidad?: BoolFieldUpdateOperationsInput | boolean
    fecha_nacimiento?: DateTimeFieldUpdateOperationsInput | Date | string
    certificado_nacimiento?: StringFieldUpdateOperationsInput | string
    empleado?: empleadoUpdateOneRequiredWithoutHijoNestedInput
  }

  export type hijoUncheckedUpdateInput = {
    id_hijo?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    certificado_vida_residencia?: StringFieldUpdateOperationsInput | string
    fecha_vencimiento_certificado?: DateTimeFieldUpdateOperationsInput | Date | string
    id_empleado?: IntFieldUpdateOperationsInput | number
    discapacidad?: BoolFieldUpdateOperationsInput | boolean
    fecha_nacimiento?: DateTimeFieldUpdateOperationsInput | Date | string
    certificado_nacimiento?: StringFieldUpdateOperationsInput | string
  }

  export type hijoCreateManyInput = {
    id_hijo?: number
    nombre: string
    certificado_vida_residencia: string
    fecha_vencimiento_certificado: Date | string
    id_empleado: number
    discapacidad: boolean
    fecha_nacimiento: Date | string
    certificado_nacimiento: string
  }

  export type hijoUpdateManyMutationInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    certificado_vida_residencia?: StringFieldUpdateOperationsInput | string
    fecha_vencimiento_certificado?: DateTimeFieldUpdateOperationsInput | Date | string
    discapacidad?: BoolFieldUpdateOperationsInput | boolean
    fecha_nacimiento?: DateTimeFieldUpdateOperationsInput | Date | string
    certificado_nacimiento?: StringFieldUpdateOperationsInput | string
  }

  export type hijoUncheckedUpdateManyInput = {
    id_hijo?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    certificado_vida_residencia?: StringFieldUpdateOperationsInput | string
    fecha_vencimiento_certificado?: DateTimeFieldUpdateOperationsInput | Date | string
    id_empleado?: IntFieldUpdateOperationsInput | number
    discapacidad?: BoolFieldUpdateOperationsInput | boolean
    fecha_nacimiento?: DateTimeFieldUpdateOperationsInput | Date | string
    certificado_nacimiento?: StringFieldUpdateOperationsInput | string
  }

  export type historial_cargoCreateInput = {
    Fecha_Inicio: Date | string
    fecha_fin?: Date | string | null
    Salario_Asignado: number
    cargo: cargoCreateNestedOneWithoutHistorial_cargoInput
    empleado: empleadoCreateNestedOneWithoutHistorial_cargoInput
  }

  export type historial_cargoUncheckedCreateInput = {
    id_historial?: number
    id_empleado: number
    Fecha_Inicio: Date | string
    fecha_fin?: Date | string | null
    Salario_Asignado: number
    id_cargo: number
  }

  export type historial_cargoUpdateInput = {
    Fecha_Inicio?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_fin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    Salario_Asignado?: IntFieldUpdateOperationsInput | number
    cargo?: cargoUpdateOneRequiredWithoutHistorial_cargoNestedInput
    empleado?: empleadoUpdateOneRequiredWithoutHistorial_cargoNestedInput
  }

  export type historial_cargoUncheckedUpdateInput = {
    id_historial?: IntFieldUpdateOperationsInput | number
    id_empleado?: IntFieldUpdateOperationsInput | number
    Fecha_Inicio?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_fin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    Salario_Asignado?: IntFieldUpdateOperationsInput | number
    id_cargo?: IntFieldUpdateOperationsInput | number
  }

  export type historial_cargoCreateManyInput = {
    id_historial?: number
    id_empleado: number
    Fecha_Inicio: Date | string
    fecha_fin?: Date | string | null
    Salario_Asignado: number
    id_cargo: number
  }

  export type historial_cargoUpdateManyMutationInput = {
    Fecha_Inicio?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_fin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    Salario_Asignado?: IntFieldUpdateOperationsInput | number
  }

  export type historial_cargoUncheckedUpdateManyInput = {
    id_historial?: IntFieldUpdateOperationsInput | number
    id_empleado?: IntFieldUpdateOperationsInput | number
    Fecha_Inicio?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_fin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    Salario_Asignado?: IntFieldUpdateOperationsInput | number
    id_cargo?: IntFieldUpdateOperationsInput | number
  }

  export type nominaCreateInput = {
    anho: number
    fecha_generacion: Date | string
    estado: string
    mes: number
    detalle_nomina?: detalle_nominaCreateNestedManyWithoutNominaInput
  }

  export type nominaUncheckedCreateInput = {
    id_nomina?: number
    anho: number
    fecha_generacion: Date | string
    estado: string
    mes: number
    detalle_nomina?: detalle_nominaUncheckedCreateNestedManyWithoutNominaInput
  }

  export type nominaUpdateInput = {
    anho?: IntFieldUpdateOperationsInput | number
    fecha_generacion?: DateTimeFieldUpdateOperationsInput | Date | string
    estado?: StringFieldUpdateOperationsInput | string
    mes?: IntFieldUpdateOperationsInput | number
    detalle_nomina?: detalle_nominaUpdateManyWithoutNominaNestedInput
  }

  export type nominaUncheckedUpdateInput = {
    id_nomina?: IntFieldUpdateOperationsInput | number
    anho?: IntFieldUpdateOperationsInput | number
    fecha_generacion?: DateTimeFieldUpdateOperationsInput | Date | string
    estado?: StringFieldUpdateOperationsInput | string
    mes?: IntFieldUpdateOperationsInput | number
    detalle_nomina?: detalle_nominaUncheckedUpdateManyWithoutNominaNestedInput
  }

  export type nominaCreateManyInput = {
    id_nomina?: number
    anho: number
    fecha_generacion: Date | string
    estado: string
    mes: number
  }

  export type nominaUpdateManyMutationInput = {
    anho?: IntFieldUpdateOperationsInput | number
    fecha_generacion?: DateTimeFieldUpdateOperationsInput | Date | string
    estado?: StringFieldUpdateOperationsInput | string
    mes?: IntFieldUpdateOperationsInput | number
  }

  export type nominaUncheckedUpdateManyInput = {
    id_nomina?: IntFieldUpdateOperationsInput | number
    anho?: IntFieldUpdateOperationsInput | number
    fecha_generacion?: DateTimeFieldUpdateOperationsInput | Date | string
    estado?: StringFieldUpdateOperationsInput | string
    mes?: IntFieldUpdateOperationsInput | number
  }

  export type registro_accesoCreateInput = {
    ip_origen: string
    accion: string
    fecha_hora: Date | string
    usuario: usuarioCreateNestedOneWithoutRegistro_accesoInput
  }

  export type registro_accesoUncheckedCreateInput = {
    id_registro?: number
    id_usuario: number
    ip_origen: string
    accion: string
    fecha_hora: Date | string
  }

  export type registro_accesoUpdateInput = {
    ip_origen?: StringFieldUpdateOperationsInput | string
    accion?: StringFieldUpdateOperationsInput | string
    fecha_hora?: DateTimeFieldUpdateOperationsInput | Date | string
    usuario?: usuarioUpdateOneRequiredWithoutRegistro_accesoNestedInput
  }

  export type registro_accesoUncheckedUpdateInput = {
    id_registro?: IntFieldUpdateOperationsInput | number
    id_usuario?: IntFieldUpdateOperationsInput | number
    ip_origen?: StringFieldUpdateOperationsInput | string
    accion?: StringFieldUpdateOperationsInput | string
    fecha_hora?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type registro_accesoCreateManyInput = {
    id_registro?: number
    id_usuario: number
    ip_origen: string
    accion: string
    fecha_hora: Date | string
  }

  export type registro_accesoUpdateManyMutationInput = {
    ip_origen?: StringFieldUpdateOperationsInput | string
    accion?: StringFieldUpdateOperationsInput | string
    fecha_hora?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type registro_accesoUncheckedUpdateManyInput = {
    id_registro?: IntFieldUpdateOperationsInput | number
    id_usuario?: IntFieldUpdateOperationsInput | number
    ip_origen?: StringFieldUpdateOperationsInput | string
    accion?: StringFieldUpdateOperationsInput | string
    fecha_hora?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type rol_usuarioCreateInput = {
    nombre: string
    descripcion_rol: string
    usuario?: usuarioCreateNestedManyWithoutRol_usuarioInput
  }

  export type rol_usuarioUncheckedCreateInput = {
    id_rol_usuario?: number
    nombre: string
    descripcion_rol: string
    usuario?: usuarioUncheckedCreateNestedManyWithoutRol_usuarioInput
  }

  export type rol_usuarioUpdateInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion_rol?: StringFieldUpdateOperationsInput | string
    usuario?: usuarioUpdateManyWithoutRol_usuarioNestedInput
  }

  export type rol_usuarioUncheckedUpdateInput = {
    id_rol_usuario?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion_rol?: StringFieldUpdateOperationsInput | string
    usuario?: usuarioUncheckedUpdateManyWithoutRol_usuarioNestedInput
  }

  export type rol_usuarioCreateManyInput = {
    id_rol_usuario?: number
    nombre: string
    descripcion_rol: string
  }

  export type rol_usuarioUpdateManyMutationInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion_rol?: StringFieldUpdateOperationsInput | string
  }

  export type rol_usuarioUncheckedUpdateManyInput = {
    id_rol_usuario?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion_rol?: StringFieldUpdateOperationsInput | string
  }

  export type tipo_concepto_salarialCreateInput = {
    descripcion: string
    concepto_salarial?: concepto_salarialCreateNestedManyWithoutTipo_concepto_salarialInput
  }

  export type tipo_concepto_salarialUncheckedCreateInput = {
    id_concepto_salarial?: number
    descripcion: string
    concepto_salarial?: concepto_salarialUncheckedCreateNestedManyWithoutTipo_concepto_salarialInput
  }

  export type tipo_concepto_salarialUpdateInput = {
    descripcion?: StringFieldUpdateOperationsInput | string
    concepto_salarial?: concepto_salarialUpdateManyWithoutTipo_concepto_salarialNestedInput
  }

  export type tipo_concepto_salarialUncheckedUpdateInput = {
    id_concepto_salarial?: IntFieldUpdateOperationsInput | number
    descripcion?: StringFieldUpdateOperationsInput | string
    concepto_salarial?: concepto_salarialUncheckedUpdateManyWithoutTipo_concepto_salarialNestedInput
  }

  export type tipo_concepto_salarialCreateManyInput = {
    id_concepto_salarial?: number
    descripcion: string
  }

  export type tipo_concepto_salarialUpdateManyMutationInput = {
    descripcion?: StringFieldUpdateOperationsInput | string
  }

  export type tipo_concepto_salarialUncheckedUpdateManyInput = {
    id_concepto_salarial?: IntFieldUpdateOperationsInput | number
    descripcion?: StringFieldUpdateOperationsInput | string
  }

  export type usuarioCreateInput = {
    nombre_usuario: string
    estado: boolean
    clave: string
    detalle_nomina?: detalle_nominaCreateNestedManyWithoutUsuarioInput
    registro_acceso?: registro_accesoCreateNestedManyWithoutUsuarioInput
    empleado: empleadoCreateNestedOneWithoutUsuarioInput
    rol_usuario: rol_usuarioCreateNestedOneWithoutUsuarioInput
  }

  export type usuarioUncheckedCreateInput = {
    id_usuario?: number
    nombre_usuario: string
    estado: boolean
    clave: string
    id_rol_usuario: number
    id_empleado: number
    detalle_nomina?: detalle_nominaUncheckedCreateNestedManyWithoutUsuarioInput
    registro_acceso?: registro_accesoUncheckedCreateNestedManyWithoutUsuarioInput
  }

  export type usuarioUpdateInput = {
    nombre_usuario?: StringFieldUpdateOperationsInput | string
    estado?: BoolFieldUpdateOperationsInput | boolean
    clave?: StringFieldUpdateOperationsInput | string
    detalle_nomina?: detalle_nominaUpdateManyWithoutUsuarioNestedInput
    registro_acceso?: registro_accesoUpdateManyWithoutUsuarioNestedInput
    empleado?: empleadoUpdateOneRequiredWithoutUsuarioNestedInput
    rol_usuario?: rol_usuarioUpdateOneRequiredWithoutUsuarioNestedInput
  }

  export type usuarioUncheckedUpdateInput = {
    id_usuario?: IntFieldUpdateOperationsInput | number
    nombre_usuario?: StringFieldUpdateOperationsInput | string
    estado?: BoolFieldUpdateOperationsInput | boolean
    clave?: StringFieldUpdateOperationsInput | string
    id_rol_usuario?: IntFieldUpdateOperationsInput | number
    id_empleado?: IntFieldUpdateOperationsInput | number
    detalle_nomina?: detalle_nominaUncheckedUpdateManyWithoutUsuarioNestedInput
    registro_acceso?: registro_accesoUncheckedUpdateManyWithoutUsuarioNestedInput
  }

  export type usuarioCreateManyInput = {
    id_usuario?: number
    nombre_usuario: string
    estado: boolean
    clave: string
    id_rol_usuario: number
    id_empleado: number
  }

  export type usuarioUpdateManyMutationInput = {
    nombre_usuario?: StringFieldUpdateOperationsInput | string
    estado?: BoolFieldUpdateOperationsInput | boolean
    clave?: StringFieldUpdateOperationsInput | string
  }

  export type usuarioUncheckedUpdateManyInput = {
    id_usuario?: IntFieldUpdateOperationsInput | number
    nombre_usuario?: StringFieldUpdateOperationsInput | string
    estado?: BoolFieldUpdateOperationsInput | boolean
    clave?: StringFieldUpdateOperationsInput | string
    id_rol_usuario?: IntFieldUpdateOperationsInput | number
    id_empleado?: IntFieldUpdateOperationsInput | number
  }

  export type IntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type StringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type BoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type Categoria_salarialScalarRelationFilter = {
    is?: categoria_salarialWhereInput
    isNot?: categoria_salarialWhereInput
  }

  export type DepartamentoScalarRelationFilter = {
    is?: departamentoWhereInput
    isNot?: departamentoWhereInput
  }

  export type Historial_cargoListRelationFilter = {
    every?: historial_cargoWhereInput
    some?: historial_cargoWhereInput
    none?: historial_cargoWhereInput
  }

  export type historial_cargoOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type cargoCountOrderByAggregateInput = {
    id_cargo?: SortOrder
    nombre_cargo?: SortOrder
    departamento_nombre?: SortOrder
    id_departamento?: SortOrder
    Activo?: SortOrder
    id_categoria_salarial?: SortOrder
  }

  export type cargoAvgOrderByAggregateInput = {
    id_cargo?: SortOrder
    id_departamento?: SortOrder
    id_categoria_salarial?: SortOrder
  }

  export type cargoMaxOrderByAggregateInput = {
    id_cargo?: SortOrder
    nombre_cargo?: SortOrder
    departamento_nombre?: SortOrder
    id_departamento?: SortOrder
    Activo?: SortOrder
    id_categoria_salarial?: SortOrder
  }

  export type cargoMinOrderByAggregateInput = {
    id_cargo?: SortOrder
    nombre_cargo?: SortOrder
    departamento_nombre?: SortOrder
    id_departamento?: SortOrder
    Activo?: SortOrder
    id_categoria_salarial?: SortOrder
  }

  export type cargoSumOrderByAggregateInput = {
    id_cargo?: SortOrder
    id_departamento?: SortOrder
    id_categoria_salarial?: SortOrder
  }

  export type IntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type StringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type BoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type CargoListRelationFilter = {
    every?: cargoWhereInput
    some?: cargoWhereInput
    none?: cargoWhereInput
  }

  export type cargoOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type categoria_salarialCountOrderByAggregateInput = {
    id_categoria_salarial?: SortOrder
    monto?: SortOrder
  }

  export type categoria_salarialAvgOrderByAggregateInput = {
    id_categoria_salarial?: SortOrder
    monto?: SortOrder
  }

  export type categoria_salarialMaxOrderByAggregateInput = {
    id_categoria_salarial?: SortOrder
    monto?: SortOrder
  }

  export type categoria_salarialMinOrderByAggregateInput = {
    id_categoria_salarial?: SortOrder
    monto?: SortOrder
  }

  export type categoria_salarialSumOrderByAggregateInput = {
    id_categoria_salarial?: SortOrder
    monto?: SortOrder
  }

  export type DecimalFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
  }

  export type Concepto_salarialScalarRelationFilter = {
    is?: concepto_salarialWhereInput
    isNot?: concepto_salarialWhereInput
  }

  export type EmpleadoScalarRelationFilter = {
    is?: empleadoWhereInput
    isNot?: empleadoWhereInput
  }

  export type concepto_empleadoCountOrderByAggregateInput = {
    id_concepto_empleado?: SortOrder
    monto?: SortOrder
    id_empleado?: SortOrder
    observacion?: SortOrder
    activo?: SortOrder
    id_concepto?: SortOrder
  }

  export type concepto_empleadoAvgOrderByAggregateInput = {
    id_concepto_empleado?: SortOrder
    monto?: SortOrder
    id_empleado?: SortOrder
    id_concepto?: SortOrder
  }

  export type concepto_empleadoMaxOrderByAggregateInput = {
    id_concepto_empleado?: SortOrder
    monto?: SortOrder
    id_empleado?: SortOrder
    observacion?: SortOrder
    activo?: SortOrder
    id_concepto?: SortOrder
  }

  export type concepto_empleadoMinOrderByAggregateInput = {
    id_concepto_empleado?: SortOrder
    monto?: SortOrder
    id_empleado?: SortOrder
    observacion?: SortOrder
    activo?: SortOrder
    id_concepto?: SortOrder
  }

  export type concepto_empleadoSumOrderByAggregateInput = {
    id_concepto_empleado?: SortOrder
    monto?: SortOrder
    id_empleado?: SortOrder
    id_concepto?: SortOrder
  }

  export type DecimalWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedDecimalFilter<$PrismaModel>
    _sum?: NestedDecimalFilter<$PrismaModel>
    _min?: NestedDecimalFilter<$PrismaModel>
    _max?: NestedDecimalFilter<$PrismaModel>
  }

  export type Concepto_empleadoListRelationFilter = {
    every?: concepto_empleadoWhereInput
    some?: concepto_empleadoWhereInput
    none?: concepto_empleadoWhereInput
  }

  export type Tipo_concepto_salarialScalarRelationFilter = {
    is?: tipo_concepto_salarialWhereInput
    isNot?: tipo_concepto_salarialWhereInput
  }

  export type Detalle_nomina_conceptoListRelationFilter = {
    every?: detalle_nomina_conceptoWhereInput
    some?: detalle_nomina_conceptoWhereInput
    none?: detalle_nomina_conceptoWhereInput
  }

  export type concepto_empleadoOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type detalle_nomina_conceptoOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type concepto_salarialCountOrderByAggregateInput = {
    id_concepto?: SortOrder
    nombre?: SortOrder
    recurrente?: SortOrder
    afecta_IPS?: SortOrder
    afecta_aguinaldo?: SortOrder
    id_concepto_salarial?: SortOrder
  }

  export type concepto_salarialAvgOrderByAggregateInput = {
    id_concepto?: SortOrder
    id_concepto_salarial?: SortOrder
  }

  export type concepto_salarialMaxOrderByAggregateInput = {
    id_concepto?: SortOrder
    nombre?: SortOrder
    recurrente?: SortOrder
    afecta_IPS?: SortOrder
    afecta_aguinaldo?: SortOrder
    id_concepto_salarial?: SortOrder
  }

  export type concepto_salarialMinOrderByAggregateInput = {
    id_concepto?: SortOrder
    nombre?: SortOrder
    recurrente?: SortOrder
    afecta_IPS?: SortOrder
    afecta_aguinaldo?: SortOrder
    id_concepto_salarial?: SortOrder
  }

  export type concepto_salarialSumOrderByAggregateInput = {
    id_concepto?: SortOrder
    id_concepto_salarial?: SortOrder
  }

  export type departamentoCountOrderByAggregateInput = {
    id_departamento?: SortOrder
    nombre?: SortOrder
    ubicacion?: SortOrder
  }

  export type departamentoAvgOrderByAggregateInput = {
    id_departamento?: SortOrder
  }

  export type departamentoMaxOrderByAggregateInput = {
    id_departamento?: SortOrder
    nombre?: SortOrder
    ubicacion?: SortOrder
  }

  export type departamentoMinOrderByAggregateInput = {
    id_departamento?: SortOrder
    nombre?: SortOrder
    ubicacion?: SortOrder
  }

  export type departamentoSumOrderByAggregateInput = {
    id_departamento?: SortOrder
  }

  export type UsuarioScalarRelationFilter = {
    is?: usuarioWhereInput
    isNot?: usuarioWhereInput
  }

  export type NominaScalarRelationFilter = {
    is?: nominaWhereInput
    isNot?: nominaWhereInput
  }

  export type detalle_nominaCountOrderByAggregateInput = {
    id_detalle?: SortOrder
    total_descuentos?: SortOrder
    total_bonificaciones?: SortOrder
    neto_a_cobrar?: SortOrder
    creado_por?: SortOrder
    id_nomina?: SortOrder
    id_empleado?: SortOrder
  }

  export type detalle_nominaAvgOrderByAggregateInput = {
    id_detalle?: SortOrder
    total_descuentos?: SortOrder
    total_bonificaciones?: SortOrder
    neto_a_cobrar?: SortOrder
    creado_por?: SortOrder
    id_nomina?: SortOrder
    id_empleado?: SortOrder
  }

  export type detalle_nominaMaxOrderByAggregateInput = {
    id_detalle?: SortOrder
    total_descuentos?: SortOrder
    total_bonificaciones?: SortOrder
    neto_a_cobrar?: SortOrder
    creado_por?: SortOrder
    id_nomina?: SortOrder
    id_empleado?: SortOrder
  }

  export type detalle_nominaMinOrderByAggregateInput = {
    id_detalle?: SortOrder
    total_descuentos?: SortOrder
    total_bonificaciones?: SortOrder
    neto_a_cobrar?: SortOrder
    creado_por?: SortOrder
    id_nomina?: SortOrder
    id_empleado?: SortOrder
  }

  export type detalle_nominaSumOrderByAggregateInput = {
    id_detalle?: SortOrder
    total_descuentos?: SortOrder
    total_bonificaciones?: SortOrder
    neto_a_cobrar?: SortOrder
    creado_por?: SortOrder
    id_nomina?: SortOrder
    id_empleado?: SortOrder
  }

  export type Detalle_nominaScalarRelationFilter = {
    is?: detalle_nominaWhereInput
    isNot?: detalle_nominaWhereInput
  }

  export type detalle_nomina_conceptoCountOrderByAggregateInput = {
    id_detalle_conceptos?: SortOrder
    monto?: SortOrder
    id_concepto?: SortOrder
    id_detalle?: SortOrder
    origen?: SortOrder
  }

  export type detalle_nomina_conceptoAvgOrderByAggregateInput = {
    id_detalle_conceptos?: SortOrder
    monto?: SortOrder
    id_concepto?: SortOrder
    id_detalle?: SortOrder
  }

  export type detalle_nomina_conceptoMaxOrderByAggregateInput = {
    id_detalle_conceptos?: SortOrder
    monto?: SortOrder
    id_concepto?: SortOrder
    id_detalle?: SortOrder
    origen?: SortOrder
  }

  export type detalle_nomina_conceptoMinOrderByAggregateInput = {
    id_detalle_conceptos?: SortOrder
    monto?: SortOrder
    id_concepto?: SortOrder
    id_detalle?: SortOrder
    origen?: SortOrder
  }

  export type detalle_nomina_conceptoSumOrderByAggregateInput = {
    id_detalle_conceptos?: SortOrder
    monto?: SortOrder
    id_concepto?: SortOrder
    id_detalle?: SortOrder
  }

  export type DateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type DateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type Detalle_nominaListRelationFilter = {
    every?: detalle_nominaWhereInput
    some?: detalle_nominaWhereInput
    none?: detalle_nominaWhereInput
  }

  export type Estado_civilScalarRelationFilter = {
    is?: estado_civilWhereInput
    isNot?: estado_civilWhereInput
  }

  export type HijoListRelationFilter = {
    every?: hijoWhereInput
    some?: hijoWhereInput
    none?: hijoWhereInput
  }

  export type UsuarioNullableScalarRelationFilter = {
    is?: usuarioWhereInput | null
    isNot?: usuarioWhereInput | null
  }

  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

  export type detalle_nominaOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type hijoOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type empleadoCountOrderByAggregateInput = {
    id_empleado?: SortOrder
    nombre?: SortOrder
    cedula?: SortOrder
    apellido?: SortOrder
    fecha_nacimiento?: SortOrder
    correo?: SortOrder
    fecha_ingreso?: SortOrder
    telefono?: SortOrder
    fecha_egreso?: SortOrder
    direccion?: SortOrder
    afiliado_IPS?: SortOrder
    id_estado_civil?: SortOrder
  }

  export type empleadoAvgOrderByAggregateInput = {
    id_empleado?: SortOrder
    id_estado_civil?: SortOrder
  }

  export type empleadoMaxOrderByAggregateInput = {
    id_empleado?: SortOrder
    nombre?: SortOrder
    cedula?: SortOrder
    apellido?: SortOrder
    fecha_nacimiento?: SortOrder
    correo?: SortOrder
    fecha_ingreso?: SortOrder
    telefono?: SortOrder
    fecha_egreso?: SortOrder
    direccion?: SortOrder
    afiliado_IPS?: SortOrder
    id_estado_civil?: SortOrder
  }

  export type empleadoMinOrderByAggregateInput = {
    id_empleado?: SortOrder
    nombre?: SortOrder
    cedula?: SortOrder
    apellido?: SortOrder
    fecha_nacimiento?: SortOrder
    correo?: SortOrder
    fecha_ingreso?: SortOrder
    telefono?: SortOrder
    fecha_egreso?: SortOrder
    direccion?: SortOrder
    afiliado_IPS?: SortOrder
    id_estado_civil?: SortOrder
  }

  export type empleadoSumOrderByAggregateInput = {
    id_empleado?: SortOrder
    id_estado_civil?: SortOrder
  }

  export type DateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type DateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type EmpleadoListRelationFilter = {
    every?: empleadoWhereInput
    some?: empleadoWhereInput
    none?: empleadoWhereInput
  }

  export type empleadoOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type estado_civilCountOrderByAggregateInput = {
    id_estado?: SortOrder
    descripcion?: SortOrder
  }

  export type estado_civilAvgOrderByAggregateInput = {
    id_estado?: SortOrder
  }

  export type estado_civilMaxOrderByAggregateInput = {
    id_estado?: SortOrder
    descripcion?: SortOrder
  }

  export type estado_civilMinOrderByAggregateInput = {
    id_estado?: SortOrder
    descripcion?: SortOrder
  }

  export type estado_civilSumOrderByAggregateInput = {
    id_estado?: SortOrder
  }

  export type hijoCountOrderByAggregateInput = {
    id_hijo?: SortOrder
    nombre?: SortOrder
    certificado_vida_residencia?: SortOrder
    fecha_vencimiento_certificado?: SortOrder
    id_empleado?: SortOrder
    discapacidad?: SortOrder
    fecha_nacimiento?: SortOrder
    certificado_nacimiento?: SortOrder
  }

  export type hijoAvgOrderByAggregateInput = {
    id_hijo?: SortOrder
    id_empleado?: SortOrder
  }

  export type hijoMaxOrderByAggregateInput = {
    id_hijo?: SortOrder
    nombre?: SortOrder
    certificado_vida_residencia?: SortOrder
    fecha_vencimiento_certificado?: SortOrder
    id_empleado?: SortOrder
    discapacidad?: SortOrder
    fecha_nacimiento?: SortOrder
    certificado_nacimiento?: SortOrder
  }

  export type hijoMinOrderByAggregateInput = {
    id_hijo?: SortOrder
    nombre?: SortOrder
    certificado_vida_residencia?: SortOrder
    fecha_vencimiento_certificado?: SortOrder
    id_empleado?: SortOrder
    discapacidad?: SortOrder
    fecha_nacimiento?: SortOrder
    certificado_nacimiento?: SortOrder
  }

  export type hijoSumOrderByAggregateInput = {
    id_hijo?: SortOrder
    id_empleado?: SortOrder
  }

  export type CargoScalarRelationFilter = {
    is?: cargoWhereInput
    isNot?: cargoWhereInput
  }

  export type historial_cargoCountOrderByAggregateInput = {
    id_historial?: SortOrder
    id_empleado?: SortOrder
    Fecha_Inicio?: SortOrder
    fecha_fin?: SortOrder
    Salario_Asignado?: SortOrder
    id_cargo?: SortOrder
  }

  export type historial_cargoAvgOrderByAggregateInput = {
    id_historial?: SortOrder
    id_empleado?: SortOrder
    Salario_Asignado?: SortOrder
    id_cargo?: SortOrder
  }

  export type historial_cargoMaxOrderByAggregateInput = {
    id_historial?: SortOrder
    id_empleado?: SortOrder
    Fecha_Inicio?: SortOrder
    fecha_fin?: SortOrder
    Salario_Asignado?: SortOrder
    id_cargo?: SortOrder
  }

  export type historial_cargoMinOrderByAggregateInput = {
    id_historial?: SortOrder
    id_empleado?: SortOrder
    Fecha_Inicio?: SortOrder
    fecha_fin?: SortOrder
    Salario_Asignado?: SortOrder
    id_cargo?: SortOrder
  }

  export type historial_cargoSumOrderByAggregateInput = {
    id_historial?: SortOrder
    id_empleado?: SortOrder
    Salario_Asignado?: SortOrder
    id_cargo?: SortOrder
  }

  export type nominaCountOrderByAggregateInput = {
    id_nomina?: SortOrder
    anho?: SortOrder
    fecha_generacion?: SortOrder
    estado?: SortOrder
    mes?: SortOrder
  }

  export type nominaAvgOrderByAggregateInput = {
    id_nomina?: SortOrder
    anho?: SortOrder
    mes?: SortOrder
  }

  export type nominaMaxOrderByAggregateInput = {
    id_nomina?: SortOrder
    anho?: SortOrder
    fecha_generacion?: SortOrder
    estado?: SortOrder
    mes?: SortOrder
  }

  export type nominaMinOrderByAggregateInput = {
    id_nomina?: SortOrder
    anho?: SortOrder
    fecha_generacion?: SortOrder
    estado?: SortOrder
    mes?: SortOrder
  }

  export type nominaSumOrderByAggregateInput = {
    id_nomina?: SortOrder
    anho?: SortOrder
    mes?: SortOrder
  }

  export type registro_accesoCountOrderByAggregateInput = {
    id_registro?: SortOrder
    id_usuario?: SortOrder
    ip_origen?: SortOrder
    accion?: SortOrder
    fecha_hora?: SortOrder
  }

  export type registro_accesoAvgOrderByAggregateInput = {
    id_registro?: SortOrder
    id_usuario?: SortOrder
  }

  export type registro_accesoMaxOrderByAggregateInput = {
    id_registro?: SortOrder
    id_usuario?: SortOrder
    ip_origen?: SortOrder
    accion?: SortOrder
    fecha_hora?: SortOrder
  }

  export type registro_accesoMinOrderByAggregateInput = {
    id_registro?: SortOrder
    id_usuario?: SortOrder
    ip_origen?: SortOrder
    accion?: SortOrder
    fecha_hora?: SortOrder
  }

  export type registro_accesoSumOrderByAggregateInput = {
    id_registro?: SortOrder
    id_usuario?: SortOrder
  }

  export type UsuarioListRelationFilter = {
    every?: usuarioWhereInput
    some?: usuarioWhereInput
    none?: usuarioWhereInput
  }

  export type usuarioOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type rol_usuarioCountOrderByAggregateInput = {
    id_rol_usuario?: SortOrder
    nombre?: SortOrder
    descripcion_rol?: SortOrder
  }

  export type rol_usuarioAvgOrderByAggregateInput = {
    id_rol_usuario?: SortOrder
  }

  export type rol_usuarioMaxOrderByAggregateInput = {
    id_rol_usuario?: SortOrder
    nombre?: SortOrder
    descripcion_rol?: SortOrder
  }

  export type rol_usuarioMinOrderByAggregateInput = {
    id_rol_usuario?: SortOrder
    nombre?: SortOrder
    descripcion_rol?: SortOrder
  }

  export type rol_usuarioSumOrderByAggregateInput = {
    id_rol_usuario?: SortOrder
  }

  export type Concepto_salarialListRelationFilter = {
    every?: concepto_salarialWhereInput
    some?: concepto_salarialWhereInput
    none?: concepto_salarialWhereInput
  }

  export type concepto_salarialOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type tipo_concepto_salarialCountOrderByAggregateInput = {
    id_concepto_salarial?: SortOrder
    descripcion?: SortOrder
  }

  export type tipo_concepto_salarialAvgOrderByAggregateInput = {
    id_concepto_salarial?: SortOrder
  }

  export type tipo_concepto_salarialMaxOrderByAggregateInput = {
    id_concepto_salarial?: SortOrder
    descripcion?: SortOrder
  }

  export type tipo_concepto_salarialMinOrderByAggregateInput = {
    id_concepto_salarial?: SortOrder
    descripcion?: SortOrder
  }

  export type tipo_concepto_salarialSumOrderByAggregateInput = {
    id_concepto_salarial?: SortOrder
  }

  export type Registro_accesoListRelationFilter = {
    every?: registro_accesoWhereInput
    some?: registro_accesoWhereInput
    none?: registro_accesoWhereInput
  }

  export type Rol_usuarioScalarRelationFilter = {
    is?: rol_usuarioWhereInput
    isNot?: rol_usuarioWhereInput
  }

  export type registro_accesoOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type usuarioCountOrderByAggregateInput = {
    id_usuario?: SortOrder
    nombre_usuario?: SortOrder
    estado?: SortOrder
    clave?: SortOrder
    id_rol_usuario?: SortOrder
    id_empleado?: SortOrder
  }

  export type usuarioAvgOrderByAggregateInput = {
    id_usuario?: SortOrder
    id_rol_usuario?: SortOrder
    id_empleado?: SortOrder
  }

  export type usuarioMaxOrderByAggregateInput = {
    id_usuario?: SortOrder
    nombre_usuario?: SortOrder
    estado?: SortOrder
    clave?: SortOrder
    id_rol_usuario?: SortOrder
    id_empleado?: SortOrder
  }

  export type usuarioMinOrderByAggregateInput = {
    id_usuario?: SortOrder
    nombre_usuario?: SortOrder
    estado?: SortOrder
    clave?: SortOrder
    id_rol_usuario?: SortOrder
    id_empleado?: SortOrder
  }

  export type usuarioSumOrderByAggregateInput = {
    id_usuario?: SortOrder
    id_rol_usuario?: SortOrder
    id_empleado?: SortOrder
  }

  export type categoria_salarialCreateNestedOneWithoutCargoInput = {
    create?: XOR<categoria_salarialCreateWithoutCargoInput, categoria_salarialUncheckedCreateWithoutCargoInput>
    connectOrCreate?: categoria_salarialCreateOrConnectWithoutCargoInput
    connect?: categoria_salarialWhereUniqueInput
  }

  export type departamentoCreateNestedOneWithoutCargoInput = {
    create?: XOR<departamentoCreateWithoutCargoInput, departamentoUncheckedCreateWithoutCargoInput>
    connectOrCreate?: departamentoCreateOrConnectWithoutCargoInput
    connect?: departamentoWhereUniqueInput
  }

  export type historial_cargoCreateNestedManyWithoutCargoInput = {
    create?: XOR<historial_cargoCreateWithoutCargoInput, historial_cargoUncheckedCreateWithoutCargoInput> | historial_cargoCreateWithoutCargoInput[] | historial_cargoUncheckedCreateWithoutCargoInput[]
    connectOrCreate?: historial_cargoCreateOrConnectWithoutCargoInput | historial_cargoCreateOrConnectWithoutCargoInput[]
    createMany?: historial_cargoCreateManyCargoInputEnvelope
    connect?: historial_cargoWhereUniqueInput | historial_cargoWhereUniqueInput[]
  }

  export type historial_cargoUncheckedCreateNestedManyWithoutCargoInput = {
    create?: XOR<historial_cargoCreateWithoutCargoInput, historial_cargoUncheckedCreateWithoutCargoInput> | historial_cargoCreateWithoutCargoInput[] | historial_cargoUncheckedCreateWithoutCargoInput[]
    connectOrCreate?: historial_cargoCreateOrConnectWithoutCargoInput | historial_cargoCreateOrConnectWithoutCargoInput[]
    createMany?: historial_cargoCreateManyCargoInputEnvelope
    connect?: historial_cargoWhereUniqueInput | historial_cargoWhereUniqueInput[]
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type BoolFieldUpdateOperationsInput = {
    set?: boolean
  }

  export type categoria_salarialUpdateOneRequiredWithoutCargoNestedInput = {
    create?: XOR<categoria_salarialCreateWithoutCargoInput, categoria_salarialUncheckedCreateWithoutCargoInput>
    connectOrCreate?: categoria_salarialCreateOrConnectWithoutCargoInput
    upsert?: categoria_salarialUpsertWithoutCargoInput
    connect?: categoria_salarialWhereUniqueInput
    update?: XOR<XOR<categoria_salarialUpdateToOneWithWhereWithoutCargoInput, categoria_salarialUpdateWithoutCargoInput>, categoria_salarialUncheckedUpdateWithoutCargoInput>
  }

  export type departamentoUpdateOneRequiredWithoutCargoNestedInput = {
    create?: XOR<departamentoCreateWithoutCargoInput, departamentoUncheckedCreateWithoutCargoInput>
    connectOrCreate?: departamentoCreateOrConnectWithoutCargoInput
    upsert?: departamentoUpsertWithoutCargoInput
    connect?: departamentoWhereUniqueInput
    update?: XOR<XOR<departamentoUpdateToOneWithWhereWithoutCargoInput, departamentoUpdateWithoutCargoInput>, departamentoUncheckedUpdateWithoutCargoInput>
  }

  export type historial_cargoUpdateManyWithoutCargoNestedInput = {
    create?: XOR<historial_cargoCreateWithoutCargoInput, historial_cargoUncheckedCreateWithoutCargoInput> | historial_cargoCreateWithoutCargoInput[] | historial_cargoUncheckedCreateWithoutCargoInput[]
    connectOrCreate?: historial_cargoCreateOrConnectWithoutCargoInput | historial_cargoCreateOrConnectWithoutCargoInput[]
    upsert?: historial_cargoUpsertWithWhereUniqueWithoutCargoInput | historial_cargoUpsertWithWhereUniqueWithoutCargoInput[]
    createMany?: historial_cargoCreateManyCargoInputEnvelope
    set?: historial_cargoWhereUniqueInput | historial_cargoWhereUniqueInput[]
    disconnect?: historial_cargoWhereUniqueInput | historial_cargoWhereUniqueInput[]
    delete?: historial_cargoWhereUniqueInput | historial_cargoWhereUniqueInput[]
    connect?: historial_cargoWhereUniqueInput | historial_cargoWhereUniqueInput[]
    update?: historial_cargoUpdateWithWhereUniqueWithoutCargoInput | historial_cargoUpdateWithWhereUniqueWithoutCargoInput[]
    updateMany?: historial_cargoUpdateManyWithWhereWithoutCargoInput | historial_cargoUpdateManyWithWhereWithoutCargoInput[]
    deleteMany?: historial_cargoScalarWhereInput | historial_cargoScalarWhereInput[]
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type historial_cargoUncheckedUpdateManyWithoutCargoNestedInput = {
    create?: XOR<historial_cargoCreateWithoutCargoInput, historial_cargoUncheckedCreateWithoutCargoInput> | historial_cargoCreateWithoutCargoInput[] | historial_cargoUncheckedCreateWithoutCargoInput[]
    connectOrCreate?: historial_cargoCreateOrConnectWithoutCargoInput | historial_cargoCreateOrConnectWithoutCargoInput[]
    upsert?: historial_cargoUpsertWithWhereUniqueWithoutCargoInput | historial_cargoUpsertWithWhereUniqueWithoutCargoInput[]
    createMany?: historial_cargoCreateManyCargoInputEnvelope
    set?: historial_cargoWhereUniqueInput | historial_cargoWhereUniqueInput[]
    disconnect?: historial_cargoWhereUniqueInput | historial_cargoWhereUniqueInput[]
    delete?: historial_cargoWhereUniqueInput | historial_cargoWhereUniqueInput[]
    connect?: historial_cargoWhereUniqueInput | historial_cargoWhereUniqueInput[]
    update?: historial_cargoUpdateWithWhereUniqueWithoutCargoInput | historial_cargoUpdateWithWhereUniqueWithoutCargoInput[]
    updateMany?: historial_cargoUpdateManyWithWhereWithoutCargoInput | historial_cargoUpdateManyWithWhereWithoutCargoInput[]
    deleteMany?: historial_cargoScalarWhereInput | historial_cargoScalarWhereInput[]
  }

  export type cargoCreateNestedManyWithoutCategoria_salarialInput = {
    create?: XOR<cargoCreateWithoutCategoria_salarialInput, cargoUncheckedCreateWithoutCategoria_salarialInput> | cargoCreateWithoutCategoria_salarialInput[] | cargoUncheckedCreateWithoutCategoria_salarialInput[]
    connectOrCreate?: cargoCreateOrConnectWithoutCategoria_salarialInput | cargoCreateOrConnectWithoutCategoria_salarialInput[]
    createMany?: cargoCreateManyCategoria_salarialInputEnvelope
    connect?: cargoWhereUniqueInput | cargoWhereUniqueInput[]
  }

  export type cargoUncheckedCreateNestedManyWithoutCategoria_salarialInput = {
    create?: XOR<cargoCreateWithoutCategoria_salarialInput, cargoUncheckedCreateWithoutCategoria_salarialInput> | cargoCreateWithoutCategoria_salarialInput[] | cargoUncheckedCreateWithoutCategoria_salarialInput[]
    connectOrCreate?: cargoCreateOrConnectWithoutCategoria_salarialInput | cargoCreateOrConnectWithoutCategoria_salarialInput[]
    createMany?: cargoCreateManyCategoria_salarialInputEnvelope
    connect?: cargoWhereUniqueInput | cargoWhereUniqueInput[]
  }

  export type cargoUpdateManyWithoutCategoria_salarialNestedInput = {
    create?: XOR<cargoCreateWithoutCategoria_salarialInput, cargoUncheckedCreateWithoutCategoria_salarialInput> | cargoCreateWithoutCategoria_salarialInput[] | cargoUncheckedCreateWithoutCategoria_salarialInput[]
    connectOrCreate?: cargoCreateOrConnectWithoutCategoria_salarialInput | cargoCreateOrConnectWithoutCategoria_salarialInput[]
    upsert?: cargoUpsertWithWhereUniqueWithoutCategoria_salarialInput | cargoUpsertWithWhereUniqueWithoutCategoria_salarialInput[]
    createMany?: cargoCreateManyCategoria_salarialInputEnvelope
    set?: cargoWhereUniqueInput | cargoWhereUniqueInput[]
    disconnect?: cargoWhereUniqueInput | cargoWhereUniqueInput[]
    delete?: cargoWhereUniqueInput | cargoWhereUniqueInput[]
    connect?: cargoWhereUniqueInput | cargoWhereUniqueInput[]
    update?: cargoUpdateWithWhereUniqueWithoutCategoria_salarialInput | cargoUpdateWithWhereUniqueWithoutCategoria_salarialInput[]
    updateMany?: cargoUpdateManyWithWhereWithoutCategoria_salarialInput | cargoUpdateManyWithWhereWithoutCategoria_salarialInput[]
    deleteMany?: cargoScalarWhereInput | cargoScalarWhereInput[]
  }

  export type cargoUncheckedUpdateManyWithoutCategoria_salarialNestedInput = {
    create?: XOR<cargoCreateWithoutCategoria_salarialInput, cargoUncheckedCreateWithoutCategoria_salarialInput> | cargoCreateWithoutCategoria_salarialInput[] | cargoUncheckedCreateWithoutCategoria_salarialInput[]
    connectOrCreate?: cargoCreateOrConnectWithoutCategoria_salarialInput | cargoCreateOrConnectWithoutCategoria_salarialInput[]
    upsert?: cargoUpsertWithWhereUniqueWithoutCategoria_salarialInput | cargoUpsertWithWhereUniqueWithoutCategoria_salarialInput[]
    createMany?: cargoCreateManyCategoria_salarialInputEnvelope
    set?: cargoWhereUniqueInput | cargoWhereUniqueInput[]
    disconnect?: cargoWhereUniqueInput | cargoWhereUniqueInput[]
    delete?: cargoWhereUniqueInput | cargoWhereUniqueInput[]
    connect?: cargoWhereUniqueInput | cargoWhereUniqueInput[]
    update?: cargoUpdateWithWhereUniqueWithoutCategoria_salarialInput | cargoUpdateWithWhereUniqueWithoutCategoria_salarialInput[]
    updateMany?: cargoUpdateManyWithWhereWithoutCategoria_salarialInput | cargoUpdateManyWithWhereWithoutCategoria_salarialInput[]
    deleteMany?: cargoScalarWhereInput | cargoScalarWhereInput[]
  }

  export type concepto_salarialCreateNestedOneWithoutConcepto_empleadoInput = {
    create?: XOR<concepto_salarialCreateWithoutConcepto_empleadoInput, concepto_salarialUncheckedCreateWithoutConcepto_empleadoInput>
    connectOrCreate?: concepto_salarialCreateOrConnectWithoutConcepto_empleadoInput
    connect?: concepto_salarialWhereUniqueInput
  }

  export type empleadoCreateNestedOneWithoutConcepto_empleadoInput = {
    create?: XOR<empleadoCreateWithoutConcepto_empleadoInput, empleadoUncheckedCreateWithoutConcepto_empleadoInput>
    connectOrCreate?: empleadoCreateOrConnectWithoutConcepto_empleadoInput
    connect?: empleadoWhereUniqueInput
  }

  export type DecimalFieldUpdateOperationsInput = {
    set?: Decimal | DecimalJsLike | number | string
    increment?: Decimal | DecimalJsLike | number | string
    decrement?: Decimal | DecimalJsLike | number | string
    multiply?: Decimal | DecimalJsLike | number | string
    divide?: Decimal | DecimalJsLike | number | string
  }

  export type concepto_salarialUpdateOneRequiredWithoutConcepto_empleadoNestedInput = {
    create?: XOR<concepto_salarialCreateWithoutConcepto_empleadoInput, concepto_salarialUncheckedCreateWithoutConcepto_empleadoInput>
    connectOrCreate?: concepto_salarialCreateOrConnectWithoutConcepto_empleadoInput
    upsert?: concepto_salarialUpsertWithoutConcepto_empleadoInput
    connect?: concepto_salarialWhereUniqueInput
    update?: XOR<XOR<concepto_salarialUpdateToOneWithWhereWithoutConcepto_empleadoInput, concepto_salarialUpdateWithoutConcepto_empleadoInput>, concepto_salarialUncheckedUpdateWithoutConcepto_empleadoInput>
  }

  export type empleadoUpdateOneRequiredWithoutConcepto_empleadoNestedInput = {
    create?: XOR<empleadoCreateWithoutConcepto_empleadoInput, empleadoUncheckedCreateWithoutConcepto_empleadoInput>
    connectOrCreate?: empleadoCreateOrConnectWithoutConcepto_empleadoInput
    upsert?: empleadoUpsertWithoutConcepto_empleadoInput
    connect?: empleadoWhereUniqueInput
    update?: XOR<XOR<empleadoUpdateToOneWithWhereWithoutConcepto_empleadoInput, empleadoUpdateWithoutConcepto_empleadoInput>, empleadoUncheckedUpdateWithoutConcepto_empleadoInput>
  }

  export type concepto_empleadoCreateNestedManyWithoutConcepto_salarialInput = {
    create?: XOR<concepto_empleadoCreateWithoutConcepto_salarialInput, concepto_empleadoUncheckedCreateWithoutConcepto_salarialInput> | concepto_empleadoCreateWithoutConcepto_salarialInput[] | concepto_empleadoUncheckedCreateWithoutConcepto_salarialInput[]
    connectOrCreate?: concepto_empleadoCreateOrConnectWithoutConcepto_salarialInput | concepto_empleadoCreateOrConnectWithoutConcepto_salarialInput[]
    createMany?: concepto_empleadoCreateManyConcepto_salarialInputEnvelope
    connect?: concepto_empleadoWhereUniqueInput | concepto_empleadoWhereUniqueInput[]
  }

  export type tipo_concepto_salarialCreateNestedOneWithoutConcepto_salarialInput = {
    create?: XOR<tipo_concepto_salarialCreateWithoutConcepto_salarialInput, tipo_concepto_salarialUncheckedCreateWithoutConcepto_salarialInput>
    connectOrCreate?: tipo_concepto_salarialCreateOrConnectWithoutConcepto_salarialInput
    connect?: tipo_concepto_salarialWhereUniqueInput
  }

  export type detalle_nomina_conceptoCreateNestedManyWithoutConcepto_salarialInput = {
    create?: XOR<detalle_nomina_conceptoCreateWithoutConcepto_salarialInput, detalle_nomina_conceptoUncheckedCreateWithoutConcepto_salarialInput> | detalle_nomina_conceptoCreateWithoutConcepto_salarialInput[] | detalle_nomina_conceptoUncheckedCreateWithoutConcepto_salarialInput[]
    connectOrCreate?: detalle_nomina_conceptoCreateOrConnectWithoutConcepto_salarialInput | detalle_nomina_conceptoCreateOrConnectWithoutConcepto_salarialInput[]
    createMany?: detalle_nomina_conceptoCreateManyConcepto_salarialInputEnvelope
    connect?: detalle_nomina_conceptoWhereUniqueInput | detalle_nomina_conceptoWhereUniqueInput[]
  }

  export type concepto_empleadoUncheckedCreateNestedManyWithoutConcepto_salarialInput = {
    create?: XOR<concepto_empleadoCreateWithoutConcepto_salarialInput, concepto_empleadoUncheckedCreateWithoutConcepto_salarialInput> | concepto_empleadoCreateWithoutConcepto_salarialInput[] | concepto_empleadoUncheckedCreateWithoutConcepto_salarialInput[]
    connectOrCreate?: concepto_empleadoCreateOrConnectWithoutConcepto_salarialInput | concepto_empleadoCreateOrConnectWithoutConcepto_salarialInput[]
    createMany?: concepto_empleadoCreateManyConcepto_salarialInputEnvelope
    connect?: concepto_empleadoWhereUniqueInput | concepto_empleadoWhereUniqueInput[]
  }

  export type detalle_nomina_conceptoUncheckedCreateNestedManyWithoutConcepto_salarialInput = {
    create?: XOR<detalle_nomina_conceptoCreateWithoutConcepto_salarialInput, detalle_nomina_conceptoUncheckedCreateWithoutConcepto_salarialInput> | detalle_nomina_conceptoCreateWithoutConcepto_salarialInput[] | detalle_nomina_conceptoUncheckedCreateWithoutConcepto_salarialInput[]
    connectOrCreate?: detalle_nomina_conceptoCreateOrConnectWithoutConcepto_salarialInput | detalle_nomina_conceptoCreateOrConnectWithoutConcepto_salarialInput[]
    createMany?: detalle_nomina_conceptoCreateManyConcepto_salarialInputEnvelope
    connect?: detalle_nomina_conceptoWhereUniqueInput | detalle_nomina_conceptoWhereUniqueInput[]
  }

  export type concepto_empleadoUpdateManyWithoutConcepto_salarialNestedInput = {
    create?: XOR<concepto_empleadoCreateWithoutConcepto_salarialInput, concepto_empleadoUncheckedCreateWithoutConcepto_salarialInput> | concepto_empleadoCreateWithoutConcepto_salarialInput[] | concepto_empleadoUncheckedCreateWithoutConcepto_salarialInput[]
    connectOrCreate?: concepto_empleadoCreateOrConnectWithoutConcepto_salarialInput | concepto_empleadoCreateOrConnectWithoutConcepto_salarialInput[]
    upsert?: concepto_empleadoUpsertWithWhereUniqueWithoutConcepto_salarialInput | concepto_empleadoUpsertWithWhereUniqueWithoutConcepto_salarialInput[]
    createMany?: concepto_empleadoCreateManyConcepto_salarialInputEnvelope
    set?: concepto_empleadoWhereUniqueInput | concepto_empleadoWhereUniqueInput[]
    disconnect?: concepto_empleadoWhereUniqueInput | concepto_empleadoWhereUniqueInput[]
    delete?: concepto_empleadoWhereUniqueInput | concepto_empleadoWhereUniqueInput[]
    connect?: concepto_empleadoWhereUniqueInput | concepto_empleadoWhereUniqueInput[]
    update?: concepto_empleadoUpdateWithWhereUniqueWithoutConcepto_salarialInput | concepto_empleadoUpdateWithWhereUniqueWithoutConcepto_salarialInput[]
    updateMany?: concepto_empleadoUpdateManyWithWhereWithoutConcepto_salarialInput | concepto_empleadoUpdateManyWithWhereWithoutConcepto_salarialInput[]
    deleteMany?: concepto_empleadoScalarWhereInput | concepto_empleadoScalarWhereInput[]
  }

  export type tipo_concepto_salarialUpdateOneRequiredWithoutConcepto_salarialNestedInput = {
    create?: XOR<tipo_concepto_salarialCreateWithoutConcepto_salarialInput, tipo_concepto_salarialUncheckedCreateWithoutConcepto_salarialInput>
    connectOrCreate?: tipo_concepto_salarialCreateOrConnectWithoutConcepto_salarialInput
    upsert?: tipo_concepto_salarialUpsertWithoutConcepto_salarialInput
    connect?: tipo_concepto_salarialWhereUniqueInput
    update?: XOR<XOR<tipo_concepto_salarialUpdateToOneWithWhereWithoutConcepto_salarialInput, tipo_concepto_salarialUpdateWithoutConcepto_salarialInput>, tipo_concepto_salarialUncheckedUpdateWithoutConcepto_salarialInput>
  }

  export type detalle_nomina_conceptoUpdateManyWithoutConcepto_salarialNestedInput = {
    create?: XOR<detalle_nomina_conceptoCreateWithoutConcepto_salarialInput, detalle_nomina_conceptoUncheckedCreateWithoutConcepto_salarialInput> | detalle_nomina_conceptoCreateWithoutConcepto_salarialInput[] | detalle_nomina_conceptoUncheckedCreateWithoutConcepto_salarialInput[]
    connectOrCreate?: detalle_nomina_conceptoCreateOrConnectWithoutConcepto_salarialInput | detalle_nomina_conceptoCreateOrConnectWithoutConcepto_salarialInput[]
    upsert?: detalle_nomina_conceptoUpsertWithWhereUniqueWithoutConcepto_salarialInput | detalle_nomina_conceptoUpsertWithWhereUniqueWithoutConcepto_salarialInput[]
    createMany?: detalle_nomina_conceptoCreateManyConcepto_salarialInputEnvelope
    set?: detalle_nomina_conceptoWhereUniqueInput | detalle_nomina_conceptoWhereUniqueInput[]
    disconnect?: detalle_nomina_conceptoWhereUniqueInput | detalle_nomina_conceptoWhereUniqueInput[]
    delete?: detalle_nomina_conceptoWhereUniqueInput | detalle_nomina_conceptoWhereUniqueInput[]
    connect?: detalle_nomina_conceptoWhereUniqueInput | detalle_nomina_conceptoWhereUniqueInput[]
    update?: detalle_nomina_conceptoUpdateWithWhereUniqueWithoutConcepto_salarialInput | detalle_nomina_conceptoUpdateWithWhereUniqueWithoutConcepto_salarialInput[]
    updateMany?: detalle_nomina_conceptoUpdateManyWithWhereWithoutConcepto_salarialInput | detalle_nomina_conceptoUpdateManyWithWhereWithoutConcepto_salarialInput[]
    deleteMany?: detalle_nomina_conceptoScalarWhereInput | detalle_nomina_conceptoScalarWhereInput[]
  }

  export type concepto_empleadoUncheckedUpdateManyWithoutConcepto_salarialNestedInput = {
    create?: XOR<concepto_empleadoCreateWithoutConcepto_salarialInput, concepto_empleadoUncheckedCreateWithoutConcepto_salarialInput> | concepto_empleadoCreateWithoutConcepto_salarialInput[] | concepto_empleadoUncheckedCreateWithoutConcepto_salarialInput[]
    connectOrCreate?: concepto_empleadoCreateOrConnectWithoutConcepto_salarialInput | concepto_empleadoCreateOrConnectWithoutConcepto_salarialInput[]
    upsert?: concepto_empleadoUpsertWithWhereUniqueWithoutConcepto_salarialInput | concepto_empleadoUpsertWithWhereUniqueWithoutConcepto_salarialInput[]
    createMany?: concepto_empleadoCreateManyConcepto_salarialInputEnvelope
    set?: concepto_empleadoWhereUniqueInput | concepto_empleadoWhereUniqueInput[]
    disconnect?: concepto_empleadoWhereUniqueInput | concepto_empleadoWhereUniqueInput[]
    delete?: concepto_empleadoWhereUniqueInput | concepto_empleadoWhereUniqueInput[]
    connect?: concepto_empleadoWhereUniqueInput | concepto_empleadoWhereUniqueInput[]
    update?: concepto_empleadoUpdateWithWhereUniqueWithoutConcepto_salarialInput | concepto_empleadoUpdateWithWhereUniqueWithoutConcepto_salarialInput[]
    updateMany?: concepto_empleadoUpdateManyWithWhereWithoutConcepto_salarialInput | concepto_empleadoUpdateManyWithWhereWithoutConcepto_salarialInput[]
    deleteMany?: concepto_empleadoScalarWhereInput | concepto_empleadoScalarWhereInput[]
  }

  export type detalle_nomina_conceptoUncheckedUpdateManyWithoutConcepto_salarialNestedInput = {
    create?: XOR<detalle_nomina_conceptoCreateWithoutConcepto_salarialInput, detalle_nomina_conceptoUncheckedCreateWithoutConcepto_salarialInput> | detalle_nomina_conceptoCreateWithoutConcepto_salarialInput[] | detalle_nomina_conceptoUncheckedCreateWithoutConcepto_salarialInput[]
    connectOrCreate?: detalle_nomina_conceptoCreateOrConnectWithoutConcepto_salarialInput | detalle_nomina_conceptoCreateOrConnectWithoutConcepto_salarialInput[]
    upsert?: detalle_nomina_conceptoUpsertWithWhereUniqueWithoutConcepto_salarialInput | detalle_nomina_conceptoUpsertWithWhereUniqueWithoutConcepto_salarialInput[]
    createMany?: detalle_nomina_conceptoCreateManyConcepto_salarialInputEnvelope
    set?: detalle_nomina_conceptoWhereUniqueInput | detalle_nomina_conceptoWhereUniqueInput[]
    disconnect?: detalle_nomina_conceptoWhereUniqueInput | detalle_nomina_conceptoWhereUniqueInput[]
    delete?: detalle_nomina_conceptoWhereUniqueInput | detalle_nomina_conceptoWhereUniqueInput[]
    connect?: detalle_nomina_conceptoWhereUniqueInput | detalle_nomina_conceptoWhereUniqueInput[]
    update?: detalle_nomina_conceptoUpdateWithWhereUniqueWithoutConcepto_salarialInput | detalle_nomina_conceptoUpdateWithWhereUniqueWithoutConcepto_salarialInput[]
    updateMany?: detalle_nomina_conceptoUpdateManyWithWhereWithoutConcepto_salarialInput | detalle_nomina_conceptoUpdateManyWithWhereWithoutConcepto_salarialInput[]
    deleteMany?: detalle_nomina_conceptoScalarWhereInput | detalle_nomina_conceptoScalarWhereInput[]
  }

  export type cargoCreateNestedManyWithoutDepartamento_refInput = {
    create?: XOR<cargoCreateWithoutDepartamento_refInput, cargoUncheckedCreateWithoutDepartamento_refInput> | cargoCreateWithoutDepartamento_refInput[] | cargoUncheckedCreateWithoutDepartamento_refInput[]
    connectOrCreate?: cargoCreateOrConnectWithoutDepartamento_refInput | cargoCreateOrConnectWithoutDepartamento_refInput[]
    createMany?: cargoCreateManyDepartamento_refInputEnvelope
    connect?: cargoWhereUniqueInput | cargoWhereUniqueInput[]
  }

  export type cargoUncheckedCreateNestedManyWithoutDepartamento_refInput = {
    create?: XOR<cargoCreateWithoutDepartamento_refInput, cargoUncheckedCreateWithoutDepartamento_refInput> | cargoCreateWithoutDepartamento_refInput[] | cargoUncheckedCreateWithoutDepartamento_refInput[]
    connectOrCreate?: cargoCreateOrConnectWithoutDepartamento_refInput | cargoCreateOrConnectWithoutDepartamento_refInput[]
    createMany?: cargoCreateManyDepartamento_refInputEnvelope
    connect?: cargoWhereUniqueInput | cargoWhereUniqueInput[]
  }

  export type cargoUpdateManyWithoutDepartamento_refNestedInput = {
    create?: XOR<cargoCreateWithoutDepartamento_refInput, cargoUncheckedCreateWithoutDepartamento_refInput> | cargoCreateWithoutDepartamento_refInput[] | cargoUncheckedCreateWithoutDepartamento_refInput[]
    connectOrCreate?: cargoCreateOrConnectWithoutDepartamento_refInput | cargoCreateOrConnectWithoutDepartamento_refInput[]
    upsert?: cargoUpsertWithWhereUniqueWithoutDepartamento_refInput | cargoUpsertWithWhereUniqueWithoutDepartamento_refInput[]
    createMany?: cargoCreateManyDepartamento_refInputEnvelope
    set?: cargoWhereUniqueInput | cargoWhereUniqueInput[]
    disconnect?: cargoWhereUniqueInput | cargoWhereUniqueInput[]
    delete?: cargoWhereUniqueInput | cargoWhereUniqueInput[]
    connect?: cargoWhereUniqueInput | cargoWhereUniqueInput[]
    update?: cargoUpdateWithWhereUniqueWithoutDepartamento_refInput | cargoUpdateWithWhereUniqueWithoutDepartamento_refInput[]
    updateMany?: cargoUpdateManyWithWhereWithoutDepartamento_refInput | cargoUpdateManyWithWhereWithoutDepartamento_refInput[]
    deleteMany?: cargoScalarWhereInput | cargoScalarWhereInput[]
  }

  export type cargoUncheckedUpdateManyWithoutDepartamento_refNestedInput = {
    create?: XOR<cargoCreateWithoutDepartamento_refInput, cargoUncheckedCreateWithoutDepartamento_refInput> | cargoCreateWithoutDepartamento_refInput[] | cargoUncheckedCreateWithoutDepartamento_refInput[]
    connectOrCreate?: cargoCreateOrConnectWithoutDepartamento_refInput | cargoCreateOrConnectWithoutDepartamento_refInput[]
    upsert?: cargoUpsertWithWhereUniqueWithoutDepartamento_refInput | cargoUpsertWithWhereUniqueWithoutDepartamento_refInput[]
    createMany?: cargoCreateManyDepartamento_refInputEnvelope
    set?: cargoWhereUniqueInput | cargoWhereUniqueInput[]
    disconnect?: cargoWhereUniqueInput | cargoWhereUniqueInput[]
    delete?: cargoWhereUniqueInput | cargoWhereUniqueInput[]
    connect?: cargoWhereUniqueInput | cargoWhereUniqueInput[]
    update?: cargoUpdateWithWhereUniqueWithoutDepartamento_refInput | cargoUpdateWithWhereUniqueWithoutDepartamento_refInput[]
    updateMany?: cargoUpdateManyWithWhereWithoutDepartamento_refInput | cargoUpdateManyWithWhereWithoutDepartamento_refInput[]
    deleteMany?: cargoScalarWhereInput | cargoScalarWhereInput[]
  }

  export type usuarioCreateNestedOneWithoutDetalle_nominaInput = {
    create?: XOR<usuarioCreateWithoutDetalle_nominaInput, usuarioUncheckedCreateWithoutDetalle_nominaInput>
    connectOrCreate?: usuarioCreateOrConnectWithoutDetalle_nominaInput
    connect?: usuarioWhereUniqueInput
  }

  export type empleadoCreateNestedOneWithoutDetalle_nominaInput = {
    create?: XOR<empleadoCreateWithoutDetalle_nominaInput, empleadoUncheckedCreateWithoutDetalle_nominaInput>
    connectOrCreate?: empleadoCreateOrConnectWithoutDetalle_nominaInput
    connect?: empleadoWhereUniqueInput
  }

  export type nominaCreateNestedOneWithoutDetalle_nominaInput = {
    create?: XOR<nominaCreateWithoutDetalle_nominaInput, nominaUncheckedCreateWithoutDetalle_nominaInput>
    connectOrCreate?: nominaCreateOrConnectWithoutDetalle_nominaInput
    connect?: nominaWhereUniqueInput
  }

  export type detalle_nomina_conceptoCreateNestedManyWithoutDetalle_nominaInput = {
    create?: XOR<detalle_nomina_conceptoCreateWithoutDetalle_nominaInput, detalle_nomina_conceptoUncheckedCreateWithoutDetalle_nominaInput> | detalle_nomina_conceptoCreateWithoutDetalle_nominaInput[] | detalle_nomina_conceptoUncheckedCreateWithoutDetalle_nominaInput[]
    connectOrCreate?: detalle_nomina_conceptoCreateOrConnectWithoutDetalle_nominaInput | detalle_nomina_conceptoCreateOrConnectWithoutDetalle_nominaInput[]
    createMany?: detalle_nomina_conceptoCreateManyDetalle_nominaInputEnvelope
    connect?: detalle_nomina_conceptoWhereUniqueInput | detalle_nomina_conceptoWhereUniqueInput[]
  }

  export type detalle_nomina_conceptoUncheckedCreateNestedManyWithoutDetalle_nominaInput = {
    create?: XOR<detalle_nomina_conceptoCreateWithoutDetalle_nominaInput, detalle_nomina_conceptoUncheckedCreateWithoutDetalle_nominaInput> | detalle_nomina_conceptoCreateWithoutDetalle_nominaInput[] | detalle_nomina_conceptoUncheckedCreateWithoutDetalle_nominaInput[]
    connectOrCreate?: detalle_nomina_conceptoCreateOrConnectWithoutDetalle_nominaInput | detalle_nomina_conceptoCreateOrConnectWithoutDetalle_nominaInput[]
    createMany?: detalle_nomina_conceptoCreateManyDetalle_nominaInputEnvelope
    connect?: detalle_nomina_conceptoWhereUniqueInput | detalle_nomina_conceptoWhereUniqueInput[]
  }

  export type usuarioUpdateOneRequiredWithoutDetalle_nominaNestedInput = {
    create?: XOR<usuarioCreateWithoutDetalle_nominaInput, usuarioUncheckedCreateWithoutDetalle_nominaInput>
    connectOrCreate?: usuarioCreateOrConnectWithoutDetalle_nominaInput
    upsert?: usuarioUpsertWithoutDetalle_nominaInput
    connect?: usuarioWhereUniqueInput
    update?: XOR<XOR<usuarioUpdateToOneWithWhereWithoutDetalle_nominaInput, usuarioUpdateWithoutDetalle_nominaInput>, usuarioUncheckedUpdateWithoutDetalle_nominaInput>
  }

  export type empleadoUpdateOneRequiredWithoutDetalle_nominaNestedInput = {
    create?: XOR<empleadoCreateWithoutDetalle_nominaInput, empleadoUncheckedCreateWithoutDetalle_nominaInput>
    connectOrCreate?: empleadoCreateOrConnectWithoutDetalle_nominaInput
    upsert?: empleadoUpsertWithoutDetalle_nominaInput
    connect?: empleadoWhereUniqueInput
    update?: XOR<XOR<empleadoUpdateToOneWithWhereWithoutDetalle_nominaInput, empleadoUpdateWithoutDetalle_nominaInput>, empleadoUncheckedUpdateWithoutDetalle_nominaInput>
  }

  export type nominaUpdateOneRequiredWithoutDetalle_nominaNestedInput = {
    create?: XOR<nominaCreateWithoutDetalle_nominaInput, nominaUncheckedCreateWithoutDetalle_nominaInput>
    connectOrCreate?: nominaCreateOrConnectWithoutDetalle_nominaInput
    upsert?: nominaUpsertWithoutDetalle_nominaInput
    connect?: nominaWhereUniqueInput
    update?: XOR<XOR<nominaUpdateToOneWithWhereWithoutDetalle_nominaInput, nominaUpdateWithoutDetalle_nominaInput>, nominaUncheckedUpdateWithoutDetalle_nominaInput>
  }

  export type detalle_nomina_conceptoUpdateManyWithoutDetalle_nominaNestedInput = {
    create?: XOR<detalle_nomina_conceptoCreateWithoutDetalle_nominaInput, detalle_nomina_conceptoUncheckedCreateWithoutDetalle_nominaInput> | detalle_nomina_conceptoCreateWithoutDetalle_nominaInput[] | detalle_nomina_conceptoUncheckedCreateWithoutDetalle_nominaInput[]
    connectOrCreate?: detalle_nomina_conceptoCreateOrConnectWithoutDetalle_nominaInput | detalle_nomina_conceptoCreateOrConnectWithoutDetalle_nominaInput[]
    upsert?: detalle_nomina_conceptoUpsertWithWhereUniqueWithoutDetalle_nominaInput | detalle_nomina_conceptoUpsertWithWhereUniqueWithoutDetalle_nominaInput[]
    createMany?: detalle_nomina_conceptoCreateManyDetalle_nominaInputEnvelope
    set?: detalle_nomina_conceptoWhereUniqueInput | detalle_nomina_conceptoWhereUniqueInput[]
    disconnect?: detalle_nomina_conceptoWhereUniqueInput | detalle_nomina_conceptoWhereUniqueInput[]
    delete?: detalle_nomina_conceptoWhereUniqueInput | detalle_nomina_conceptoWhereUniqueInput[]
    connect?: detalle_nomina_conceptoWhereUniqueInput | detalle_nomina_conceptoWhereUniqueInput[]
    update?: detalle_nomina_conceptoUpdateWithWhereUniqueWithoutDetalle_nominaInput | detalle_nomina_conceptoUpdateWithWhereUniqueWithoutDetalle_nominaInput[]
    updateMany?: detalle_nomina_conceptoUpdateManyWithWhereWithoutDetalle_nominaInput | detalle_nomina_conceptoUpdateManyWithWhereWithoutDetalle_nominaInput[]
    deleteMany?: detalle_nomina_conceptoScalarWhereInput | detalle_nomina_conceptoScalarWhereInput[]
  }

  export type detalle_nomina_conceptoUncheckedUpdateManyWithoutDetalle_nominaNestedInput = {
    create?: XOR<detalle_nomina_conceptoCreateWithoutDetalle_nominaInput, detalle_nomina_conceptoUncheckedCreateWithoutDetalle_nominaInput> | detalle_nomina_conceptoCreateWithoutDetalle_nominaInput[] | detalle_nomina_conceptoUncheckedCreateWithoutDetalle_nominaInput[]
    connectOrCreate?: detalle_nomina_conceptoCreateOrConnectWithoutDetalle_nominaInput | detalle_nomina_conceptoCreateOrConnectWithoutDetalle_nominaInput[]
    upsert?: detalle_nomina_conceptoUpsertWithWhereUniqueWithoutDetalle_nominaInput | detalle_nomina_conceptoUpsertWithWhereUniqueWithoutDetalle_nominaInput[]
    createMany?: detalle_nomina_conceptoCreateManyDetalle_nominaInputEnvelope
    set?: detalle_nomina_conceptoWhereUniqueInput | detalle_nomina_conceptoWhereUniqueInput[]
    disconnect?: detalle_nomina_conceptoWhereUniqueInput | detalle_nomina_conceptoWhereUniqueInput[]
    delete?: detalle_nomina_conceptoWhereUniqueInput | detalle_nomina_conceptoWhereUniqueInput[]
    connect?: detalle_nomina_conceptoWhereUniqueInput | detalle_nomina_conceptoWhereUniqueInput[]
    update?: detalle_nomina_conceptoUpdateWithWhereUniqueWithoutDetalle_nominaInput | detalle_nomina_conceptoUpdateWithWhereUniqueWithoutDetalle_nominaInput[]
    updateMany?: detalle_nomina_conceptoUpdateManyWithWhereWithoutDetalle_nominaInput | detalle_nomina_conceptoUpdateManyWithWhereWithoutDetalle_nominaInput[]
    deleteMany?: detalle_nomina_conceptoScalarWhereInput | detalle_nomina_conceptoScalarWhereInput[]
  }

  export type concepto_salarialCreateNestedOneWithoutDetalle_nomina_conceptoInput = {
    create?: XOR<concepto_salarialCreateWithoutDetalle_nomina_conceptoInput, concepto_salarialUncheckedCreateWithoutDetalle_nomina_conceptoInput>
    connectOrCreate?: concepto_salarialCreateOrConnectWithoutDetalle_nomina_conceptoInput
    connect?: concepto_salarialWhereUniqueInput
  }

  export type detalle_nominaCreateNestedOneWithoutDetalle_nomina_conceptoInput = {
    create?: XOR<detalle_nominaCreateWithoutDetalle_nomina_conceptoInput, detalle_nominaUncheckedCreateWithoutDetalle_nomina_conceptoInput>
    connectOrCreate?: detalle_nominaCreateOrConnectWithoutDetalle_nomina_conceptoInput
    connect?: detalle_nominaWhereUniqueInput
  }

  export type concepto_salarialUpdateOneRequiredWithoutDetalle_nomina_conceptoNestedInput = {
    create?: XOR<concepto_salarialCreateWithoutDetalle_nomina_conceptoInput, concepto_salarialUncheckedCreateWithoutDetalle_nomina_conceptoInput>
    connectOrCreate?: concepto_salarialCreateOrConnectWithoutDetalle_nomina_conceptoInput
    upsert?: concepto_salarialUpsertWithoutDetalle_nomina_conceptoInput
    connect?: concepto_salarialWhereUniqueInput
    update?: XOR<XOR<concepto_salarialUpdateToOneWithWhereWithoutDetalle_nomina_conceptoInput, concepto_salarialUpdateWithoutDetalle_nomina_conceptoInput>, concepto_salarialUncheckedUpdateWithoutDetalle_nomina_conceptoInput>
  }

  export type detalle_nominaUpdateOneRequiredWithoutDetalle_nomina_conceptoNestedInput = {
    create?: XOR<detalle_nominaCreateWithoutDetalle_nomina_conceptoInput, detalle_nominaUncheckedCreateWithoutDetalle_nomina_conceptoInput>
    connectOrCreate?: detalle_nominaCreateOrConnectWithoutDetalle_nomina_conceptoInput
    upsert?: detalle_nominaUpsertWithoutDetalle_nomina_conceptoInput
    connect?: detalle_nominaWhereUniqueInput
    update?: XOR<XOR<detalle_nominaUpdateToOneWithWhereWithoutDetalle_nomina_conceptoInput, detalle_nominaUpdateWithoutDetalle_nomina_conceptoInput>, detalle_nominaUncheckedUpdateWithoutDetalle_nomina_conceptoInput>
  }

  export type concepto_empleadoCreateNestedManyWithoutEmpleadoInput = {
    create?: XOR<concepto_empleadoCreateWithoutEmpleadoInput, concepto_empleadoUncheckedCreateWithoutEmpleadoInput> | concepto_empleadoCreateWithoutEmpleadoInput[] | concepto_empleadoUncheckedCreateWithoutEmpleadoInput[]
    connectOrCreate?: concepto_empleadoCreateOrConnectWithoutEmpleadoInput | concepto_empleadoCreateOrConnectWithoutEmpleadoInput[]
    createMany?: concepto_empleadoCreateManyEmpleadoInputEnvelope
    connect?: concepto_empleadoWhereUniqueInput | concepto_empleadoWhereUniqueInput[]
  }

  export type detalle_nominaCreateNestedManyWithoutEmpleadoInput = {
    create?: XOR<detalle_nominaCreateWithoutEmpleadoInput, detalle_nominaUncheckedCreateWithoutEmpleadoInput> | detalle_nominaCreateWithoutEmpleadoInput[] | detalle_nominaUncheckedCreateWithoutEmpleadoInput[]
    connectOrCreate?: detalle_nominaCreateOrConnectWithoutEmpleadoInput | detalle_nominaCreateOrConnectWithoutEmpleadoInput[]
    createMany?: detalle_nominaCreateManyEmpleadoInputEnvelope
    connect?: detalle_nominaWhereUniqueInput | detalle_nominaWhereUniqueInput[]
  }

  export type estado_civilCreateNestedOneWithoutEmpleadoInput = {
    create?: XOR<estado_civilCreateWithoutEmpleadoInput, estado_civilUncheckedCreateWithoutEmpleadoInput>
    connectOrCreate?: estado_civilCreateOrConnectWithoutEmpleadoInput
    connect?: estado_civilWhereUniqueInput
  }

  export type hijoCreateNestedManyWithoutEmpleadoInput = {
    create?: XOR<hijoCreateWithoutEmpleadoInput, hijoUncheckedCreateWithoutEmpleadoInput> | hijoCreateWithoutEmpleadoInput[] | hijoUncheckedCreateWithoutEmpleadoInput[]
    connectOrCreate?: hijoCreateOrConnectWithoutEmpleadoInput | hijoCreateOrConnectWithoutEmpleadoInput[]
    createMany?: hijoCreateManyEmpleadoInputEnvelope
    connect?: hijoWhereUniqueInput | hijoWhereUniqueInput[]
  }

  export type historial_cargoCreateNestedManyWithoutEmpleadoInput = {
    create?: XOR<historial_cargoCreateWithoutEmpleadoInput, historial_cargoUncheckedCreateWithoutEmpleadoInput> | historial_cargoCreateWithoutEmpleadoInput[] | historial_cargoUncheckedCreateWithoutEmpleadoInput[]
    connectOrCreate?: historial_cargoCreateOrConnectWithoutEmpleadoInput | historial_cargoCreateOrConnectWithoutEmpleadoInput[]
    createMany?: historial_cargoCreateManyEmpleadoInputEnvelope
    connect?: historial_cargoWhereUniqueInput | historial_cargoWhereUniqueInput[]
  }

  export type usuarioCreateNestedOneWithoutEmpleadoInput = {
    create?: XOR<usuarioCreateWithoutEmpleadoInput, usuarioUncheckedCreateWithoutEmpleadoInput>
    connectOrCreate?: usuarioCreateOrConnectWithoutEmpleadoInput
    connect?: usuarioWhereUniqueInput
  }

  export type concepto_empleadoUncheckedCreateNestedManyWithoutEmpleadoInput = {
    create?: XOR<concepto_empleadoCreateWithoutEmpleadoInput, concepto_empleadoUncheckedCreateWithoutEmpleadoInput> | concepto_empleadoCreateWithoutEmpleadoInput[] | concepto_empleadoUncheckedCreateWithoutEmpleadoInput[]
    connectOrCreate?: concepto_empleadoCreateOrConnectWithoutEmpleadoInput | concepto_empleadoCreateOrConnectWithoutEmpleadoInput[]
    createMany?: concepto_empleadoCreateManyEmpleadoInputEnvelope
    connect?: concepto_empleadoWhereUniqueInput | concepto_empleadoWhereUniqueInput[]
  }

  export type detalle_nominaUncheckedCreateNestedManyWithoutEmpleadoInput = {
    create?: XOR<detalle_nominaCreateWithoutEmpleadoInput, detalle_nominaUncheckedCreateWithoutEmpleadoInput> | detalle_nominaCreateWithoutEmpleadoInput[] | detalle_nominaUncheckedCreateWithoutEmpleadoInput[]
    connectOrCreate?: detalle_nominaCreateOrConnectWithoutEmpleadoInput | detalle_nominaCreateOrConnectWithoutEmpleadoInput[]
    createMany?: detalle_nominaCreateManyEmpleadoInputEnvelope
    connect?: detalle_nominaWhereUniqueInput | detalle_nominaWhereUniqueInput[]
  }

  export type hijoUncheckedCreateNestedManyWithoutEmpleadoInput = {
    create?: XOR<hijoCreateWithoutEmpleadoInput, hijoUncheckedCreateWithoutEmpleadoInput> | hijoCreateWithoutEmpleadoInput[] | hijoUncheckedCreateWithoutEmpleadoInput[]
    connectOrCreate?: hijoCreateOrConnectWithoutEmpleadoInput | hijoCreateOrConnectWithoutEmpleadoInput[]
    createMany?: hijoCreateManyEmpleadoInputEnvelope
    connect?: hijoWhereUniqueInput | hijoWhereUniqueInput[]
  }

  export type historial_cargoUncheckedCreateNestedManyWithoutEmpleadoInput = {
    create?: XOR<historial_cargoCreateWithoutEmpleadoInput, historial_cargoUncheckedCreateWithoutEmpleadoInput> | historial_cargoCreateWithoutEmpleadoInput[] | historial_cargoUncheckedCreateWithoutEmpleadoInput[]
    connectOrCreate?: historial_cargoCreateOrConnectWithoutEmpleadoInput | historial_cargoCreateOrConnectWithoutEmpleadoInput[]
    createMany?: historial_cargoCreateManyEmpleadoInputEnvelope
    connect?: historial_cargoWhereUniqueInput | historial_cargoWhereUniqueInput[]
  }

  export type usuarioUncheckedCreateNestedOneWithoutEmpleadoInput = {
    create?: XOR<usuarioCreateWithoutEmpleadoInput, usuarioUncheckedCreateWithoutEmpleadoInput>
    connectOrCreate?: usuarioCreateOrConnectWithoutEmpleadoInput
    connect?: usuarioWhereUniqueInput
  }

  export type DateTimeFieldUpdateOperationsInput = {
    set?: Date | string
  }

  export type NullableDateTimeFieldUpdateOperationsInput = {
    set?: Date | string | null
  }

  export type concepto_empleadoUpdateManyWithoutEmpleadoNestedInput = {
    create?: XOR<concepto_empleadoCreateWithoutEmpleadoInput, concepto_empleadoUncheckedCreateWithoutEmpleadoInput> | concepto_empleadoCreateWithoutEmpleadoInput[] | concepto_empleadoUncheckedCreateWithoutEmpleadoInput[]
    connectOrCreate?: concepto_empleadoCreateOrConnectWithoutEmpleadoInput | concepto_empleadoCreateOrConnectWithoutEmpleadoInput[]
    upsert?: concepto_empleadoUpsertWithWhereUniqueWithoutEmpleadoInput | concepto_empleadoUpsertWithWhereUniqueWithoutEmpleadoInput[]
    createMany?: concepto_empleadoCreateManyEmpleadoInputEnvelope
    set?: concepto_empleadoWhereUniqueInput | concepto_empleadoWhereUniqueInput[]
    disconnect?: concepto_empleadoWhereUniqueInput | concepto_empleadoWhereUniqueInput[]
    delete?: concepto_empleadoWhereUniqueInput | concepto_empleadoWhereUniqueInput[]
    connect?: concepto_empleadoWhereUniqueInput | concepto_empleadoWhereUniqueInput[]
    update?: concepto_empleadoUpdateWithWhereUniqueWithoutEmpleadoInput | concepto_empleadoUpdateWithWhereUniqueWithoutEmpleadoInput[]
    updateMany?: concepto_empleadoUpdateManyWithWhereWithoutEmpleadoInput | concepto_empleadoUpdateManyWithWhereWithoutEmpleadoInput[]
    deleteMany?: concepto_empleadoScalarWhereInput | concepto_empleadoScalarWhereInput[]
  }

  export type detalle_nominaUpdateManyWithoutEmpleadoNestedInput = {
    create?: XOR<detalle_nominaCreateWithoutEmpleadoInput, detalle_nominaUncheckedCreateWithoutEmpleadoInput> | detalle_nominaCreateWithoutEmpleadoInput[] | detalle_nominaUncheckedCreateWithoutEmpleadoInput[]
    connectOrCreate?: detalle_nominaCreateOrConnectWithoutEmpleadoInput | detalle_nominaCreateOrConnectWithoutEmpleadoInput[]
    upsert?: detalle_nominaUpsertWithWhereUniqueWithoutEmpleadoInput | detalle_nominaUpsertWithWhereUniqueWithoutEmpleadoInput[]
    createMany?: detalle_nominaCreateManyEmpleadoInputEnvelope
    set?: detalle_nominaWhereUniqueInput | detalle_nominaWhereUniqueInput[]
    disconnect?: detalle_nominaWhereUniqueInput | detalle_nominaWhereUniqueInput[]
    delete?: detalle_nominaWhereUniqueInput | detalle_nominaWhereUniqueInput[]
    connect?: detalle_nominaWhereUniqueInput | detalle_nominaWhereUniqueInput[]
    update?: detalle_nominaUpdateWithWhereUniqueWithoutEmpleadoInput | detalle_nominaUpdateWithWhereUniqueWithoutEmpleadoInput[]
    updateMany?: detalle_nominaUpdateManyWithWhereWithoutEmpleadoInput | detalle_nominaUpdateManyWithWhereWithoutEmpleadoInput[]
    deleteMany?: detalle_nominaScalarWhereInput | detalle_nominaScalarWhereInput[]
  }

  export type estado_civilUpdateOneRequiredWithoutEmpleadoNestedInput = {
    create?: XOR<estado_civilCreateWithoutEmpleadoInput, estado_civilUncheckedCreateWithoutEmpleadoInput>
    connectOrCreate?: estado_civilCreateOrConnectWithoutEmpleadoInput
    upsert?: estado_civilUpsertWithoutEmpleadoInput
    connect?: estado_civilWhereUniqueInput
    update?: XOR<XOR<estado_civilUpdateToOneWithWhereWithoutEmpleadoInput, estado_civilUpdateWithoutEmpleadoInput>, estado_civilUncheckedUpdateWithoutEmpleadoInput>
  }

  export type hijoUpdateManyWithoutEmpleadoNestedInput = {
    create?: XOR<hijoCreateWithoutEmpleadoInput, hijoUncheckedCreateWithoutEmpleadoInput> | hijoCreateWithoutEmpleadoInput[] | hijoUncheckedCreateWithoutEmpleadoInput[]
    connectOrCreate?: hijoCreateOrConnectWithoutEmpleadoInput | hijoCreateOrConnectWithoutEmpleadoInput[]
    upsert?: hijoUpsertWithWhereUniqueWithoutEmpleadoInput | hijoUpsertWithWhereUniqueWithoutEmpleadoInput[]
    createMany?: hijoCreateManyEmpleadoInputEnvelope
    set?: hijoWhereUniqueInput | hijoWhereUniqueInput[]
    disconnect?: hijoWhereUniqueInput | hijoWhereUniqueInput[]
    delete?: hijoWhereUniqueInput | hijoWhereUniqueInput[]
    connect?: hijoWhereUniqueInput | hijoWhereUniqueInput[]
    update?: hijoUpdateWithWhereUniqueWithoutEmpleadoInput | hijoUpdateWithWhereUniqueWithoutEmpleadoInput[]
    updateMany?: hijoUpdateManyWithWhereWithoutEmpleadoInput | hijoUpdateManyWithWhereWithoutEmpleadoInput[]
    deleteMany?: hijoScalarWhereInput | hijoScalarWhereInput[]
  }

  export type historial_cargoUpdateManyWithoutEmpleadoNestedInput = {
    create?: XOR<historial_cargoCreateWithoutEmpleadoInput, historial_cargoUncheckedCreateWithoutEmpleadoInput> | historial_cargoCreateWithoutEmpleadoInput[] | historial_cargoUncheckedCreateWithoutEmpleadoInput[]
    connectOrCreate?: historial_cargoCreateOrConnectWithoutEmpleadoInput | historial_cargoCreateOrConnectWithoutEmpleadoInput[]
    upsert?: historial_cargoUpsertWithWhereUniqueWithoutEmpleadoInput | historial_cargoUpsertWithWhereUniqueWithoutEmpleadoInput[]
    createMany?: historial_cargoCreateManyEmpleadoInputEnvelope
    set?: historial_cargoWhereUniqueInput | historial_cargoWhereUniqueInput[]
    disconnect?: historial_cargoWhereUniqueInput | historial_cargoWhereUniqueInput[]
    delete?: historial_cargoWhereUniqueInput | historial_cargoWhereUniqueInput[]
    connect?: historial_cargoWhereUniqueInput | historial_cargoWhereUniqueInput[]
    update?: historial_cargoUpdateWithWhereUniqueWithoutEmpleadoInput | historial_cargoUpdateWithWhereUniqueWithoutEmpleadoInput[]
    updateMany?: historial_cargoUpdateManyWithWhereWithoutEmpleadoInput | historial_cargoUpdateManyWithWhereWithoutEmpleadoInput[]
    deleteMany?: historial_cargoScalarWhereInput | historial_cargoScalarWhereInput[]
  }

  export type usuarioUpdateOneWithoutEmpleadoNestedInput = {
    create?: XOR<usuarioCreateWithoutEmpleadoInput, usuarioUncheckedCreateWithoutEmpleadoInput>
    connectOrCreate?: usuarioCreateOrConnectWithoutEmpleadoInput
    upsert?: usuarioUpsertWithoutEmpleadoInput
    disconnect?: usuarioWhereInput | boolean
    delete?: usuarioWhereInput | boolean
    connect?: usuarioWhereUniqueInput
    update?: XOR<XOR<usuarioUpdateToOneWithWhereWithoutEmpleadoInput, usuarioUpdateWithoutEmpleadoInput>, usuarioUncheckedUpdateWithoutEmpleadoInput>
  }

  export type concepto_empleadoUncheckedUpdateManyWithoutEmpleadoNestedInput = {
    create?: XOR<concepto_empleadoCreateWithoutEmpleadoInput, concepto_empleadoUncheckedCreateWithoutEmpleadoInput> | concepto_empleadoCreateWithoutEmpleadoInput[] | concepto_empleadoUncheckedCreateWithoutEmpleadoInput[]
    connectOrCreate?: concepto_empleadoCreateOrConnectWithoutEmpleadoInput | concepto_empleadoCreateOrConnectWithoutEmpleadoInput[]
    upsert?: concepto_empleadoUpsertWithWhereUniqueWithoutEmpleadoInput | concepto_empleadoUpsertWithWhereUniqueWithoutEmpleadoInput[]
    createMany?: concepto_empleadoCreateManyEmpleadoInputEnvelope
    set?: concepto_empleadoWhereUniqueInput | concepto_empleadoWhereUniqueInput[]
    disconnect?: concepto_empleadoWhereUniqueInput | concepto_empleadoWhereUniqueInput[]
    delete?: concepto_empleadoWhereUniqueInput | concepto_empleadoWhereUniqueInput[]
    connect?: concepto_empleadoWhereUniqueInput | concepto_empleadoWhereUniqueInput[]
    update?: concepto_empleadoUpdateWithWhereUniqueWithoutEmpleadoInput | concepto_empleadoUpdateWithWhereUniqueWithoutEmpleadoInput[]
    updateMany?: concepto_empleadoUpdateManyWithWhereWithoutEmpleadoInput | concepto_empleadoUpdateManyWithWhereWithoutEmpleadoInput[]
    deleteMany?: concepto_empleadoScalarWhereInput | concepto_empleadoScalarWhereInput[]
  }

  export type detalle_nominaUncheckedUpdateManyWithoutEmpleadoNestedInput = {
    create?: XOR<detalle_nominaCreateWithoutEmpleadoInput, detalle_nominaUncheckedCreateWithoutEmpleadoInput> | detalle_nominaCreateWithoutEmpleadoInput[] | detalle_nominaUncheckedCreateWithoutEmpleadoInput[]
    connectOrCreate?: detalle_nominaCreateOrConnectWithoutEmpleadoInput | detalle_nominaCreateOrConnectWithoutEmpleadoInput[]
    upsert?: detalle_nominaUpsertWithWhereUniqueWithoutEmpleadoInput | detalle_nominaUpsertWithWhereUniqueWithoutEmpleadoInput[]
    createMany?: detalle_nominaCreateManyEmpleadoInputEnvelope
    set?: detalle_nominaWhereUniqueInput | detalle_nominaWhereUniqueInput[]
    disconnect?: detalle_nominaWhereUniqueInput | detalle_nominaWhereUniqueInput[]
    delete?: detalle_nominaWhereUniqueInput | detalle_nominaWhereUniqueInput[]
    connect?: detalle_nominaWhereUniqueInput | detalle_nominaWhereUniqueInput[]
    update?: detalle_nominaUpdateWithWhereUniqueWithoutEmpleadoInput | detalle_nominaUpdateWithWhereUniqueWithoutEmpleadoInput[]
    updateMany?: detalle_nominaUpdateManyWithWhereWithoutEmpleadoInput | detalle_nominaUpdateManyWithWhereWithoutEmpleadoInput[]
    deleteMany?: detalle_nominaScalarWhereInput | detalle_nominaScalarWhereInput[]
  }

  export type hijoUncheckedUpdateManyWithoutEmpleadoNestedInput = {
    create?: XOR<hijoCreateWithoutEmpleadoInput, hijoUncheckedCreateWithoutEmpleadoInput> | hijoCreateWithoutEmpleadoInput[] | hijoUncheckedCreateWithoutEmpleadoInput[]
    connectOrCreate?: hijoCreateOrConnectWithoutEmpleadoInput | hijoCreateOrConnectWithoutEmpleadoInput[]
    upsert?: hijoUpsertWithWhereUniqueWithoutEmpleadoInput | hijoUpsertWithWhereUniqueWithoutEmpleadoInput[]
    createMany?: hijoCreateManyEmpleadoInputEnvelope
    set?: hijoWhereUniqueInput | hijoWhereUniqueInput[]
    disconnect?: hijoWhereUniqueInput | hijoWhereUniqueInput[]
    delete?: hijoWhereUniqueInput | hijoWhereUniqueInput[]
    connect?: hijoWhereUniqueInput | hijoWhereUniqueInput[]
    update?: hijoUpdateWithWhereUniqueWithoutEmpleadoInput | hijoUpdateWithWhereUniqueWithoutEmpleadoInput[]
    updateMany?: hijoUpdateManyWithWhereWithoutEmpleadoInput | hijoUpdateManyWithWhereWithoutEmpleadoInput[]
    deleteMany?: hijoScalarWhereInput | hijoScalarWhereInput[]
  }

  export type historial_cargoUncheckedUpdateManyWithoutEmpleadoNestedInput = {
    create?: XOR<historial_cargoCreateWithoutEmpleadoInput, historial_cargoUncheckedCreateWithoutEmpleadoInput> | historial_cargoCreateWithoutEmpleadoInput[] | historial_cargoUncheckedCreateWithoutEmpleadoInput[]
    connectOrCreate?: historial_cargoCreateOrConnectWithoutEmpleadoInput | historial_cargoCreateOrConnectWithoutEmpleadoInput[]
    upsert?: historial_cargoUpsertWithWhereUniqueWithoutEmpleadoInput | historial_cargoUpsertWithWhereUniqueWithoutEmpleadoInput[]
    createMany?: historial_cargoCreateManyEmpleadoInputEnvelope
    set?: historial_cargoWhereUniqueInput | historial_cargoWhereUniqueInput[]
    disconnect?: historial_cargoWhereUniqueInput | historial_cargoWhereUniqueInput[]
    delete?: historial_cargoWhereUniqueInput | historial_cargoWhereUniqueInput[]
    connect?: historial_cargoWhereUniqueInput | historial_cargoWhereUniqueInput[]
    update?: historial_cargoUpdateWithWhereUniqueWithoutEmpleadoInput | historial_cargoUpdateWithWhereUniqueWithoutEmpleadoInput[]
    updateMany?: historial_cargoUpdateManyWithWhereWithoutEmpleadoInput | historial_cargoUpdateManyWithWhereWithoutEmpleadoInput[]
    deleteMany?: historial_cargoScalarWhereInput | historial_cargoScalarWhereInput[]
  }

  export type usuarioUncheckedUpdateOneWithoutEmpleadoNestedInput = {
    create?: XOR<usuarioCreateWithoutEmpleadoInput, usuarioUncheckedCreateWithoutEmpleadoInput>
    connectOrCreate?: usuarioCreateOrConnectWithoutEmpleadoInput
    upsert?: usuarioUpsertWithoutEmpleadoInput
    disconnect?: usuarioWhereInput | boolean
    delete?: usuarioWhereInput | boolean
    connect?: usuarioWhereUniqueInput
    update?: XOR<XOR<usuarioUpdateToOneWithWhereWithoutEmpleadoInput, usuarioUpdateWithoutEmpleadoInput>, usuarioUncheckedUpdateWithoutEmpleadoInput>
  }

  export type empleadoCreateNestedManyWithoutEstado_civilInput = {
    create?: XOR<empleadoCreateWithoutEstado_civilInput, empleadoUncheckedCreateWithoutEstado_civilInput> | empleadoCreateWithoutEstado_civilInput[] | empleadoUncheckedCreateWithoutEstado_civilInput[]
    connectOrCreate?: empleadoCreateOrConnectWithoutEstado_civilInput | empleadoCreateOrConnectWithoutEstado_civilInput[]
    createMany?: empleadoCreateManyEstado_civilInputEnvelope
    connect?: empleadoWhereUniqueInput | empleadoWhereUniqueInput[]
  }

  export type empleadoUncheckedCreateNestedManyWithoutEstado_civilInput = {
    create?: XOR<empleadoCreateWithoutEstado_civilInput, empleadoUncheckedCreateWithoutEstado_civilInput> | empleadoCreateWithoutEstado_civilInput[] | empleadoUncheckedCreateWithoutEstado_civilInput[]
    connectOrCreate?: empleadoCreateOrConnectWithoutEstado_civilInput | empleadoCreateOrConnectWithoutEstado_civilInput[]
    createMany?: empleadoCreateManyEstado_civilInputEnvelope
    connect?: empleadoWhereUniqueInput | empleadoWhereUniqueInput[]
  }

  export type empleadoUpdateManyWithoutEstado_civilNestedInput = {
    create?: XOR<empleadoCreateWithoutEstado_civilInput, empleadoUncheckedCreateWithoutEstado_civilInput> | empleadoCreateWithoutEstado_civilInput[] | empleadoUncheckedCreateWithoutEstado_civilInput[]
    connectOrCreate?: empleadoCreateOrConnectWithoutEstado_civilInput | empleadoCreateOrConnectWithoutEstado_civilInput[]
    upsert?: empleadoUpsertWithWhereUniqueWithoutEstado_civilInput | empleadoUpsertWithWhereUniqueWithoutEstado_civilInput[]
    createMany?: empleadoCreateManyEstado_civilInputEnvelope
    set?: empleadoWhereUniqueInput | empleadoWhereUniqueInput[]
    disconnect?: empleadoWhereUniqueInput | empleadoWhereUniqueInput[]
    delete?: empleadoWhereUniqueInput | empleadoWhereUniqueInput[]
    connect?: empleadoWhereUniqueInput | empleadoWhereUniqueInput[]
    update?: empleadoUpdateWithWhereUniqueWithoutEstado_civilInput | empleadoUpdateWithWhereUniqueWithoutEstado_civilInput[]
    updateMany?: empleadoUpdateManyWithWhereWithoutEstado_civilInput | empleadoUpdateManyWithWhereWithoutEstado_civilInput[]
    deleteMany?: empleadoScalarWhereInput | empleadoScalarWhereInput[]
  }

  export type empleadoUncheckedUpdateManyWithoutEstado_civilNestedInput = {
    create?: XOR<empleadoCreateWithoutEstado_civilInput, empleadoUncheckedCreateWithoutEstado_civilInput> | empleadoCreateWithoutEstado_civilInput[] | empleadoUncheckedCreateWithoutEstado_civilInput[]
    connectOrCreate?: empleadoCreateOrConnectWithoutEstado_civilInput | empleadoCreateOrConnectWithoutEstado_civilInput[]
    upsert?: empleadoUpsertWithWhereUniqueWithoutEstado_civilInput | empleadoUpsertWithWhereUniqueWithoutEstado_civilInput[]
    createMany?: empleadoCreateManyEstado_civilInputEnvelope
    set?: empleadoWhereUniqueInput | empleadoWhereUniqueInput[]
    disconnect?: empleadoWhereUniqueInput | empleadoWhereUniqueInput[]
    delete?: empleadoWhereUniqueInput | empleadoWhereUniqueInput[]
    connect?: empleadoWhereUniqueInput | empleadoWhereUniqueInput[]
    update?: empleadoUpdateWithWhereUniqueWithoutEstado_civilInput | empleadoUpdateWithWhereUniqueWithoutEstado_civilInput[]
    updateMany?: empleadoUpdateManyWithWhereWithoutEstado_civilInput | empleadoUpdateManyWithWhereWithoutEstado_civilInput[]
    deleteMany?: empleadoScalarWhereInput | empleadoScalarWhereInput[]
  }

  export type empleadoCreateNestedOneWithoutHijoInput = {
    create?: XOR<empleadoCreateWithoutHijoInput, empleadoUncheckedCreateWithoutHijoInput>
    connectOrCreate?: empleadoCreateOrConnectWithoutHijoInput
    connect?: empleadoWhereUniqueInput
  }

  export type empleadoUpdateOneRequiredWithoutHijoNestedInput = {
    create?: XOR<empleadoCreateWithoutHijoInput, empleadoUncheckedCreateWithoutHijoInput>
    connectOrCreate?: empleadoCreateOrConnectWithoutHijoInput
    upsert?: empleadoUpsertWithoutHijoInput
    connect?: empleadoWhereUniqueInput
    update?: XOR<XOR<empleadoUpdateToOneWithWhereWithoutHijoInput, empleadoUpdateWithoutHijoInput>, empleadoUncheckedUpdateWithoutHijoInput>
  }

  export type cargoCreateNestedOneWithoutHistorial_cargoInput = {
    create?: XOR<cargoCreateWithoutHistorial_cargoInput, cargoUncheckedCreateWithoutHistorial_cargoInput>
    connectOrCreate?: cargoCreateOrConnectWithoutHistorial_cargoInput
    connect?: cargoWhereUniqueInput
  }

  export type empleadoCreateNestedOneWithoutHistorial_cargoInput = {
    create?: XOR<empleadoCreateWithoutHistorial_cargoInput, empleadoUncheckedCreateWithoutHistorial_cargoInput>
    connectOrCreate?: empleadoCreateOrConnectWithoutHistorial_cargoInput
    connect?: empleadoWhereUniqueInput
  }

  export type cargoUpdateOneRequiredWithoutHistorial_cargoNestedInput = {
    create?: XOR<cargoCreateWithoutHistorial_cargoInput, cargoUncheckedCreateWithoutHistorial_cargoInput>
    connectOrCreate?: cargoCreateOrConnectWithoutHistorial_cargoInput
    upsert?: cargoUpsertWithoutHistorial_cargoInput
    connect?: cargoWhereUniqueInput
    update?: XOR<XOR<cargoUpdateToOneWithWhereWithoutHistorial_cargoInput, cargoUpdateWithoutHistorial_cargoInput>, cargoUncheckedUpdateWithoutHistorial_cargoInput>
  }

  export type empleadoUpdateOneRequiredWithoutHistorial_cargoNestedInput = {
    create?: XOR<empleadoCreateWithoutHistorial_cargoInput, empleadoUncheckedCreateWithoutHistorial_cargoInput>
    connectOrCreate?: empleadoCreateOrConnectWithoutHistorial_cargoInput
    upsert?: empleadoUpsertWithoutHistorial_cargoInput
    connect?: empleadoWhereUniqueInput
    update?: XOR<XOR<empleadoUpdateToOneWithWhereWithoutHistorial_cargoInput, empleadoUpdateWithoutHistorial_cargoInput>, empleadoUncheckedUpdateWithoutHistorial_cargoInput>
  }

  export type detalle_nominaCreateNestedManyWithoutNominaInput = {
    create?: XOR<detalle_nominaCreateWithoutNominaInput, detalle_nominaUncheckedCreateWithoutNominaInput> | detalle_nominaCreateWithoutNominaInput[] | detalle_nominaUncheckedCreateWithoutNominaInput[]
    connectOrCreate?: detalle_nominaCreateOrConnectWithoutNominaInput | detalle_nominaCreateOrConnectWithoutNominaInput[]
    createMany?: detalle_nominaCreateManyNominaInputEnvelope
    connect?: detalle_nominaWhereUniqueInput | detalle_nominaWhereUniqueInput[]
  }

  export type detalle_nominaUncheckedCreateNestedManyWithoutNominaInput = {
    create?: XOR<detalle_nominaCreateWithoutNominaInput, detalle_nominaUncheckedCreateWithoutNominaInput> | detalle_nominaCreateWithoutNominaInput[] | detalle_nominaUncheckedCreateWithoutNominaInput[]
    connectOrCreate?: detalle_nominaCreateOrConnectWithoutNominaInput | detalle_nominaCreateOrConnectWithoutNominaInput[]
    createMany?: detalle_nominaCreateManyNominaInputEnvelope
    connect?: detalle_nominaWhereUniqueInput | detalle_nominaWhereUniqueInput[]
  }

  export type detalle_nominaUpdateManyWithoutNominaNestedInput = {
    create?: XOR<detalle_nominaCreateWithoutNominaInput, detalle_nominaUncheckedCreateWithoutNominaInput> | detalle_nominaCreateWithoutNominaInput[] | detalle_nominaUncheckedCreateWithoutNominaInput[]
    connectOrCreate?: detalle_nominaCreateOrConnectWithoutNominaInput | detalle_nominaCreateOrConnectWithoutNominaInput[]
    upsert?: detalle_nominaUpsertWithWhereUniqueWithoutNominaInput | detalle_nominaUpsertWithWhereUniqueWithoutNominaInput[]
    createMany?: detalle_nominaCreateManyNominaInputEnvelope
    set?: detalle_nominaWhereUniqueInput | detalle_nominaWhereUniqueInput[]
    disconnect?: detalle_nominaWhereUniqueInput | detalle_nominaWhereUniqueInput[]
    delete?: detalle_nominaWhereUniqueInput | detalle_nominaWhereUniqueInput[]
    connect?: detalle_nominaWhereUniqueInput | detalle_nominaWhereUniqueInput[]
    update?: detalle_nominaUpdateWithWhereUniqueWithoutNominaInput | detalle_nominaUpdateWithWhereUniqueWithoutNominaInput[]
    updateMany?: detalle_nominaUpdateManyWithWhereWithoutNominaInput | detalle_nominaUpdateManyWithWhereWithoutNominaInput[]
    deleteMany?: detalle_nominaScalarWhereInput | detalle_nominaScalarWhereInput[]
  }

  export type detalle_nominaUncheckedUpdateManyWithoutNominaNestedInput = {
    create?: XOR<detalle_nominaCreateWithoutNominaInput, detalle_nominaUncheckedCreateWithoutNominaInput> | detalle_nominaCreateWithoutNominaInput[] | detalle_nominaUncheckedCreateWithoutNominaInput[]
    connectOrCreate?: detalle_nominaCreateOrConnectWithoutNominaInput | detalle_nominaCreateOrConnectWithoutNominaInput[]
    upsert?: detalle_nominaUpsertWithWhereUniqueWithoutNominaInput | detalle_nominaUpsertWithWhereUniqueWithoutNominaInput[]
    createMany?: detalle_nominaCreateManyNominaInputEnvelope
    set?: detalle_nominaWhereUniqueInput | detalle_nominaWhereUniqueInput[]
    disconnect?: detalle_nominaWhereUniqueInput | detalle_nominaWhereUniqueInput[]
    delete?: detalle_nominaWhereUniqueInput | detalle_nominaWhereUniqueInput[]
    connect?: detalle_nominaWhereUniqueInput | detalle_nominaWhereUniqueInput[]
    update?: detalle_nominaUpdateWithWhereUniqueWithoutNominaInput | detalle_nominaUpdateWithWhereUniqueWithoutNominaInput[]
    updateMany?: detalle_nominaUpdateManyWithWhereWithoutNominaInput | detalle_nominaUpdateManyWithWhereWithoutNominaInput[]
    deleteMany?: detalle_nominaScalarWhereInput | detalle_nominaScalarWhereInput[]
  }

  export type usuarioCreateNestedOneWithoutRegistro_accesoInput = {
    create?: XOR<usuarioCreateWithoutRegistro_accesoInput, usuarioUncheckedCreateWithoutRegistro_accesoInput>
    connectOrCreate?: usuarioCreateOrConnectWithoutRegistro_accesoInput
    connect?: usuarioWhereUniqueInput
  }

  export type usuarioUpdateOneRequiredWithoutRegistro_accesoNestedInput = {
    create?: XOR<usuarioCreateWithoutRegistro_accesoInput, usuarioUncheckedCreateWithoutRegistro_accesoInput>
    connectOrCreate?: usuarioCreateOrConnectWithoutRegistro_accesoInput
    upsert?: usuarioUpsertWithoutRegistro_accesoInput
    connect?: usuarioWhereUniqueInput
    update?: XOR<XOR<usuarioUpdateToOneWithWhereWithoutRegistro_accesoInput, usuarioUpdateWithoutRegistro_accesoInput>, usuarioUncheckedUpdateWithoutRegistro_accesoInput>
  }

  export type usuarioCreateNestedManyWithoutRol_usuarioInput = {
    create?: XOR<usuarioCreateWithoutRol_usuarioInput, usuarioUncheckedCreateWithoutRol_usuarioInput> | usuarioCreateWithoutRol_usuarioInput[] | usuarioUncheckedCreateWithoutRol_usuarioInput[]
    connectOrCreate?: usuarioCreateOrConnectWithoutRol_usuarioInput | usuarioCreateOrConnectWithoutRol_usuarioInput[]
    createMany?: usuarioCreateManyRol_usuarioInputEnvelope
    connect?: usuarioWhereUniqueInput | usuarioWhereUniqueInput[]
  }

  export type usuarioUncheckedCreateNestedManyWithoutRol_usuarioInput = {
    create?: XOR<usuarioCreateWithoutRol_usuarioInput, usuarioUncheckedCreateWithoutRol_usuarioInput> | usuarioCreateWithoutRol_usuarioInput[] | usuarioUncheckedCreateWithoutRol_usuarioInput[]
    connectOrCreate?: usuarioCreateOrConnectWithoutRol_usuarioInput | usuarioCreateOrConnectWithoutRol_usuarioInput[]
    createMany?: usuarioCreateManyRol_usuarioInputEnvelope
    connect?: usuarioWhereUniqueInput | usuarioWhereUniqueInput[]
  }

  export type usuarioUpdateManyWithoutRol_usuarioNestedInput = {
    create?: XOR<usuarioCreateWithoutRol_usuarioInput, usuarioUncheckedCreateWithoutRol_usuarioInput> | usuarioCreateWithoutRol_usuarioInput[] | usuarioUncheckedCreateWithoutRol_usuarioInput[]
    connectOrCreate?: usuarioCreateOrConnectWithoutRol_usuarioInput | usuarioCreateOrConnectWithoutRol_usuarioInput[]
    upsert?: usuarioUpsertWithWhereUniqueWithoutRol_usuarioInput | usuarioUpsertWithWhereUniqueWithoutRol_usuarioInput[]
    createMany?: usuarioCreateManyRol_usuarioInputEnvelope
    set?: usuarioWhereUniqueInput | usuarioWhereUniqueInput[]
    disconnect?: usuarioWhereUniqueInput | usuarioWhereUniqueInput[]
    delete?: usuarioWhereUniqueInput | usuarioWhereUniqueInput[]
    connect?: usuarioWhereUniqueInput | usuarioWhereUniqueInput[]
    update?: usuarioUpdateWithWhereUniqueWithoutRol_usuarioInput | usuarioUpdateWithWhereUniqueWithoutRol_usuarioInput[]
    updateMany?: usuarioUpdateManyWithWhereWithoutRol_usuarioInput | usuarioUpdateManyWithWhereWithoutRol_usuarioInput[]
    deleteMany?: usuarioScalarWhereInput | usuarioScalarWhereInput[]
  }

  export type usuarioUncheckedUpdateManyWithoutRol_usuarioNestedInput = {
    create?: XOR<usuarioCreateWithoutRol_usuarioInput, usuarioUncheckedCreateWithoutRol_usuarioInput> | usuarioCreateWithoutRol_usuarioInput[] | usuarioUncheckedCreateWithoutRol_usuarioInput[]
    connectOrCreate?: usuarioCreateOrConnectWithoutRol_usuarioInput | usuarioCreateOrConnectWithoutRol_usuarioInput[]
    upsert?: usuarioUpsertWithWhereUniqueWithoutRol_usuarioInput | usuarioUpsertWithWhereUniqueWithoutRol_usuarioInput[]
    createMany?: usuarioCreateManyRol_usuarioInputEnvelope
    set?: usuarioWhereUniqueInput | usuarioWhereUniqueInput[]
    disconnect?: usuarioWhereUniqueInput | usuarioWhereUniqueInput[]
    delete?: usuarioWhereUniqueInput | usuarioWhereUniqueInput[]
    connect?: usuarioWhereUniqueInput | usuarioWhereUniqueInput[]
    update?: usuarioUpdateWithWhereUniqueWithoutRol_usuarioInput | usuarioUpdateWithWhereUniqueWithoutRol_usuarioInput[]
    updateMany?: usuarioUpdateManyWithWhereWithoutRol_usuarioInput | usuarioUpdateManyWithWhereWithoutRol_usuarioInput[]
    deleteMany?: usuarioScalarWhereInput | usuarioScalarWhereInput[]
  }

  export type concepto_salarialCreateNestedManyWithoutTipo_concepto_salarialInput = {
    create?: XOR<concepto_salarialCreateWithoutTipo_concepto_salarialInput, concepto_salarialUncheckedCreateWithoutTipo_concepto_salarialInput> | concepto_salarialCreateWithoutTipo_concepto_salarialInput[] | concepto_salarialUncheckedCreateWithoutTipo_concepto_salarialInput[]
    connectOrCreate?: concepto_salarialCreateOrConnectWithoutTipo_concepto_salarialInput | concepto_salarialCreateOrConnectWithoutTipo_concepto_salarialInput[]
    createMany?: concepto_salarialCreateManyTipo_concepto_salarialInputEnvelope
    connect?: concepto_salarialWhereUniqueInput | concepto_salarialWhereUniqueInput[]
  }

  export type concepto_salarialUncheckedCreateNestedManyWithoutTipo_concepto_salarialInput = {
    create?: XOR<concepto_salarialCreateWithoutTipo_concepto_salarialInput, concepto_salarialUncheckedCreateWithoutTipo_concepto_salarialInput> | concepto_salarialCreateWithoutTipo_concepto_salarialInput[] | concepto_salarialUncheckedCreateWithoutTipo_concepto_salarialInput[]
    connectOrCreate?: concepto_salarialCreateOrConnectWithoutTipo_concepto_salarialInput | concepto_salarialCreateOrConnectWithoutTipo_concepto_salarialInput[]
    createMany?: concepto_salarialCreateManyTipo_concepto_salarialInputEnvelope
    connect?: concepto_salarialWhereUniqueInput | concepto_salarialWhereUniqueInput[]
  }

  export type concepto_salarialUpdateManyWithoutTipo_concepto_salarialNestedInput = {
    create?: XOR<concepto_salarialCreateWithoutTipo_concepto_salarialInput, concepto_salarialUncheckedCreateWithoutTipo_concepto_salarialInput> | concepto_salarialCreateWithoutTipo_concepto_salarialInput[] | concepto_salarialUncheckedCreateWithoutTipo_concepto_salarialInput[]
    connectOrCreate?: concepto_salarialCreateOrConnectWithoutTipo_concepto_salarialInput | concepto_salarialCreateOrConnectWithoutTipo_concepto_salarialInput[]
    upsert?: concepto_salarialUpsertWithWhereUniqueWithoutTipo_concepto_salarialInput | concepto_salarialUpsertWithWhereUniqueWithoutTipo_concepto_salarialInput[]
    createMany?: concepto_salarialCreateManyTipo_concepto_salarialInputEnvelope
    set?: concepto_salarialWhereUniqueInput | concepto_salarialWhereUniqueInput[]
    disconnect?: concepto_salarialWhereUniqueInput | concepto_salarialWhereUniqueInput[]
    delete?: concepto_salarialWhereUniqueInput | concepto_salarialWhereUniqueInput[]
    connect?: concepto_salarialWhereUniqueInput | concepto_salarialWhereUniqueInput[]
    update?: concepto_salarialUpdateWithWhereUniqueWithoutTipo_concepto_salarialInput | concepto_salarialUpdateWithWhereUniqueWithoutTipo_concepto_salarialInput[]
    updateMany?: concepto_salarialUpdateManyWithWhereWithoutTipo_concepto_salarialInput | concepto_salarialUpdateManyWithWhereWithoutTipo_concepto_salarialInput[]
    deleteMany?: concepto_salarialScalarWhereInput | concepto_salarialScalarWhereInput[]
  }

  export type concepto_salarialUncheckedUpdateManyWithoutTipo_concepto_salarialNestedInput = {
    create?: XOR<concepto_salarialCreateWithoutTipo_concepto_salarialInput, concepto_salarialUncheckedCreateWithoutTipo_concepto_salarialInput> | concepto_salarialCreateWithoutTipo_concepto_salarialInput[] | concepto_salarialUncheckedCreateWithoutTipo_concepto_salarialInput[]
    connectOrCreate?: concepto_salarialCreateOrConnectWithoutTipo_concepto_salarialInput | concepto_salarialCreateOrConnectWithoutTipo_concepto_salarialInput[]
    upsert?: concepto_salarialUpsertWithWhereUniqueWithoutTipo_concepto_salarialInput | concepto_salarialUpsertWithWhereUniqueWithoutTipo_concepto_salarialInput[]
    createMany?: concepto_salarialCreateManyTipo_concepto_salarialInputEnvelope
    set?: concepto_salarialWhereUniqueInput | concepto_salarialWhereUniqueInput[]
    disconnect?: concepto_salarialWhereUniqueInput | concepto_salarialWhereUniqueInput[]
    delete?: concepto_salarialWhereUniqueInput | concepto_salarialWhereUniqueInput[]
    connect?: concepto_salarialWhereUniqueInput | concepto_salarialWhereUniqueInput[]
    update?: concepto_salarialUpdateWithWhereUniqueWithoutTipo_concepto_salarialInput | concepto_salarialUpdateWithWhereUniqueWithoutTipo_concepto_salarialInput[]
    updateMany?: concepto_salarialUpdateManyWithWhereWithoutTipo_concepto_salarialInput | concepto_salarialUpdateManyWithWhereWithoutTipo_concepto_salarialInput[]
    deleteMany?: concepto_salarialScalarWhereInput | concepto_salarialScalarWhereInput[]
  }

  export type detalle_nominaCreateNestedManyWithoutUsuarioInput = {
    create?: XOR<detalle_nominaCreateWithoutUsuarioInput, detalle_nominaUncheckedCreateWithoutUsuarioInput> | detalle_nominaCreateWithoutUsuarioInput[] | detalle_nominaUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: detalle_nominaCreateOrConnectWithoutUsuarioInput | detalle_nominaCreateOrConnectWithoutUsuarioInput[]
    createMany?: detalle_nominaCreateManyUsuarioInputEnvelope
    connect?: detalle_nominaWhereUniqueInput | detalle_nominaWhereUniqueInput[]
  }

  export type registro_accesoCreateNestedManyWithoutUsuarioInput = {
    create?: XOR<registro_accesoCreateWithoutUsuarioInput, registro_accesoUncheckedCreateWithoutUsuarioInput> | registro_accesoCreateWithoutUsuarioInput[] | registro_accesoUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: registro_accesoCreateOrConnectWithoutUsuarioInput | registro_accesoCreateOrConnectWithoutUsuarioInput[]
    createMany?: registro_accesoCreateManyUsuarioInputEnvelope
    connect?: registro_accesoWhereUniqueInput | registro_accesoWhereUniqueInput[]
  }

  export type empleadoCreateNestedOneWithoutUsuarioInput = {
    create?: XOR<empleadoCreateWithoutUsuarioInput, empleadoUncheckedCreateWithoutUsuarioInput>
    connectOrCreate?: empleadoCreateOrConnectWithoutUsuarioInput
    connect?: empleadoWhereUniqueInput
  }

  export type rol_usuarioCreateNestedOneWithoutUsuarioInput = {
    create?: XOR<rol_usuarioCreateWithoutUsuarioInput, rol_usuarioUncheckedCreateWithoutUsuarioInput>
    connectOrCreate?: rol_usuarioCreateOrConnectWithoutUsuarioInput
    connect?: rol_usuarioWhereUniqueInput
  }

  export type detalle_nominaUncheckedCreateNestedManyWithoutUsuarioInput = {
    create?: XOR<detalle_nominaCreateWithoutUsuarioInput, detalle_nominaUncheckedCreateWithoutUsuarioInput> | detalle_nominaCreateWithoutUsuarioInput[] | detalle_nominaUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: detalle_nominaCreateOrConnectWithoutUsuarioInput | detalle_nominaCreateOrConnectWithoutUsuarioInput[]
    createMany?: detalle_nominaCreateManyUsuarioInputEnvelope
    connect?: detalle_nominaWhereUniqueInput | detalle_nominaWhereUniqueInput[]
  }

  export type registro_accesoUncheckedCreateNestedManyWithoutUsuarioInput = {
    create?: XOR<registro_accesoCreateWithoutUsuarioInput, registro_accesoUncheckedCreateWithoutUsuarioInput> | registro_accesoCreateWithoutUsuarioInput[] | registro_accesoUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: registro_accesoCreateOrConnectWithoutUsuarioInput | registro_accesoCreateOrConnectWithoutUsuarioInput[]
    createMany?: registro_accesoCreateManyUsuarioInputEnvelope
    connect?: registro_accesoWhereUniqueInput | registro_accesoWhereUniqueInput[]
  }

  export type detalle_nominaUpdateManyWithoutUsuarioNestedInput = {
    create?: XOR<detalle_nominaCreateWithoutUsuarioInput, detalle_nominaUncheckedCreateWithoutUsuarioInput> | detalle_nominaCreateWithoutUsuarioInput[] | detalle_nominaUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: detalle_nominaCreateOrConnectWithoutUsuarioInput | detalle_nominaCreateOrConnectWithoutUsuarioInput[]
    upsert?: detalle_nominaUpsertWithWhereUniqueWithoutUsuarioInput | detalle_nominaUpsertWithWhereUniqueWithoutUsuarioInput[]
    createMany?: detalle_nominaCreateManyUsuarioInputEnvelope
    set?: detalle_nominaWhereUniqueInput | detalle_nominaWhereUniqueInput[]
    disconnect?: detalle_nominaWhereUniqueInput | detalle_nominaWhereUniqueInput[]
    delete?: detalle_nominaWhereUniqueInput | detalle_nominaWhereUniqueInput[]
    connect?: detalle_nominaWhereUniqueInput | detalle_nominaWhereUniqueInput[]
    update?: detalle_nominaUpdateWithWhereUniqueWithoutUsuarioInput | detalle_nominaUpdateWithWhereUniqueWithoutUsuarioInput[]
    updateMany?: detalle_nominaUpdateManyWithWhereWithoutUsuarioInput | detalle_nominaUpdateManyWithWhereWithoutUsuarioInput[]
    deleteMany?: detalle_nominaScalarWhereInput | detalle_nominaScalarWhereInput[]
  }

  export type registro_accesoUpdateManyWithoutUsuarioNestedInput = {
    create?: XOR<registro_accesoCreateWithoutUsuarioInput, registro_accesoUncheckedCreateWithoutUsuarioInput> | registro_accesoCreateWithoutUsuarioInput[] | registro_accesoUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: registro_accesoCreateOrConnectWithoutUsuarioInput | registro_accesoCreateOrConnectWithoutUsuarioInput[]
    upsert?: registro_accesoUpsertWithWhereUniqueWithoutUsuarioInput | registro_accesoUpsertWithWhereUniqueWithoutUsuarioInput[]
    createMany?: registro_accesoCreateManyUsuarioInputEnvelope
    set?: registro_accesoWhereUniqueInput | registro_accesoWhereUniqueInput[]
    disconnect?: registro_accesoWhereUniqueInput | registro_accesoWhereUniqueInput[]
    delete?: registro_accesoWhereUniqueInput | registro_accesoWhereUniqueInput[]
    connect?: registro_accesoWhereUniqueInput | registro_accesoWhereUniqueInput[]
    update?: registro_accesoUpdateWithWhereUniqueWithoutUsuarioInput | registro_accesoUpdateWithWhereUniqueWithoutUsuarioInput[]
    updateMany?: registro_accesoUpdateManyWithWhereWithoutUsuarioInput | registro_accesoUpdateManyWithWhereWithoutUsuarioInput[]
    deleteMany?: registro_accesoScalarWhereInput | registro_accesoScalarWhereInput[]
  }

  export type empleadoUpdateOneRequiredWithoutUsuarioNestedInput = {
    create?: XOR<empleadoCreateWithoutUsuarioInput, empleadoUncheckedCreateWithoutUsuarioInput>
    connectOrCreate?: empleadoCreateOrConnectWithoutUsuarioInput
    upsert?: empleadoUpsertWithoutUsuarioInput
    connect?: empleadoWhereUniqueInput
    update?: XOR<XOR<empleadoUpdateToOneWithWhereWithoutUsuarioInput, empleadoUpdateWithoutUsuarioInput>, empleadoUncheckedUpdateWithoutUsuarioInput>
  }

  export type rol_usuarioUpdateOneRequiredWithoutUsuarioNestedInput = {
    create?: XOR<rol_usuarioCreateWithoutUsuarioInput, rol_usuarioUncheckedCreateWithoutUsuarioInput>
    connectOrCreate?: rol_usuarioCreateOrConnectWithoutUsuarioInput
    upsert?: rol_usuarioUpsertWithoutUsuarioInput
    connect?: rol_usuarioWhereUniqueInput
    update?: XOR<XOR<rol_usuarioUpdateToOneWithWhereWithoutUsuarioInput, rol_usuarioUpdateWithoutUsuarioInput>, rol_usuarioUncheckedUpdateWithoutUsuarioInput>
  }

  export type detalle_nominaUncheckedUpdateManyWithoutUsuarioNestedInput = {
    create?: XOR<detalle_nominaCreateWithoutUsuarioInput, detalle_nominaUncheckedCreateWithoutUsuarioInput> | detalle_nominaCreateWithoutUsuarioInput[] | detalle_nominaUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: detalle_nominaCreateOrConnectWithoutUsuarioInput | detalle_nominaCreateOrConnectWithoutUsuarioInput[]
    upsert?: detalle_nominaUpsertWithWhereUniqueWithoutUsuarioInput | detalle_nominaUpsertWithWhereUniqueWithoutUsuarioInput[]
    createMany?: detalle_nominaCreateManyUsuarioInputEnvelope
    set?: detalle_nominaWhereUniqueInput | detalle_nominaWhereUniqueInput[]
    disconnect?: detalle_nominaWhereUniqueInput | detalle_nominaWhereUniqueInput[]
    delete?: detalle_nominaWhereUniqueInput | detalle_nominaWhereUniqueInput[]
    connect?: detalle_nominaWhereUniqueInput | detalle_nominaWhereUniqueInput[]
    update?: detalle_nominaUpdateWithWhereUniqueWithoutUsuarioInput | detalle_nominaUpdateWithWhereUniqueWithoutUsuarioInput[]
    updateMany?: detalle_nominaUpdateManyWithWhereWithoutUsuarioInput | detalle_nominaUpdateManyWithWhereWithoutUsuarioInput[]
    deleteMany?: detalle_nominaScalarWhereInput | detalle_nominaScalarWhereInput[]
  }

  export type registro_accesoUncheckedUpdateManyWithoutUsuarioNestedInput = {
    create?: XOR<registro_accesoCreateWithoutUsuarioInput, registro_accesoUncheckedCreateWithoutUsuarioInput> | registro_accesoCreateWithoutUsuarioInput[] | registro_accesoUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: registro_accesoCreateOrConnectWithoutUsuarioInput | registro_accesoCreateOrConnectWithoutUsuarioInput[]
    upsert?: registro_accesoUpsertWithWhereUniqueWithoutUsuarioInput | registro_accesoUpsertWithWhereUniqueWithoutUsuarioInput[]
    createMany?: registro_accesoCreateManyUsuarioInputEnvelope
    set?: registro_accesoWhereUniqueInput | registro_accesoWhereUniqueInput[]
    disconnect?: registro_accesoWhereUniqueInput | registro_accesoWhereUniqueInput[]
    delete?: registro_accesoWhereUniqueInput | registro_accesoWhereUniqueInput[]
    connect?: registro_accesoWhereUniqueInput | registro_accesoWhereUniqueInput[]
    update?: registro_accesoUpdateWithWhereUniqueWithoutUsuarioInput | registro_accesoUpdateWithWhereUniqueWithoutUsuarioInput[]
    updateMany?: registro_accesoUpdateManyWithWhereWithoutUsuarioInput | registro_accesoUpdateManyWithWhereWithoutUsuarioInput[]
    deleteMany?: registro_accesoScalarWhereInput | registro_accesoScalarWhereInput[]
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedStringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type NestedBoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type NestedFloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedBoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type NestedDecimalFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
  }

  export type NestedDecimalWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedDecimalFilter<$PrismaModel>
    _sum?: NestedDecimalFilter<$PrismaModel>
    _min?: NestedDecimalFilter<$PrismaModel>
    _max?: NestedDecimalFilter<$PrismaModel>
  }

  export type NestedDateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type NestedDateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type NestedDateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type NestedDateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type categoria_salarialCreateWithoutCargoInput = {
    monto: number
  }

  export type categoria_salarialUncheckedCreateWithoutCargoInput = {
    id_categoria_salarial?: number
    monto: number
  }

  export type categoria_salarialCreateOrConnectWithoutCargoInput = {
    where: categoria_salarialWhereUniqueInput
    create: XOR<categoria_salarialCreateWithoutCargoInput, categoria_salarialUncheckedCreateWithoutCargoInput>
  }

  export type departamentoCreateWithoutCargoInput = {
    nombre: string
    ubicacion: string
  }

  export type departamentoUncheckedCreateWithoutCargoInput = {
    id_departamento?: number
    nombre: string
    ubicacion: string
  }

  export type departamentoCreateOrConnectWithoutCargoInput = {
    where: departamentoWhereUniqueInput
    create: XOR<departamentoCreateWithoutCargoInput, departamentoUncheckedCreateWithoutCargoInput>
  }

  export type historial_cargoCreateWithoutCargoInput = {
    Fecha_Inicio: Date | string
    fecha_fin?: Date | string | null
    Salario_Asignado: number
    empleado: empleadoCreateNestedOneWithoutHistorial_cargoInput
  }

  export type historial_cargoUncheckedCreateWithoutCargoInput = {
    id_historial?: number
    id_empleado: number
    Fecha_Inicio: Date | string
    fecha_fin?: Date | string | null
    Salario_Asignado: number
  }

  export type historial_cargoCreateOrConnectWithoutCargoInput = {
    where: historial_cargoWhereUniqueInput
    create: XOR<historial_cargoCreateWithoutCargoInput, historial_cargoUncheckedCreateWithoutCargoInput>
  }

  export type historial_cargoCreateManyCargoInputEnvelope = {
    data: historial_cargoCreateManyCargoInput | historial_cargoCreateManyCargoInput[]
    skipDuplicates?: boolean
  }

  export type categoria_salarialUpsertWithoutCargoInput = {
    update: XOR<categoria_salarialUpdateWithoutCargoInput, categoria_salarialUncheckedUpdateWithoutCargoInput>
    create: XOR<categoria_salarialCreateWithoutCargoInput, categoria_salarialUncheckedCreateWithoutCargoInput>
    where?: categoria_salarialWhereInput
  }

  export type categoria_salarialUpdateToOneWithWhereWithoutCargoInput = {
    where?: categoria_salarialWhereInput
    data: XOR<categoria_salarialUpdateWithoutCargoInput, categoria_salarialUncheckedUpdateWithoutCargoInput>
  }

  export type categoria_salarialUpdateWithoutCargoInput = {
    monto?: IntFieldUpdateOperationsInput | number
  }

  export type categoria_salarialUncheckedUpdateWithoutCargoInput = {
    id_categoria_salarial?: IntFieldUpdateOperationsInput | number
    monto?: IntFieldUpdateOperationsInput | number
  }

  export type departamentoUpsertWithoutCargoInput = {
    update: XOR<departamentoUpdateWithoutCargoInput, departamentoUncheckedUpdateWithoutCargoInput>
    create: XOR<departamentoCreateWithoutCargoInput, departamentoUncheckedCreateWithoutCargoInput>
    where?: departamentoWhereInput
  }

  export type departamentoUpdateToOneWithWhereWithoutCargoInput = {
    where?: departamentoWhereInput
    data: XOR<departamentoUpdateWithoutCargoInput, departamentoUncheckedUpdateWithoutCargoInput>
  }

  export type departamentoUpdateWithoutCargoInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    ubicacion?: StringFieldUpdateOperationsInput | string
  }

  export type departamentoUncheckedUpdateWithoutCargoInput = {
    id_departamento?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    ubicacion?: StringFieldUpdateOperationsInput | string
  }

  export type historial_cargoUpsertWithWhereUniqueWithoutCargoInput = {
    where: historial_cargoWhereUniqueInput
    update: XOR<historial_cargoUpdateWithoutCargoInput, historial_cargoUncheckedUpdateWithoutCargoInput>
    create: XOR<historial_cargoCreateWithoutCargoInput, historial_cargoUncheckedCreateWithoutCargoInput>
  }

  export type historial_cargoUpdateWithWhereUniqueWithoutCargoInput = {
    where: historial_cargoWhereUniqueInput
    data: XOR<historial_cargoUpdateWithoutCargoInput, historial_cargoUncheckedUpdateWithoutCargoInput>
  }

  export type historial_cargoUpdateManyWithWhereWithoutCargoInput = {
    where: historial_cargoScalarWhereInput
    data: XOR<historial_cargoUpdateManyMutationInput, historial_cargoUncheckedUpdateManyWithoutCargoInput>
  }

  export type historial_cargoScalarWhereInput = {
    AND?: historial_cargoScalarWhereInput | historial_cargoScalarWhereInput[]
    OR?: historial_cargoScalarWhereInput[]
    NOT?: historial_cargoScalarWhereInput | historial_cargoScalarWhereInput[]
    id_historial?: IntFilter<"historial_cargo"> | number
    id_empleado?: IntFilter<"historial_cargo"> | number
    Fecha_Inicio?: DateTimeFilter<"historial_cargo"> | Date | string
    fecha_fin?: DateTimeNullableFilter<"historial_cargo"> | Date | string | null
    Salario_Asignado?: IntFilter<"historial_cargo"> | number
    id_cargo?: IntFilter<"historial_cargo"> | number
  }

  export type cargoCreateWithoutCategoria_salarialInput = {
    nombre_cargo: string
    departamento_nombre: string
    Activo: boolean
    departamento_ref: departamentoCreateNestedOneWithoutCargoInput
    historial_cargo?: historial_cargoCreateNestedManyWithoutCargoInput
  }

  export type cargoUncheckedCreateWithoutCategoria_salarialInput = {
    id_cargo?: number
    nombre_cargo: string
    departamento_nombre: string
    id_departamento: number
    Activo: boolean
    historial_cargo?: historial_cargoUncheckedCreateNestedManyWithoutCargoInput
  }

  export type cargoCreateOrConnectWithoutCategoria_salarialInput = {
    where: cargoWhereUniqueInput
    create: XOR<cargoCreateWithoutCategoria_salarialInput, cargoUncheckedCreateWithoutCategoria_salarialInput>
  }

  export type cargoCreateManyCategoria_salarialInputEnvelope = {
    data: cargoCreateManyCategoria_salarialInput | cargoCreateManyCategoria_salarialInput[]
    skipDuplicates?: boolean
  }

  export type cargoUpsertWithWhereUniqueWithoutCategoria_salarialInput = {
    where: cargoWhereUniqueInput
    update: XOR<cargoUpdateWithoutCategoria_salarialInput, cargoUncheckedUpdateWithoutCategoria_salarialInput>
    create: XOR<cargoCreateWithoutCategoria_salarialInput, cargoUncheckedCreateWithoutCategoria_salarialInput>
  }

  export type cargoUpdateWithWhereUniqueWithoutCategoria_salarialInput = {
    where: cargoWhereUniqueInput
    data: XOR<cargoUpdateWithoutCategoria_salarialInput, cargoUncheckedUpdateWithoutCategoria_salarialInput>
  }

  export type cargoUpdateManyWithWhereWithoutCategoria_salarialInput = {
    where: cargoScalarWhereInput
    data: XOR<cargoUpdateManyMutationInput, cargoUncheckedUpdateManyWithoutCategoria_salarialInput>
  }

  export type cargoScalarWhereInput = {
    AND?: cargoScalarWhereInput | cargoScalarWhereInput[]
    OR?: cargoScalarWhereInput[]
    NOT?: cargoScalarWhereInput | cargoScalarWhereInput[]
    id_cargo?: IntFilter<"cargo"> | number
    nombre_cargo?: StringFilter<"cargo"> | string
    departamento_nombre?: StringFilter<"cargo"> | string
    id_departamento?: IntFilter<"cargo"> | number
    Activo?: BoolFilter<"cargo"> | boolean
    id_categoria_salarial?: IntFilter<"cargo"> | number
  }

  export type concepto_salarialCreateWithoutConcepto_empleadoInput = {
    nombre: string
    recurrente: boolean
    afecta_IPS: boolean
    afecta_aguinaldo: boolean
    tipo_concepto_salarial: tipo_concepto_salarialCreateNestedOneWithoutConcepto_salarialInput
    detalle_nomina_concepto?: detalle_nomina_conceptoCreateNestedManyWithoutConcepto_salarialInput
  }

  export type concepto_salarialUncheckedCreateWithoutConcepto_empleadoInput = {
    id_concepto?: number
    nombre: string
    recurrente: boolean
    afecta_IPS: boolean
    afecta_aguinaldo: boolean
    id_concepto_salarial: number
    detalle_nomina_concepto?: detalle_nomina_conceptoUncheckedCreateNestedManyWithoutConcepto_salarialInput
  }

  export type concepto_salarialCreateOrConnectWithoutConcepto_empleadoInput = {
    where: concepto_salarialWhereUniqueInput
    create: XOR<concepto_salarialCreateWithoutConcepto_empleadoInput, concepto_salarialUncheckedCreateWithoutConcepto_empleadoInput>
  }

  export type empleadoCreateWithoutConcepto_empleadoInput = {
    nombre: string
    cedula: string
    apellido: string
    fecha_nacimiento: Date | string
    correo: string
    fecha_ingreso: Date | string
    telefono: string
    fecha_egreso?: Date | string | null
    direccion: string
    afiliado_IPS: boolean
    detalle_nomina?: detalle_nominaCreateNestedManyWithoutEmpleadoInput
    estado_civil: estado_civilCreateNestedOneWithoutEmpleadoInput
    hijo?: hijoCreateNestedManyWithoutEmpleadoInput
    historial_cargo?: historial_cargoCreateNestedManyWithoutEmpleadoInput
    usuario?: usuarioCreateNestedOneWithoutEmpleadoInput
  }

  export type empleadoUncheckedCreateWithoutConcepto_empleadoInput = {
    id_empleado?: number
    nombre: string
    cedula: string
    apellido: string
    fecha_nacimiento: Date | string
    correo: string
    fecha_ingreso: Date | string
    telefono: string
    fecha_egreso?: Date | string | null
    direccion: string
    afiliado_IPS: boolean
    id_estado_civil: number
    detalle_nomina?: detalle_nominaUncheckedCreateNestedManyWithoutEmpleadoInput
    hijo?: hijoUncheckedCreateNestedManyWithoutEmpleadoInput
    historial_cargo?: historial_cargoUncheckedCreateNestedManyWithoutEmpleadoInput
    usuario?: usuarioUncheckedCreateNestedOneWithoutEmpleadoInput
  }

  export type empleadoCreateOrConnectWithoutConcepto_empleadoInput = {
    where: empleadoWhereUniqueInput
    create: XOR<empleadoCreateWithoutConcepto_empleadoInput, empleadoUncheckedCreateWithoutConcepto_empleadoInput>
  }

  export type concepto_salarialUpsertWithoutConcepto_empleadoInput = {
    update: XOR<concepto_salarialUpdateWithoutConcepto_empleadoInput, concepto_salarialUncheckedUpdateWithoutConcepto_empleadoInput>
    create: XOR<concepto_salarialCreateWithoutConcepto_empleadoInput, concepto_salarialUncheckedCreateWithoutConcepto_empleadoInput>
    where?: concepto_salarialWhereInput
  }

  export type concepto_salarialUpdateToOneWithWhereWithoutConcepto_empleadoInput = {
    where?: concepto_salarialWhereInput
    data: XOR<concepto_salarialUpdateWithoutConcepto_empleadoInput, concepto_salarialUncheckedUpdateWithoutConcepto_empleadoInput>
  }

  export type concepto_salarialUpdateWithoutConcepto_empleadoInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    recurrente?: BoolFieldUpdateOperationsInput | boolean
    afecta_IPS?: BoolFieldUpdateOperationsInput | boolean
    afecta_aguinaldo?: BoolFieldUpdateOperationsInput | boolean
    tipo_concepto_salarial?: tipo_concepto_salarialUpdateOneRequiredWithoutConcepto_salarialNestedInput
    detalle_nomina_concepto?: detalle_nomina_conceptoUpdateManyWithoutConcepto_salarialNestedInput
  }

  export type concepto_salarialUncheckedUpdateWithoutConcepto_empleadoInput = {
    id_concepto?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    recurrente?: BoolFieldUpdateOperationsInput | boolean
    afecta_IPS?: BoolFieldUpdateOperationsInput | boolean
    afecta_aguinaldo?: BoolFieldUpdateOperationsInput | boolean
    id_concepto_salarial?: IntFieldUpdateOperationsInput | number
    detalle_nomina_concepto?: detalle_nomina_conceptoUncheckedUpdateManyWithoutConcepto_salarialNestedInput
  }

  export type empleadoUpsertWithoutConcepto_empleadoInput = {
    update: XOR<empleadoUpdateWithoutConcepto_empleadoInput, empleadoUncheckedUpdateWithoutConcepto_empleadoInput>
    create: XOR<empleadoCreateWithoutConcepto_empleadoInput, empleadoUncheckedCreateWithoutConcepto_empleadoInput>
    where?: empleadoWhereInput
  }

  export type empleadoUpdateToOneWithWhereWithoutConcepto_empleadoInput = {
    where?: empleadoWhereInput
    data: XOR<empleadoUpdateWithoutConcepto_empleadoInput, empleadoUncheckedUpdateWithoutConcepto_empleadoInput>
  }

  export type empleadoUpdateWithoutConcepto_empleadoInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    cedula?: StringFieldUpdateOperationsInput | string
    apellido?: StringFieldUpdateOperationsInput | string
    fecha_nacimiento?: DateTimeFieldUpdateOperationsInput | Date | string
    correo?: StringFieldUpdateOperationsInput | string
    fecha_ingreso?: DateTimeFieldUpdateOperationsInput | Date | string
    telefono?: StringFieldUpdateOperationsInput | string
    fecha_egreso?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    direccion?: StringFieldUpdateOperationsInput | string
    afiliado_IPS?: BoolFieldUpdateOperationsInput | boolean
    detalle_nomina?: detalle_nominaUpdateManyWithoutEmpleadoNestedInput
    estado_civil?: estado_civilUpdateOneRequiredWithoutEmpleadoNestedInput
    hijo?: hijoUpdateManyWithoutEmpleadoNestedInput
    historial_cargo?: historial_cargoUpdateManyWithoutEmpleadoNestedInput
    usuario?: usuarioUpdateOneWithoutEmpleadoNestedInput
  }

  export type empleadoUncheckedUpdateWithoutConcepto_empleadoInput = {
    id_empleado?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    cedula?: StringFieldUpdateOperationsInput | string
    apellido?: StringFieldUpdateOperationsInput | string
    fecha_nacimiento?: DateTimeFieldUpdateOperationsInput | Date | string
    correo?: StringFieldUpdateOperationsInput | string
    fecha_ingreso?: DateTimeFieldUpdateOperationsInput | Date | string
    telefono?: StringFieldUpdateOperationsInput | string
    fecha_egreso?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    direccion?: StringFieldUpdateOperationsInput | string
    afiliado_IPS?: BoolFieldUpdateOperationsInput | boolean
    id_estado_civil?: IntFieldUpdateOperationsInput | number
    detalle_nomina?: detalle_nominaUncheckedUpdateManyWithoutEmpleadoNestedInput
    hijo?: hijoUncheckedUpdateManyWithoutEmpleadoNestedInput
    historial_cargo?: historial_cargoUncheckedUpdateManyWithoutEmpleadoNestedInput
    usuario?: usuarioUncheckedUpdateOneWithoutEmpleadoNestedInput
  }

  export type concepto_empleadoCreateWithoutConcepto_salarialInput = {
    monto: Decimal | DecimalJsLike | number | string
    observacion: string
    activo: boolean
    empleado: empleadoCreateNestedOneWithoutConcepto_empleadoInput
  }

  export type concepto_empleadoUncheckedCreateWithoutConcepto_salarialInput = {
    id_concepto_empleado?: number
    monto: Decimal | DecimalJsLike | number | string
    id_empleado: number
    observacion: string
    activo: boolean
  }

  export type concepto_empleadoCreateOrConnectWithoutConcepto_salarialInput = {
    where: concepto_empleadoWhereUniqueInput
    create: XOR<concepto_empleadoCreateWithoutConcepto_salarialInput, concepto_empleadoUncheckedCreateWithoutConcepto_salarialInput>
  }

  export type concepto_empleadoCreateManyConcepto_salarialInputEnvelope = {
    data: concepto_empleadoCreateManyConcepto_salarialInput | concepto_empleadoCreateManyConcepto_salarialInput[]
    skipDuplicates?: boolean
  }

  export type tipo_concepto_salarialCreateWithoutConcepto_salarialInput = {
    descripcion: string
  }

  export type tipo_concepto_salarialUncheckedCreateWithoutConcepto_salarialInput = {
    id_concepto_salarial?: number
    descripcion: string
  }

  export type tipo_concepto_salarialCreateOrConnectWithoutConcepto_salarialInput = {
    where: tipo_concepto_salarialWhereUniqueInput
    create: XOR<tipo_concepto_salarialCreateWithoutConcepto_salarialInput, tipo_concepto_salarialUncheckedCreateWithoutConcepto_salarialInput>
  }

  export type detalle_nomina_conceptoCreateWithoutConcepto_salarialInput = {
    id_detalle_conceptos: number
    monto: Decimal | DecimalJsLike | number | string
    origen: string
    detalle_nomina: detalle_nominaCreateNestedOneWithoutDetalle_nomina_conceptoInput
  }

  export type detalle_nomina_conceptoUncheckedCreateWithoutConcepto_salarialInput = {
    id_detalle_conceptos: number
    monto: Decimal | DecimalJsLike | number | string
    id_detalle: number
    origen: string
  }

  export type detalle_nomina_conceptoCreateOrConnectWithoutConcepto_salarialInput = {
    where: detalle_nomina_conceptoWhereUniqueInput
    create: XOR<detalle_nomina_conceptoCreateWithoutConcepto_salarialInput, detalle_nomina_conceptoUncheckedCreateWithoutConcepto_salarialInput>
  }

  export type detalle_nomina_conceptoCreateManyConcepto_salarialInputEnvelope = {
    data: detalle_nomina_conceptoCreateManyConcepto_salarialInput | detalle_nomina_conceptoCreateManyConcepto_salarialInput[]
    skipDuplicates?: boolean
  }

  export type concepto_empleadoUpsertWithWhereUniqueWithoutConcepto_salarialInput = {
    where: concepto_empleadoWhereUniqueInput
    update: XOR<concepto_empleadoUpdateWithoutConcepto_salarialInput, concepto_empleadoUncheckedUpdateWithoutConcepto_salarialInput>
    create: XOR<concepto_empleadoCreateWithoutConcepto_salarialInput, concepto_empleadoUncheckedCreateWithoutConcepto_salarialInput>
  }

  export type concepto_empleadoUpdateWithWhereUniqueWithoutConcepto_salarialInput = {
    where: concepto_empleadoWhereUniqueInput
    data: XOR<concepto_empleadoUpdateWithoutConcepto_salarialInput, concepto_empleadoUncheckedUpdateWithoutConcepto_salarialInput>
  }

  export type concepto_empleadoUpdateManyWithWhereWithoutConcepto_salarialInput = {
    where: concepto_empleadoScalarWhereInput
    data: XOR<concepto_empleadoUpdateManyMutationInput, concepto_empleadoUncheckedUpdateManyWithoutConcepto_salarialInput>
  }

  export type concepto_empleadoScalarWhereInput = {
    AND?: concepto_empleadoScalarWhereInput | concepto_empleadoScalarWhereInput[]
    OR?: concepto_empleadoScalarWhereInput[]
    NOT?: concepto_empleadoScalarWhereInput | concepto_empleadoScalarWhereInput[]
    id_concepto_empleado?: IntFilter<"concepto_empleado"> | number
    monto?: DecimalFilter<"concepto_empleado"> | Decimal | DecimalJsLike | number | string
    id_empleado?: IntFilter<"concepto_empleado"> | number
    observacion?: StringFilter<"concepto_empleado"> | string
    activo?: BoolFilter<"concepto_empleado"> | boolean
    id_concepto?: IntFilter<"concepto_empleado"> | number
  }

  export type tipo_concepto_salarialUpsertWithoutConcepto_salarialInput = {
    update: XOR<tipo_concepto_salarialUpdateWithoutConcepto_salarialInput, tipo_concepto_salarialUncheckedUpdateWithoutConcepto_salarialInput>
    create: XOR<tipo_concepto_salarialCreateWithoutConcepto_salarialInput, tipo_concepto_salarialUncheckedCreateWithoutConcepto_salarialInput>
    where?: tipo_concepto_salarialWhereInput
  }

  export type tipo_concepto_salarialUpdateToOneWithWhereWithoutConcepto_salarialInput = {
    where?: tipo_concepto_salarialWhereInput
    data: XOR<tipo_concepto_salarialUpdateWithoutConcepto_salarialInput, tipo_concepto_salarialUncheckedUpdateWithoutConcepto_salarialInput>
  }

  export type tipo_concepto_salarialUpdateWithoutConcepto_salarialInput = {
    descripcion?: StringFieldUpdateOperationsInput | string
  }

  export type tipo_concepto_salarialUncheckedUpdateWithoutConcepto_salarialInput = {
    id_concepto_salarial?: IntFieldUpdateOperationsInput | number
    descripcion?: StringFieldUpdateOperationsInput | string
  }

  export type detalle_nomina_conceptoUpsertWithWhereUniqueWithoutConcepto_salarialInput = {
    where: detalle_nomina_conceptoWhereUniqueInput
    update: XOR<detalle_nomina_conceptoUpdateWithoutConcepto_salarialInput, detalle_nomina_conceptoUncheckedUpdateWithoutConcepto_salarialInput>
    create: XOR<detalle_nomina_conceptoCreateWithoutConcepto_salarialInput, detalle_nomina_conceptoUncheckedCreateWithoutConcepto_salarialInput>
  }

  export type detalle_nomina_conceptoUpdateWithWhereUniqueWithoutConcepto_salarialInput = {
    where: detalle_nomina_conceptoWhereUniqueInput
    data: XOR<detalle_nomina_conceptoUpdateWithoutConcepto_salarialInput, detalle_nomina_conceptoUncheckedUpdateWithoutConcepto_salarialInput>
  }

  export type detalle_nomina_conceptoUpdateManyWithWhereWithoutConcepto_salarialInput = {
    where: detalle_nomina_conceptoScalarWhereInput
    data: XOR<detalle_nomina_conceptoUpdateManyMutationInput, detalle_nomina_conceptoUncheckedUpdateManyWithoutConcepto_salarialInput>
  }

  export type detalle_nomina_conceptoScalarWhereInput = {
    AND?: detalle_nomina_conceptoScalarWhereInput | detalle_nomina_conceptoScalarWhereInput[]
    OR?: detalle_nomina_conceptoScalarWhereInput[]
    NOT?: detalle_nomina_conceptoScalarWhereInput | detalle_nomina_conceptoScalarWhereInput[]
    id_detalle_conceptos?: IntFilter<"detalle_nomina_concepto"> | number
    monto?: DecimalFilter<"detalle_nomina_concepto"> | Decimal | DecimalJsLike | number | string
    id_concepto?: IntFilter<"detalle_nomina_concepto"> | number
    id_detalle?: IntFilter<"detalle_nomina_concepto"> | number
    origen?: StringFilter<"detalle_nomina_concepto"> | string
  }

  export type cargoCreateWithoutDepartamento_refInput = {
    nombre_cargo: string
    departamento_nombre: string
    Activo: boolean
    categoria_salarial: categoria_salarialCreateNestedOneWithoutCargoInput
    historial_cargo?: historial_cargoCreateNestedManyWithoutCargoInput
  }

  export type cargoUncheckedCreateWithoutDepartamento_refInput = {
    id_cargo?: number
    nombre_cargo: string
    departamento_nombre: string
    Activo: boolean
    id_categoria_salarial: number
    historial_cargo?: historial_cargoUncheckedCreateNestedManyWithoutCargoInput
  }

  export type cargoCreateOrConnectWithoutDepartamento_refInput = {
    where: cargoWhereUniqueInput
    create: XOR<cargoCreateWithoutDepartamento_refInput, cargoUncheckedCreateWithoutDepartamento_refInput>
  }

  export type cargoCreateManyDepartamento_refInputEnvelope = {
    data: cargoCreateManyDepartamento_refInput | cargoCreateManyDepartamento_refInput[]
    skipDuplicates?: boolean
  }

  export type cargoUpsertWithWhereUniqueWithoutDepartamento_refInput = {
    where: cargoWhereUniqueInput
    update: XOR<cargoUpdateWithoutDepartamento_refInput, cargoUncheckedUpdateWithoutDepartamento_refInput>
    create: XOR<cargoCreateWithoutDepartamento_refInput, cargoUncheckedCreateWithoutDepartamento_refInput>
  }

  export type cargoUpdateWithWhereUniqueWithoutDepartamento_refInput = {
    where: cargoWhereUniqueInput
    data: XOR<cargoUpdateWithoutDepartamento_refInput, cargoUncheckedUpdateWithoutDepartamento_refInput>
  }

  export type cargoUpdateManyWithWhereWithoutDepartamento_refInput = {
    where: cargoScalarWhereInput
    data: XOR<cargoUpdateManyMutationInput, cargoUncheckedUpdateManyWithoutDepartamento_refInput>
  }

  export type usuarioCreateWithoutDetalle_nominaInput = {
    nombre_usuario: string
    estado: boolean
    clave: string
    registro_acceso?: registro_accesoCreateNestedManyWithoutUsuarioInput
    empleado: empleadoCreateNestedOneWithoutUsuarioInput
    rol_usuario: rol_usuarioCreateNestedOneWithoutUsuarioInput
  }

  export type usuarioUncheckedCreateWithoutDetalle_nominaInput = {
    id_usuario?: number
    nombre_usuario: string
    estado: boolean
    clave: string
    id_rol_usuario: number
    id_empleado: number
    registro_acceso?: registro_accesoUncheckedCreateNestedManyWithoutUsuarioInput
  }

  export type usuarioCreateOrConnectWithoutDetalle_nominaInput = {
    where: usuarioWhereUniqueInput
    create: XOR<usuarioCreateWithoutDetalle_nominaInput, usuarioUncheckedCreateWithoutDetalle_nominaInput>
  }

  export type empleadoCreateWithoutDetalle_nominaInput = {
    nombre: string
    cedula: string
    apellido: string
    fecha_nacimiento: Date | string
    correo: string
    fecha_ingreso: Date | string
    telefono: string
    fecha_egreso?: Date | string | null
    direccion: string
    afiliado_IPS: boolean
    concepto_empleado?: concepto_empleadoCreateNestedManyWithoutEmpleadoInput
    estado_civil: estado_civilCreateNestedOneWithoutEmpleadoInput
    hijo?: hijoCreateNestedManyWithoutEmpleadoInput
    historial_cargo?: historial_cargoCreateNestedManyWithoutEmpleadoInput
    usuario?: usuarioCreateNestedOneWithoutEmpleadoInput
  }

  export type empleadoUncheckedCreateWithoutDetalle_nominaInput = {
    id_empleado?: number
    nombre: string
    cedula: string
    apellido: string
    fecha_nacimiento: Date | string
    correo: string
    fecha_ingreso: Date | string
    telefono: string
    fecha_egreso?: Date | string | null
    direccion: string
    afiliado_IPS: boolean
    id_estado_civil: number
    concepto_empleado?: concepto_empleadoUncheckedCreateNestedManyWithoutEmpleadoInput
    hijo?: hijoUncheckedCreateNestedManyWithoutEmpleadoInput
    historial_cargo?: historial_cargoUncheckedCreateNestedManyWithoutEmpleadoInput
    usuario?: usuarioUncheckedCreateNestedOneWithoutEmpleadoInput
  }

  export type empleadoCreateOrConnectWithoutDetalle_nominaInput = {
    where: empleadoWhereUniqueInput
    create: XOR<empleadoCreateWithoutDetalle_nominaInput, empleadoUncheckedCreateWithoutDetalle_nominaInput>
  }

  export type nominaCreateWithoutDetalle_nominaInput = {
    anho: number
    fecha_generacion: Date | string
    estado: string
    mes: number
  }

  export type nominaUncheckedCreateWithoutDetalle_nominaInput = {
    id_nomina?: number
    anho: number
    fecha_generacion: Date | string
    estado: string
    mes: number
  }

  export type nominaCreateOrConnectWithoutDetalle_nominaInput = {
    where: nominaWhereUniqueInput
    create: XOR<nominaCreateWithoutDetalle_nominaInput, nominaUncheckedCreateWithoutDetalle_nominaInput>
  }

  export type detalle_nomina_conceptoCreateWithoutDetalle_nominaInput = {
    id_detalle_conceptos: number
    monto: Decimal | DecimalJsLike | number | string
    origen: string
    concepto_salarial: concepto_salarialCreateNestedOneWithoutDetalle_nomina_conceptoInput
  }

  export type detalle_nomina_conceptoUncheckedCreateWithoutDetalle_nominaInput = {
    id_detalle_conceptos: number
    monto: Decimal | DecimalJsLike | number | string
    id_concepto: number
    origen: string
  }

  export type detalle_nomina_conceptoCreateOrConnectWithoutDetalle_nominaInput = {
    where: detalle_nomina_conceptoWhereUniqueInput
    create: XOR<detalle_nomina_conceptoCreateWithoutDetalle_nominaInput, detalle_nomina_conceptoUncheckedCreateWithoutDetalle_nominaInput>
  }

  export type detalle_nomina_conceptoCreateManyDetalle_nominaInputEnvelope = {
    data: detalle_nomina_conceptoCreateManyDetalle_nominaInput | detalle_nomina_conceptoCreateManyDetalle_nominaInput[]
    skipDuplicates?: boolean
  }

  export type usuarioUpsertWithoutDetalle_nominaInput = {
    update: XOR<usuarioUpdateWithoutDetalle_nominaInput, usuarioUncheckedUpdateWithoutDetalle_nominaInput>
    create: XOR<usuarioCreateWithoutDetalle_nominaInput, usuarioUncheckedCreateWithoutDetalle_nominaInput>
    where?: usuarioWhereInput
  }

  export type usuarioUpdateToOneWithWhereWithoutDetalle_nominaInput = {
    where?: usuarioWhereInput
    data: XOR<usuarioUpdateWithoutDetalle_nominaInput, usuarioUncheckedUpdateWithoutDetalle_nominaInput>
  }

  export type usuarioUpdateWithoutDetalle_nominaInput = {
    nombre_usuario?: StringFieldUpdateOperationsInput | string
    estado?: BoolFieldUpdateOperationsInput | boolean
    clave?: StringFieldUpdateOperationsInput | string
    registro_acceso?: registro_accesoUpdateManyWithoutUsuarioNestedInput
    empleado?: empleadoUpdateOneRequiredWithoutUsuarioNestedInput
    rol_usuario?: rol_usuarioUpdateOneRequiredWithoutUsuarioNestedInput
  }

  export type usuarioUncheckedUpdateWithoutDetalle_nominaInput = {
    id_usuario?: IntFieldUpdateOperationsInput | number
    nombre_usuario?: StringFieldUpdateOperationsInput | string
    estado?: BoolFieldUpdateOperationsInput | boolean
    clave?: StringFieldUpdateOperationsInput | string
    id_rol_usuario?: IntFieldUpdateOperationsInput | number
    id_empleado?: IntFieldUpdateOperationsInput | number
    registro_acceso?: registro_accesoUncheckedUpdateManyWithoutUsuarioNestedInput
  }

  export type empleadoUpsertWithoutDetalle_nominaInput = {
    update: XOR<empleadoUpdateWithoutDetalle_nominaInput, empleadoUncheckedUpdateWithoutDetalle_nominaInput>
    create: XOR<empleadoCreateWithoutDetalle_nominaInput, empleadoUncheckedCreateWithoutDetalle_nominaInput>
    where?: empleadoWhereInput
  }

  export type empleadoUpdateToOneWithWhereWithoutDetalle_nominaInput = {
    where?: empleadoWhereInput
    data: XOR<empleadoUpdateWithoutDetalle_nominaInput, empleadoUncheckedUpdateWithoutDetalle_nominaInput>
  }

  export type empleadoUpdateWithoutDetalle_nominaInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    cedula?: StringFieldUpdateOperationsInput | string
    apellido?: StringFieldUpdateOperationsInput | string
    fecha_nacimiento?: DateTimeFieldUpdateOperationsInput | Date | string
    correo?: StringFieldUpdateOperationsInput | string
    fecha_ingreso?: DateTimeFieldUpdateOperationsInput | Date | string
    telefono?: StringFieldUpdateOperationsInput | string
    fecha_egreso?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    direccion?: StringFieldUpdateOperationsInput | string
    afiliado_IPS?: BoolFieldUpdateOperationsInput | boolean
    concepto_empleado?: concepto_empleadoUpdateManyWithoutEmpleadoNestedInput
    estado_civil?: estado_civilUpdateOneRequiredWithoutEmpleadoNestedInput
    hijo?: hijoUpdateManyWithoutEmpleadoNestedInput
    historial_cargo?: historial_cargoUpdateManyWithoutEmpleadoNestedInput
    usuario?: usuarioUpdateOneWithoutEmpleadoNestedInput
  }

  export type empleadoUncheckedUpdateWithoutDetalle_nominaInput = {
    id_empleado?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    cedula?: StringFieldUpdateOperationsInput | string
    apellido?: StringFieldUpdateOperationsInput | string
    fecha_nacimiento?: DateTimeFieldUpdateOperationsInput | Date | string
    correo?: StringFieldUpdateOperationsInput | string
    fecha_ingreso?: DateTimeFieldUpdateOperationsInput | Date | string
    telefono?: StringFieldUpdateOperationsInput | string
    fecha_egreso?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    direccion?: StringFieldUpdateOperationsInput | string
    afiliado_IPS?: BoolFieldUpdateOperationsInput | boolean
    id_estado_civil?: IntFieldUpdateOperationsInput | number
    concepto_empleado?: concepto_empleadoUncheckedUpdateManyWithoutEmpleadoNestedInput
    hijo?: hijoUncheckedUpdateManyWithoutEmpleadoNestedInput
    historial_cargo?: historial_cargoUncheckedUpdateManyWithoutEmpleadoNestedInput
    usuario?: usuarioUncheckedUpdateOneWithoutEmpleadoNestedInput
  }

  export type nominaUpsertWithoutDetalle_nominaInput = {
    update: XOR<nominaUpdateWithoutDetalle_nominaInput, nominaUncheckedUpdateWithoutDetalle_nominaInput>
    create: XOR<nominaCreateWithoutDetalle_nominaInput, nominaUncheckedCreateWithoutDetalle_nominaInput>
    where?: nominaWhereInput
  }

  export type nominaUpdateToOneWithWhereWithoutDetalle_nominaInput = {
    where?: nominaWhereInput
    data: XOR<nominaUpdateWithoutDetalle_nominaInput, nominaUncheckedUpdateWithoutDetalle_nominaInput>
  }

  export type nominaUpdateWithoutDetalle_nominaInput = {
    anho?: IntFieldUpdateOperationsInput | number
    fecha_generacion?: DateTimeFieldUpdateOperationsInput | Date | string
    estado?: StringFieldUpdateOperationsInput | string
    mes?: IntFieldUpdateOperationsInput | number
  }

  export type nominaUncheckedUpdateWithoutDetalle_nominaInput = {
    id_nomina?: IntFieldUpdateOperationsInput | number
    anho?: IntFieldUpdateOperationsInput | number
    fecha_generacion?: DateTimeFieldUpdateOperationsInput | Date | string
    estado?: StringFieldUpdateOperationsInput | string
    mes?: IntFieldUpdateOperationsInput | number
  }

  export type detalle_nomina_conceptoUpsertWithWhereUniqueWithoutDetalle_nominaInput = {
    where: detalle_nomina_conceptoWhereUniqueInput
    update: XOR<detalle_nomina_conceptoUpdateWithoutDetalle_nominaInput, detalle_nomina_conceptoUncheckedUpdateWithoutDetalle_nominaInput>
    create: XOR<detalle_nomina_conceptoCreateWithoutDetalle_nominaInput, detalle_nomina_conceptoUncheckedCreateWithoutDetalle_nominaInput>
  }

  export type detalle_nomina_conceptoUpdateWithWhereUniqueWithoutDetalle_nominaInput = {
    where: detalle_nomina_conceptoWhereUniqueInput
    data: XOR<detalle_nomina_conceptoUpdateWithoutDetalle_nominaInput, detalle_nomina_conceptoUncheckedUpdateWithoutDetalle_nominaInput>
  }

  export type detalle_nomina_conceptoUpdateManyWithWhereWithoutDetalle_nominaInput = {
    where: detalle_nomina_conceptoScalarWhereInput
    data: XOR<detalle_nomina_conceptoUpdateManyMutationInput, detalle_nomina_conceptoUncheckedUpdateManyWithoutDetalle_nominaInput>
  }

  export type concepto_salarialCreateWithoutDetalle_nomina_conceptoInput = {
    nombre: string
    recurrente: boolean
    afecta_IPS: boolean
    afecta_aguinaldo: boolean
    concepto_empleado?: concepto_empleadoCreateNestedManyWithoutConcepto_salarialInput
    tipo_concepto_salarial: tipo_concepto_salarialCreateNestedOneWithoutConcepto_salarialInput
  }

  export type concepto_salarialUncheckedCreateWithoutDetalle_nomina_conceptoInput = {
    id_concepto?: number
    nombre: string
    recurrente: boolean
    afecta_IPS: boolean
    afecta_aguinaldo: boolean
    id_concepto_salarial: number
    concepto_empleado?: concepto_empleadoUncheckedCreateNestedManyWithoutConcepto_salarialInput
  }

  export type concepto_salarialCreateOrConnectWithoutDetalle_nomina_conceptoInput = {
    where: concepto_salarialWhereUniqueInput
    create: XOR<concepto_salarialCreateWithoutDetalle_nomina_conceptoInput, concepto_salarialUncheckedCreateWithoutDetalle_nomina_conceptoInput>
  }

  export type detalle_nominaCreateWithoutDetalle_nomina_conceptoInput = {
    total_descuentos: Decimal | DecimalJsLike | number | string
    total_bonificaciones: Decimal | DecimalJsLike | number | string
    neto_a_cobrar: number
    usuario: usuarioCreateNestedOneWithoutDetalle_nominaInput
    empleado: empleadoCreateNestedOneWithoutDetalle_nominaInput
    nomina: nominaCreateNestedOneWithoutDetalle_nominaInput
  }

  export type detalle_nominaUncheckedCreateWithoutDetalle_nomina_conceptoInput = {
    id_detalle?: number
    total_descuentos: Decimal | DecimalJsLike | number | string
    total_bonificaciones: Decimal | DecimalJsLike | number | string
    neto_a_cobrar: number
    creado_por: number
    id_nomina: number
    id_empleado: number
  }

  export type detalle_nominaCreateOrConnectWithoutDetalle_nomina_conceptoInput = {
    where: detalle_nominaWhereUniqueInput
    create: XOR<detalle_nominaCreateWithoutDetalle_nomina_conceptoInput, detalle_nominaUncheckedCreateWithoutDetalle_nomina_conceptoInput>
  }

  export type concepto_salarialUpsertWithoutDetalle_nomina_conceptoInput = {
    update: XOR<concepto_salarialUpdateWithoutDetalle_nomina_conceptoInput, concepto_salarialUncheckedUpdateWithoutDetalle_nomina_conceptoInput>
    create: XOR<concepto_salarialCreateWithoutDetalle_nomina_conceptoInput, concepto_salarialUncheckedCreateWithoutDetalle_nomina_conceptoInput>
    where?: concepto_salarialWhereInput
  }

  export type concepto_salarialUpdateToOneWithWhereWithoutDetalle_nomina_conceptoInput = {
    where?: concepto_salarialWhereInput
    data: XOR<concepto_salarialUpdateWithoutDetalle_nomina_conceptoInput, concepto_salarialUncheckedUpdateWithoutDetalle_nomina_conceptoInput>
  }

  export type concepto_salarialUpdateWithoutDetalle_nomina_conceptoInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    recurrente?: BoolFieldUpdateOperationsInput | boolean
    afecta_IPS?: BoolFieldUpdateOperationsInput | boolean
    afecta_aguinaldo?: BoolFieldUpdateOperationsInput | boolean
    concepto_empleado?: concepto_empleadoUpdateManyWithoutConcepto_salarialNestedInput
    tipo_concepto_salarial?: tipo_concepto_salarialUpdateOneRequiredWithoutConcepto_salarialNestedInput
  }

  export type concepto_salarialUncheckedUpdateWithoutDetalle_nomina_conceptoInput = {
    id_concepto?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    recurrente?: BoolFieldUpdateOperationsInput | boolean
    afecta_IPS?: BoolFieldUpdateOperationsInput | boolean
    afecta_aguinaldo?: BoolFieldUpdateOperationsInput | boolean
    id_concepto_salarial?: IntFieldUpdateOperationsInput | number
    concepto_empleado?: concepto_empleadoUncheckedUpdateManyWithoutConcepto_salarialNestedInput
  }

  export type detalle_nominaUpsertWithoutDetalle_nomina_conceptoInput = {
    update: XOR<detalle_nominaUpdateWithoutDetalle_nomina_conceptoInput, detalle_nominaUncheckedUpdateWithoutDetalle_nomina_conceptoInput>
    create: XOR<detalle_nominaCreateWithoutDetalle_nomina_conceptoInput, detalle_nominaUncheckedCreateWithoutDetalle_nomina_conceptoInput>
    where?: detalle_nominaWhereInput
  }

  export type detalle_nominaUpdateToOneWithWhereWithoutDetalle_nomina_conceptoInput = {
    where?: detalle_nominaWhereInput
    data: XOR<detalle_nominaUpdateWithoutDetalle_nomina_conceptoInput, detalle_nominaUncheckedUpdateWithoutDetalle_nomina_conceptoInput>
  }

  export type detalle_nominaUpdateWithoutDetalle_nomina_conceptoInput = {
    total_descuentos?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    total_bonificaciones?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    neto_a_cobrar?: IntFieldUpdateOperationsInput | number
    usuario?: usuarioUpdateOneRequiredWithoutDetalle_nominaNestedInput
    empleado?: empleadoUpdateOneRequiredWithoutDetalle_nominaNestedInput
    nomina?: nominaUpdateOneRequiredWithoutDetalle_nominaNestedInput
  }

  export type detalle_nominaUncheckedUpdateWithoutDetalle_nomina_conceptoInput = {
    id_detalle?: IntFieldUpdateOperationsInput | number
    total_descuentos?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    total_bonificaciones?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    neto_a_cobrar?: IntFieldUpdateOperationsInput | number
    creado_por?: IntFieldUpdateOperationsInput | number
    id_nomina?: IntFieldUpdateOperationsInput | number
    id_empleado?: IntFieldUpdateOperationsInput | number
  }

  export type concepto_empleadoCreateWithoutEmpleadoInput = {
    monto: Decimal | DecimalJsLike | number | string
    observacion: string
    activo: boolean
    concepto_salarial: concepto_salarialCreateNestedOneWithoutConcepto_empleadoInput
  }

  export type concepto_empleadoUncheckedCreateWithoutEmpleadoInput = {
    id_concepto_empleado?: number
    monto: Decimal | DecimalJsLike | number | string
    observacion: string
    activo: boolean
    id_concepto: number
  }

  export type concepto_empleadoCreateOrConnectWithoutEmpleadoInput = {
    where: concepto_empleadoWhereUniqueInput
    create: XOR<concepto_empleadoCreateWithoutEmpleadoInput, concepto_empleadoUncheckedCreateWithoutEmpleadoInput>
  }

  export type concepto_empleadoCreateManyEmpleadoInputEnvelope = {
    data: concepto_empleadoCreateManyEmpleadoInput | concepto_empleadoCreateManyEmpleadoInput[]
    skipDuplicates?: boolean
  }

  export type detalle_nominaCreateWithoutEmpleadoInput = {
    total_descuentos: Decimal | DecimalJsLike | number | string
    total_bonificaciones: Decimal | DecimalJsLike | number | string
    neto_a_cobrar: number
    usuario: usuarioCreateNestedOneWithoutDetalle_nominaInput
    nomina: nominaCreateNestedOneWithoutDetalle_nominaInput
    detalle_nomina_concepto?: detalle_nomina_conceptoCreateNestedManyWithoutDetalle_nominaInput
  }

  export type detalle_nominaUncheckedCreateWithoutEmpleadoInput = {
    id_detalle?: number
    total_descuentos: Decimal | DecimalJsLike | number | string
    total_bonificaciones: Decimal | DecimalJsLike | number | string
    neto_a_cobrar: number
    creado_por: number
    id_nomina: number
    detalle_nomina_concepto?: detalle_nomina_conceptoUncheckedCreateNestedManyWithoutDetalle_nominaInput
  }

  export type detalle_nominaCreateOrConnectWithoutEmpleadoInput = {
    where: detalle_nominaWhereUniqueInput
    create: XOR<detalle_nominaCreateWithoutEmpleadoInput, detalle_nominaUncheckedCreateWithoutEmpleadoInput>
  }

  export type detalle_nominaCreateManyEmpleadoInputEnvelope = {
    data: detalle_nominaCreateManyEmpleadoInput | detalle_nominaCreateManyEmpleadoInput[]
    skipDuplicates?: boolean
  }

  export type estado_civilCreateWithoutEmpleadoInput = {
    descripcion: string
  }

  export type estado_civilUncheckedCreateWithoutEmpleadoInput = {
    id_estado?: number
    descripcion: string
  }

  export type estado_civilCreateOrConnectWithoutEmpleadoInput = {
    where: estado_civilWhereUniqueInput
    create: XOR<estado_civilCreateWithoutEmpleadoInput, estado_civilUncheckedCreateWithoutEmpleadoInput>
  }

  export type hijoCreateWithoutEmpleadoInput = {
    nombre: string
    certificado_vida_residencia: string
    fecha_vencimiento_certificado: Date | string
    discapacidad: boolean
    fecha_nacimiento: Date | string
    certificado_nacimiento: string
  }

  export type hijoUncheckedCreateWithoutEmpleadoInput = {
    id_hijo?: number
    nombre: string
    certificado_vida_residencia: string
    fecha_vencimiento_certificado: Date | string
    discapacidad: boolean
    fecha_nacimiento: Date | string
    certificado_nacimiento: string
  }

  export type hijoCreateOrConnectWithoutEmpleadoInput = {
    where: hijoWhereUniqueInput
    create: XOR<hijoCreateWithoutEmpleadoInput, hijoUncheckedCreateWithoutEmpleadoInput>
  }

  export type hijoCreateManyEmpleadoInputEnvelope = {
    data: hijoCreateManyEmpleadoInput | hijoCreateManyEmpleadoInput[]
    skipDuplicates?: boolean
  }

  export type historial_cargoCreateWithoutEmpleadoInput = {
    Fecha_Inicio: Date | string
    fecha_fin?: Date | string | null
    Salario_Asignado: number
    cargo: cargoCreateNestedOneWithoutHistorial_cargoInput
  }

  export type historial_cargoUncheckedCreateWithoutEmpleadoInput = {
    id_historial?: number
    Fecha_Inicio: Date | string
    fecha_fin?: Date | string | null
    Salario_Asignado: number
    id_cargo: number
  }

  export type historial_cargoCreateOrConnectWithoutEmpleadoInput = {
    where: historial_cargoWhereUniqueInput
    create: XOR<historial_cargoCreateWithoutEmpleadoInput, historial_cargoUncheckedCreateWithoutEmpleadoInput>
  }

  export type historial_cargoCreateManyEmpleadoInputEnvelope = {
    data: historial_cargoCreateManyEmpleadoInput | historial_cargoCreateManyEmpleadoInput[]
    skipDuplicates?: boolean
  }

  export type usuarioCreateWithoutEmpleadoInput = {
    nombre_usuario: string
    estado: boolean
    clave: string
    detalle_nomina?: detalle_nominaCreateNestedManyWithoutUsuarioInput
    registro_acceso?: registro_accesoCreateNestedManyWithoutUsuarioInput
    rol_usuario: rol_usuarioCreateNestedOneWithoutUsuarioInput
  }

  export type usuarioUncheckedCreateWithoutEmpleadoInput = {
    id_usuario?: number
    nombre_usuario: string
    estado: boolean
    clave: string
    id_rol_usuario: number
    detalle_nomina?: detalle_nominaUncheckedCreateNestedManyWithoutUsuarioInput
    registro_acceso?: registro_accesoUncheckedCreateNestedManyWithoutUsuarioInput
  }

  export type usuarioCreateOrConnectWithoutEmpleadoInput = {
    where: usuarioWhereUniqueInput
    create: XOR<usuarioCreateWithoutEmpleadoInput, usuarioUncheckedCreateWithoutEmpleadoInput>
  }

  export type concepto_empleadoUpsertWithWhereUniqueWithoutEmpleadoInput = {
    where: concepto_empleadoWhereUniqueInput
    update: XOR<concepto_empleadoUpdateWithoutEmpleadoInput, concepto_empleadoUncheckedUpdateWithoutEmpleadoInput>
    create: XOR<concepto_empleadoCreateWithoutEmpleadoInput, concepto_empleadoUncheckedCreateWithoutEmpleadoInput>
  }

  export type concepto_empleadoUpdateWithWhereUniqueWithoutEmpleadoInput = {
    where: concepto_empleadoWhereUniqueInput
    data: XOR<concepto_empleadoUpdateWithoutEmpleadoInput, concepto_empleadoUncheckedUpdateWithoutEmpleadoInput>
  }

  export type concepto_empleadoUpdateManyWithWhereWithoutEmpleadoInput = {
    where: concepto_empleadoScalarWhereInput
    data: XOR<concepto_empleadoUpdateManyMutationInput, concepto_empleadoUncheckedUpdateManyWithoutEmpleadoInput>
  }

  export type detalle_nominaUpsertWithWhereUniqueWithoutEmpleadoInput = {
    where: detalle_nominaWhereUniqueInput
    update: XOR<detalle_nominaUpdateWithoutEmpleadoInput, detalle_nominaUncheckedUpdateWithoutEmpleadoInput>
    create: XOR<detalle_nominaCreateWithoutEmpleadoInput, detalle_nominaUncheckedCreateWithoutEmpleadoInput>
  }

  export type detalle_nominaUpdateWithWhereUniqueWithoutEmpleadoInput = {
    where: detalle_nominaWhereUniqueInput
    data: XOR<detalle_nominaUpdateWithoutEmpleadoInput, detalle_nominaUncheckedUpdateWithoutEmpleadoInput>
  }

  export type detalle_nominaUpdateManyWithWhereWithoutEmpleadoInput = {
    where: detalle_nominaScalarWhereInput
    data: XOR<detalle_nominaUpdateManyMutationInput, detalle_nominaUncheckedUpdateManyWithoutEmpleadoInput>
  }

  export type detalle_nominaScalarWhereInput = {
    AND?: detalle_nominaScalarWhereInput | detalle_nominaScalarWhereInput[]
    OR?: detalle_nominaScalarWhereInput[]
    NOT?: detalle_nominaScalarWhereInput | detalle_nominaScalarWhereInput[]
    id_detalle?: IntFilter<"detalle_nomina"> | number
    total_descuentos?: DecimalFilter<"detalle_nomina"> | Decimal | DecimalJsLike | number | string
    total_bonificaciones?: DecimalFilter<"detalle_nomina"> | Decimal | DecimalJsLike | number | string
    neto_a_cobrar?: IntFilter<"detalle_nomina"> | number
    creado_por?: IntFilter<"detalle_nomina"> | number
    id_nomina?: IntFilter<"detalle_nomina"> | number
    id_empleado?: IntFilter<"detalle_nomina"> | number
  }

  export type estado_civilUpsertWithoutEmpleadoInput = {
    update: XOR<estado_civilUpdateWithoutEmpleadoInput, estado_civilUncheckedUpdateWithoutEmpleadoInput>
    create: XOR<estado_civilCreateWithoutEmpleadoInput, estado_civilUncheckedCreateWithoutEmpleadoInput>
    where?: estado_civilWhereInput
  }

  export type estado_civilUpdateToOneWithWhereWithoutEmpleadoInput = {
    where?: estado_civilWhereInput
    data: XOR<estado_civilUpdateWithoutEmpleadoInput, estado_civilUncheckedUpdateWithoutEmpleadoInput>
  }

  export type estado_civilUpdateWithoutEmpleadoInput = {
    descripcion?: StringFieldUpdateOperationsInput | string
  }

  export type estado_civilUncheckedUpdateWithoutEmpleadoInput = {
    id_estado?: IntFieldUpdateOperationsInput | number
    descripcion?: StringFieldUpdateOperationsInput | string
  }

  export type hijoUpsertWithWhereUniqueWithoutEmpleadoInput = {
    where: hijoWhereUniqueInput
    update: XOR<hijoUpdateWithoutEmpleadoInput, hijoUncheckedUpdateWithoutEmpleadoInput>
    create: XOR<hijoCreateWithoutEmpleadoInput, hijoUncheckedCreateWithoutEmpleadoInput>
  }

  export type hijoUpdateWithWhereUniqueWithoutEmpleadoInput = {
    where: hijoWhereUniqueInput
    data: XOR<hijoUpdateWithoutEmpleadoInput, hijoUncheckedUpdateWithoutEmpleadoInput>
  }

  export type hijoUpdateManyWithWhereWithoutEmpleadoInput = {
    where: hijoScalarWhereInput
    data: XOR<hijoUpdateManyMutationInput, hijoUncheckedUpdateManyWithoutEmpleadoInput>
  }

  export type hijoScalarWhereInput = {
    AND?: hijoScalarWhereInput | hijoScalarWhereInput[]
    OR?: hijoScalarWhereInput[]
    NOT?: hijoScalarWhereInput | hijoScalarWhereInput[]
    id_hijo?: IntFilter<"hijo"> | number
    nombre?: StringFilter<"hijo"> | string
    certificado_vida_residencia?: StringFilter<"hijo"> | string
    fecha_vencimiento_certificado?: DateTimeFilter<"hijo"> | Date | string
    id_empleado?: IntFilter<"hijo"> | number
    discapacidad?: BoolFilter<"hijo"> | boolean
    fecha_nacimiento?: DateTimeFilter<"hijo"> | Date | string
    certificado_nacimiento?: StringFilter<"hijo"> | string
  }

  export type historial_cargoUpsertWithWhereUniqueWithoutEmpleadoInput = {
    where: historial_cargoWhereUniqueInput
    update: XOR<historial_cargoUpdateWithoutEmpleadoInput, historial_cargoUncheckedUpdateWithoutEmpleadoInput>
    create: XOR<historial_cargoCreateWithoutEmpleadoInput, historial_cargoUncheckedCreateWithoutEmpleadoInput>
  }

  export type historial_cargoUpdateWithWhereUniqueWithoutEmpleadoInput = {
    where: historial_cargoWhereUniqueInput
    data: XOR<historial_cargoUpdateWithoutEmpleadoInput, historial_cargoUncheckedUpdateWithoutEmpleadoInput>
  }

  export type historial_cargoUpdateManyWithWhereWithoutEmpleadoInput = {
    where: historial_cargoScalarWhereInput
    data: XOR<historial_cargoUpdateManyMutationInput, historial_cargoUncheckedUpdateManyWithoutEmpleadoInput>
  }

  export type usuarioUpsertWithoutEmpleadoInput = {
    update: XOR<usuarioUpdateWithoutEmpleadoInput, usuarioUncheckedUpdateWithoutEmpleadoInput>
    create: XOR<usuarioCreateWithoutEmpleadoInput, usuarioUncheckedCreateWithoutEmpleadoInput>
    where?: usuarioWhereInput
  }

  export type usuarioUpdateToOneWithWhereWithoutEmpleadoInput = {
    where?: usuarioWhereInput
    data: XOR<usuarioUpdateWithoutEmpleadoInput, usuarioUncheckedUpdateWithoutEmpleadoInput>
  }

  export type usuarioUpdateWithoutEmpleadoInput = {
    nombre_usuario?: StringFieldUpdateOperationsInput | string
    estado?: BoolFieldUpdateOperationsInput | boolean
    clave?: StringFieldUpdateOperationsInput | string
    detalle_nomina?: detalle_nominaUpdateManyWithoutUsuarioNestedInput
    registro_acceso?: registro_accesoUpdateManyWithoutUsuarioNestedInput
    rol_usuario?: rol_usuarioUpdateOneRequiredWithoutUsuarioNestedInput
  }

  export type usuarioUncheckedUpdateWithoutEmpleadoInput = {
    id_usuario?: IntFieldUpdateOperationsInput | number
    nombre_usuario?: StringFieldUpdateOperationsInput | string
    estado?: BoolFieldUpdateOperationsInput | boolean
    clave?: StringFieldUpdateOperationsInput | string
    id_rol_usuario?: IntFieldUpdateOperationsInput | number
    detalle_nomina?: detalle_nominaUncheckedUpdateManyWithoutUsuarioNestedInput
    registro_acceso?: registro_accesoUncheckedUpdateManyWithoutUsuarioNestedInput
  }

  export type empleadoCreateWithoutEstado_civilInput = {
    nombre: string
    cedula: string
    apellido: string
    fecha_nacimiento: Date | string
    correo: string
    fecha_ingreso: Date | string
    telefono: string
    fecha_egreso?: Date | string | null
    direccion: string
    afiliado_IPS: boolean
    concepto_empleado?: concepto_empleadoCreateNestedManyWithoutEmpleadoInput
    detalle_nomina?: detalle_nominaCreateNestedManyWithoutEmpleadoInput
    hijo?: hijoCreateNestedManyWithoutEmpleadoInput
    historial_cargo?: historial_cargoCreateNestedManyWithoutEmpleadoInput
    usuario?: usuarioCreateNestedOneWithoutEmpleadoInput
  }

  export type empleadoUncheckedCreateWithoutEstado_civilInput = {
    id_empleado?: number
    nombre: string
    cedula: string
    apellido: string
    fecha_nacimiento: Date | string
    correo: string
    fecha_ingreso: Date | string
    telefono: string
    fecha_egreso?: Date | string | null
    direccion: string
    afiliado_IPS: boolean
    concepto_empleado?: concepto_empleadoUncheckedCreateNestedManyWithoutEmpleadoInput
    detalle_nomina?: detalle_nominaUncheckedCreateNestedManyWithoutEmpleadoInput
    hijo?: hijoUncheckedCreateNestedManyWithoutEmpleadoInput
    historial_cargo?: historial_cargoUncheckedCreateNestedManyWithoutEmpleadoInput
    usuario?: usuarioUncheckedCreateNestedOneWithoutEmpleadoInput
  }

  export type empleadoCreateOrConnectWithoutEstado_civilInput = {
    where: empleadoWhereUniqueInput
    create: XOR<empleadoCreateWithoutEstado_civilInput, empleadoUncheckedCreateWithoutEstado_civilInput>
  }

  export type empleadoCreateManyEstado_civilInputEnvelope = {
    data: empleadoCreateManyEstado_civilInput | empleadoCreateManyEstado_civilInput[]
    skipDuplicates?: boolean
  }

  export type empleadoUpsertWithWhereUniqueWithoutEstado_civilInput = {
    where: empleadoWhereUniqueInput
    update: XOR<empleadoUpdateWithoutEstado_civilInput, empleadoUncheckedUpdateWithoutEstado_civilInput>
    create: XOR<empleadoCreateWithoutEstado_civilInput, empleadoUncheckedCreateWithoutEstado_civilInput>
  }

  export type empleadoUpdateWithWhereUniqueWithoutEstado_civilInput = {
    where: empleadoWhereUniqueInput
    data: XOR<empleadoUpdateWithoutEstado_civilInput, empleadoUncheckedUpdateWithoutEstado_civilInput>
  }

  export type empleadoUpdateManyWithWhereWithoutEstado_civilInput = {
    where: empleadoScalarWhereInput
    data: XOR<empleadoUpdateManyMutationInput, empleadoUncheckedUpdateManyWithoutEstado_civilInput>
  }

  export type empleadoScalarWhereInput = {
    AND?: empleadoScalarWhereInput | empleadoScalarWhereInput[]
    OR?: empleadoScalarWhereInput[]
    NOT?: empleadoScalarWhereInput | empleadoScalarWhereInput[]
    id_empleado?: IntFilter<"empleado"> | number
    nombre?: StringFilter<"empleado"> | string
    cedula?: StringFilter<"empleado"> | string
    apellido?: StringFilter<"empleado"> | string
    fecha_nacimiento?: DateTimeFilter<"empleado"> | Date | string
    correo?: StringFilter<"empleado"> | string
    fecha_ingreso?: DateTimeFilter<"empleado"> | Date | string
    telefono?: StringFilter<"empleado"> | string
    fecha_egreso?: DateTimeNullableFilter<"empleado"> | Date | string | null
    direccion?: StringFilter<"empleado"> | string
    afiliado_IPS?: BoolFilter<"empleado"> | boolean
    id_estado_civil?: IntFilter<"empleado"> | number
  }

  export type empleadoCreateWithoutHijoInput = {
    nombre: string
    cedula: string
    apellido: string
    fecha_nacimiento: Date | string
    correo: string
    fecha_ingreso: Date | string
    telefono: string
    fecha_egreso?: Date | string | null
    direccion: string
    afiliado_IPS: boolean
    concepto_empleado?: concepto_empleadoCreateNestedManyWithoutEmpleadoInput
    detalle_nomina?: detalle_nominaCreateNestedManyWithoutEmpleadoInput
    estado_civil: estado_civilCreateNestedOneWithoutEmpleadoInput
    historial_cargo?: historial_cargoCreateNestedManyWithoutEmpleadoInput
    usuario?: usuarioCreateNestedOneWithoutEmpleadoInput
  }

  export type empleadoUncheckedCreateWithoutHijoInput = {
    id_empleado?: number
    nombre: string
    cedula: string
    apellido: string
    fecha_nacimiento: Date | string
    correo: string
    fecha_ingreso: Date | string
    telefono: string
    fecha_egreso?: Date | string | null
    direccion: string
    afiliado_IPS: boolean
    id_estado_civil: number
    concepto_empleado?: concepto_empleadoUncheckedCreateNestedManyWithoutEmpleadoInput
    detalle_nomina?: detalle_nominaUncheckedCreateNestedManyWithoutEmpleadoInput
    historial_cargo?: historial_cargoUncheckedCreateNestedManyWithoutEmpleadoInput
    usuario?: usuarioUncheckedCreateNestedOneWithoutEmpleadoInput
  }

  export type empleadoCreateOrConnectWithoutHijoInput = {
    where: empleadoWhereUniqueInput
    create: XOR<empleadoCreateWithoutHijoInput, empleadoUncheckedCreateWithoutHijoInput>
  }

  export type empleadoUpsertWithoutHijoInput = {
    update: XOR<empleadoUpdateWithoutHijoInput, empleadoUncheckedUpdateWithoutHijoInput>
    create: XOR<empleadoCreateWithoutHijoInput, empleadoUncheckedCreateWithoutHijoInput>
    where?: empleadoWhereInput
  }

  export type empleadoUpdateToOneWithWhereWithoutHijoInput = {
    where?: empleadoWhereInput
    data: XOR<empleadoUpdateWithoutHijoInput, empleadoUncheckedUpdateWithoutHijoInput>
  }

  export type empleadoUpdateWithoutHijoInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    cedula?: StringFieldUpdateOperationsInput | string
    apellido?: StringFieldUpdateOperationsInput | string
    fecha_nacimiento?: DateTimeFieldUpdateOperationsInput | Date | string
    correo?: StringFieldUpdateOperationsInput | string
    fecha_ingreso?: DateTimeFieldUpdateOperationsInput | Date | string
    telefono?: StringFieldUpdateOperationsInput | string
    fecha_egreso?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    direccion?: StringFieldUpdateOperationsInput | string
    afiliado_IPS?: BoolFieldUpdateOperationsInput | boolean
    concepto_empleado?: concepto_empleadoUpdateManyWithoutEmpleadoNestedInput
    detalle_nomina?: detalle_nominaUpdateManyWithoutEmpleadoNestedInput
    estado_civil?: estado_civilUpdateOneRequiredWithoutEmpleadoNestedInput
    historial_cargo?: historial_cargoUpdateManyWithoutEmpleadoNestedInput
    usuario?: usuarioUpdateOneWithoutEmpleadoNestedInput
  }

  export type empleadoUncheckedUpdateWithoutHijoInput = {
    id_empleado?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    cedula?: StringFieldUpdateOperationsInput | string
    apellido?: StringFieldUpdateOperationsInput | string
    fecha_nacimiento?: DateTimeFieldUpdateOperationsInput | Date | string
    correo?: StringFieldUpdateOperationsInput | string
    fecha_ingreso?: DateTimeFieldUpdateOperationsInput | Date | string
    telefono?: StringFieldUpdateOperationsInput | string
    fecha_egreso?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    direccion?: StringFieldUpdateOperationsInput | string
    afiliado_IPS?: BoolFieldUpdateOperationsInput | boolean
    id_estado_civil?: IntFieldUpdateOperationsInput | number
    concepto_empleado?: concepto_empleadoUncheckedUpdateManyWithoutEmpleadoNestedInput
    detalle_nomina?: detalle_nominaUncheckedUpdateManyWithoutEmpleadoNestedInput
    historial_cargo?: historial_cargoUncheckedUpdateManyWithoutEmpleadoNestedInput
    usuario?: usuarioUncheckedUpdateOneWithoutEmpleadoNestedInput
  }

  export type cargoCreateWithoutHistorial_cargoInput = {
    nombre_cargo: string
    departamento_nombre: string
    Activo: boolean
    categoria_salarial: categoria_salarialCreateNestedOneWithoutCargoInput
    departamento_ref: departamentoCreateNestedOneWithoutCargoInput
  }

  export type cargoUncheckedCreateWithoutHistorial_cargoInput = {
    id_cargo?: number
    nombre_cargo: string
    departamento_nombre: string
    id_departamento: number
    Activo: boolean
    id_categoria_salarial: number
  }

  export type cargoCreateOrConnectWithoutHistorial_cargoInput = {
    where: cargoWhereUniqueInput
    create: XOR<cargoCreateWithoutHistorial_cargoInput, cargoUncheckedCreateWithoutHistorial_cargoInput>
  }

  export type empleadoCreateWithoutHistorial_cargoInput = {
    nombre: string
    cedula: string
    apellido: string
    fecha_nacimiento: Date | string
    correo: string
    fecha_ingreso: Date | string
    telefono: string
    fecha_egreso?: Date | string | null
    direccion: string
    afiliado_IPS: boolean
    concepto_empleado?: concepto_empleadoCreateNestedManyWithoutEmpleadoInput
    detalle_nomina?: detalle_nominaCreateNestedManyWithoutEmpleadoInput
    estado_civil: estado_civilCreateNestedOneWithoutEmpleadoInput
    hijo?: hijoCreateNestedManyWithoutEmpleadoInput
    usuario?: usuarioCreateNestedOneWithoutEmpleadoInput
  }

  export type empleadoUncheckedCreateWithoutHistorial_cargoInput = {
    id_empleado?: number
    nombre: string
    cedula: string
    apellido: string
    fecha_nacimiento: Date | string
    correo: string
    fecha_ingreso: Date | string
    telefono: string
    fecha_egreso?: Date | string | null
    direccion: string
    afiliado_IPS: boolean
    id_estado_civil: number
    concepto_empleado?: concepto_empleadoUncheckedCreateNestedManyWithoutEmpleadoInput
    detalle_nomina?: detalle_nominaUncheckedCreateNestedManyWithoutEmpleadoInput
    hijo?: hijoUncheckedCreateNestedManyWithoutEmpleadoInput
    usuario?: usuarioUncheckedCreateNestedOneWithoutEmpleadoInput
  }

  export type empleadoCreateOrConnectWithoutHistorial_cargoInput = {
    where: empleadoWhereUniqueInput
    create: XOR<empleadoCreateWithoutHistorial_cargoInput, empleadoUncheckedCreateWithoutHistorial_cargoInput>
  }

  export type cargoUpsertWithoutHistorial_cargoInput = {
    update: XOR<cargoUpdateWithoutHistorial_cargoInput, cargoUncheckedUpdateWithoutHistorial_cargoInput>
    create: XOR<cargoCreateWithoutHistorial_cargoInput, cargoUncheckedCreateWithoutHistorial_cargoInput>
    where?: cargoWhereInput
  }

  export type cargoUpdateToOneWithWhereWithoutHistorial_cargoInput = {
    where?: cargoWhereInput
    data: XOR<cargoUpdateWithoutHistorial_cargoInput, cargoUncheckedUpdateWithoutHistorial_cargoInput>
  }

  export type cargoUpdateWithoutHistorial_cargoInput = {
    nombre_cargo?: StringFieldUpdateOperationsInput | string
    departamento_nombre?: StringFieldUpdateOperationsInput | string
    Activo?: BoolFieldUpdateOperationsInput | boolean
    categoria_salarial?: categoria_salarialUpdateOneRequiredWithoutCargoNestedInput
    departamento_ref?: departamentoUpdateOneRequiredWithoutCargoNestedInput
  }

  export type cargoUncheckedUpdateWithoutHistorial_cargoInput = {
    id_cargo?: IntFieldUpdateOperationsInput | number
    nombre_cargo?: StringFieldUpdateOperationsInput | string
    departamento_nombre?: StringFieldUpdateOperationsInput | string
    id_departamento?: IntFieldUpdateOperationsInput | number
    Activo?: BoolFieldUpdateOperationsInput | boolean
    id_categoria_salarial?: IntFieldUpdateOperationsInput | number
  }

  export type empleadoUpsertWithoutHistorial_cargoInput = {
    update: XOR<empleadoUpdateWithoutHistorial_cargoInput, empleadoUncheckedUpdateWithoutHistorial_cargoInput>
    create: XOR<empleadoCreateWithoutHistorial_cargoInput, empleadoUncheckedCreateWithoutHistorial_cargoInput>
    where?: empleadoWhereInput
  }

  export type empleadoUpdateToOneWithWhereWithoutHistorial_cargoInput = {
    where?: empleadoWhereInput
    data: XOR<empleadoUpdateWithoutHistorial_cargoInput, empleadoUncheckedUpdateWithoutHistorial_cargoInput>
  }

  export type empleadoUpdateWithoutHistorial_cargoInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    cedula?: StringFieldUpdateOperationsInput | string
    apellido?: StringFieldUpdateOperationsInput | string
    fecha_nacimiento?: DateTimeFieldUpdateOperationsInput | Date | string
    correo?: StringFieldUpdateOperationsInput | string
    fecha_ingreso?: DateTimeFieldUpdateOperationsInput | Date | string
    telefono?: StringFieldUpdateOperationsInput | string
    fecha_egreso?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    direccion?: StringFieldUpdateOperationsInput | string
    afiliado_IPS?: BoolFieldUpdateOperationsInput | boolean
    concepto_empleado?: concepto_empleadoUpdateManyWithoutEmpleadoNestedInput
    detalle_nomina?: detalle_nominaUpdateManyWithoutEmpleadoNestedInput
    estado_civil?: estado_civilUpdateOneRequiredWithoutEmpleadoNestedInput
    hijo?: hijoUpdateManyWithoutEmpleadoNestedInput
    usuario?: usuarioUpdateOneWithoutEmpleadoNestedInput
  }

  export type empleadoUncheckedUpdateWithoutHistorial_cargoInput = {
    id_empleado?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    cedula?: StringFieldUpdateOperationsInput | string
    apellido?: StringFieldUpdateOperationsInput | string
    fecha_nacimiento?: DateTimeFieldUpdateOperationsInput | Date | string
    correo?: StringFieldUpdateOperationsInput | string
    fecha_ingreso?: DateTimeFieldUpdateOperationsInput | Date | string
    telefono?: StringFieldUpdateOperationsInput | string
    fecha_egreso?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    direccion?: StringFieldUpdateOperationsInput | string
    afiliado_IPS?: BoolFieldUpdateOperationsInput | boolean
    id_estado_civil?: IntFieldUpdateOperationsInput | number
    concepto_empleado?: concepto_empleadoUncheckedUpdateManyWithoutEmpleadoNestedInput
    detalle_nomina?: detalle_nominaUncheckedUpdateManyWithoutEmpleadoNestedInput
    hijo?: hijoUncheckedUpdateManyWithoutEmpleadoNestedInput
    usuario?: usuarioUncheckedUpdateOneWithoutEmpleadoNestedInput
  }

  export type detalle_nominaCreateWithoutNominaInput = {
    total_descuentos: Decimal | DecimalJsLike | number | string
    total_bonificaciones: Decimal | DecimalJsLike | number | string
    neto_a_cobrar: number
    usuario: usuarioCreateNestedOneWithoutDetalle_nominaInput
    empleado: empleadoCreateNestedOneWithoutDetalle_nominaInput
    detalle_nomina_concepto?: detalle_nomina_conceptoCreateNestedManyWithoutDetalle_nominaInput
  }

  export type detalle_nominaUncheckedCreateWithoutNominaInput = {
    id_detalle?: number
    total_descuentos: Decimal | DecimalJsLike | number | string
    total_bonificaciones: Decimal | DecimalJsLike | number | string
    neto_a_cobrar: number
    creado_por: number
    id_empleado: number
    detalle_nomina_concepto?: detalle_nomina_conceptoUncheckedCreateNestedManyWithoutDetalle_nominaInput
  }

  export type detalle_nominaCreateOrConnectWithoutNominaInput = {
    where: detalle_nominaWhereUniqueInput
    create: XOR<detalle_nominaCreateWithoutNominaInput, detalle_nominaUncheckedCreateWithoutNominaInput>
  }

  export type detalle_nominaCreateManyNominaInputEnvelope = {
    data: detalle_nominaCreateManyNominaInput | detalle_nominaCreateManyNominaInput[]
    skipDuplicates?: boolean
  }

  export type detalle_nominaUpsertWithWhereUniqueWithoutNominaInput = {
    where: detalle_nominaWhereUniqueInput
    update: XOR<detalle_nominaUpdateWithoutNominaInput, detalle_nominaUncheckedUpdateWithoutNominaInput>
    create: XOR<detalle_nominaCreateWithoutNominaInput, detalle_nominaUncheckedCreateWithoutNominaInput>
  }

  export type detalle_nominaUpdateWithWhereUniqueWithoutNominaInput = {
    where: detalle_nominaWhereUniqueInput
    data: XOR<detalle_nominaUpdateWithoutNominaInput, detalle_nominaUncheckedUpdateWithoutNominaInput>
  }

  export type detalle_nominaUpdateManyWithWhereWithoutNominaInput = {
    where: detalle_nominaScalarWhereInput
    data: XOR<detalle_nominaUpdateManyMutationInput, detalle_nominaUncheckedUpdateManyWithoutNominaInput>
  }

  export type usuarioCreateWithoutRegistro_accesoInput = {
    nombre_usuario: string
    estado: boolean
    clave: string
    detalle_nomina?: detalle_nominaCreateNestedManyWithoutUsuarioInput
    empleado: empleadoCreateNestedOneWithoutUsuarioInput
    rol_usuario: rol_usuarioCreateNestedOneWithoutUsuarioInput
  }

  export type usuarioUncheckedCreateWithoutRegistro_accesoInput = {
    id_usuario?: number
    nombre_usuario: string
    estado: boolean
    clave: string
    id_rol_usuario: number
    id_empleado: number
    detalle_nomina?: detalle_nominaUncheckedCreateNestedManyWithoutUsuarioInput
  }

  export type usuarioCreateOrConnectWithoutRegistro_accesoInput = {
    where: usuarioWhereUniqueInput
    create: XOR<usuarioCreateWithoutRegistro_accesoInput, usuarioUncheckedCreateWithoutRegistro_accesoInput>
  }

  export type usuarioUpsertWithoutRegistro_accesoInput = {
    update: XOR<usuarioUpdateWithoutRegistro_accesoInput, usuarioUncheckedUpdateWithoutRegistro_accesoInput>
    create: XOR<usuarioCreateWithoutRegistro_accesoInput, usuarioUncheckedCreateWithoutRegistro_accesoInput>
    where?: usuarioWhereInput
  }

  export type usuarioUpdateToOneWithWhereWithoutRegistro_accesoInput = {
    where?: usuarioWhereInput
    data: XOR<usuarioUpdateWithoutRegistro_accesoInput, usuarioUncheckedUpdateWithoutRegistro_accesoInput>
  }

  export type usuarioUpdateWithoutRegistro_accesoInput = {
    nombre_usuario?: StringFieldUpdateOperationsInput | string
    estado?: BoolFieldUpdateOperationsInput | boolean
    clave?: StringFieldUpdateOperationsInput | string
    detalle_nomina?: detalle_nominaUpdateManyWithoutUsuarioNestedInput
    empleado?: empleadoUpdateOneRequiredWithoutUsuarioNestedInput
    rol_usuario?: rol_usuarioUpdateOneRequiredWithoutUsuarioNestedInput
  }

  export type usuarioUncheckedUpdateWithoutRegistro_accesoInput = {
    id_usuario?: IntFieldUpdateOperationsInput | number
    nombre_usuario?: StringFieldUpdateOperationsInput | string
    estado?: BoolFieldUpdateOperationsInput | boolean
    clave?: StringFieldUpdateOperationsInput | string
    id_rol_usuario?: IntFieldUpdateOperationsInput | number
    id_empleado?: IntFieldUpdateOperationsInput | number
    detalle_nomina?: detalle_nominaUncheckedUpdateManyWithoutUsuarioNestedInput
  }

  export type usuarioCreateWithoutRol_usuarioInput = {
    nombre_usuario: string
    estado: boolean
    clave: string
    detalle_nomina?: detalle_nominaCreateNestedManyWithoutUsuarioInput
    registro_acceso?: registro_accesoCreateNestedManyWithoutUsuarioInput
    empleado: empleadoCreateNestedOneWithoutUsuarioInput
  }

  export type usuarioUncheckedCreateWithoutRol_usuarioInput = {
    id_usuario?: number
    nombre_usuario: string
    estado: boolean
    clave: string
    id_empleado: number
    detalle_nomina?: detalle_nominaUncheckedCreateNestedManyWithoutUsuarioInput
    registro_acceso?: registro_accesoUncheckedCreateNestedManyWithoutUsuarioInput
  }

  export type usuarioCreateOrConnectWithoutRol_usuarioInput = {
    where: usuarioWhereUniqueInput
    create: XOR<usuarioCreateWithoutRol_usuarioInput, usuarioUncheckedCreateWithoutRol_usuarioInput>
  }

  export type usuarioCreateManyRol_usuarioInputEnvelope = {
    data: usuarioCreateManyRol_usuarioInput | usuarioCreateManyRol_usuarioInput[]
    skipDuplicates?: boolean
  }

  export type usuarioUpsertWithWhereUniqueWithoutRol_usuarioInput = {
    where: usuarioWhereUniqueInput
    update: XOR<usuarioUpdateWithoutRol_usuarioInput, usuarioUncheckedUpdateWithoutRol_usuarioInput>
    create: XOR<usuarioCreateWithoutRol_usuarioInput, usuarioUncheckedCreateWithoutRol_usuarioInput>
  }

  export type usuarioUpdateWithWhereUniqueWithoutRol_usuarioInput = {
    where: usuarioWhereUniqueInput
    data: XOR<usuarioUpdateWithoutRol_usuarioInput, usuarioUncheckedUpdateWithoutRol_usuarioInput>
  }

  export type usuarioUpdateManyWithWhereWithoutRol_usuarioInput = {
    where: usuarioScalarWhereInput
    data: XOR<usuarioUpdateManyMutationInput, usuarioUncheckedUpdateManyWithoutRol_usuarioInput>
  }

  export type usuarioScalarWhereInput = {
    AND?: usuarioScalarWhereInput | usuarioScalarWhereInput[]
    OR?: usuarioScalarWhereInput[]
    NOT?: usuarioScalarWhereInput | usuarioScalarWhereInput[]
    id_usuario?: IntFilter<"usuario"> | number
    nombre_usuario?: StringFilter<"usuario"> | string
    estado?: BoolFilter<"usuario"> | boolean
    clave?: StringFilter<"usuario"> | string
    id_rol_usuario?: IntFilter<"usuario"> | number
    id_empleado?: IntFilter<"usuario"> | number
  }

  export type concepto_salarialCreateWithoutTipo_concepto_salarialInput = {
    nombre: string
    recurrente: boolean
    afecta_IPS: boolean
    afecta_aguinaldo: boolean
    concepto_empleado?: concepto_empleadoCreateNestedManyWithoutConcepto_salarialInput
    detalle_nomina_concepto?: detalle_nomina_conceptoCreateNestedManyWithoutConcepto_salarialInput
  }

  export type concepto_salarialUncheckedCreateWithoutTipo_concepto_salarialInput = {
    id_concepto?: number
    nombre: string
    recurrente: boolean
    afecta_IPS: boolean
    afecta_aguinaldo: boolean
    concepto_empleado?: concepto_empleadoUncheckedCreateNestedManyWithoutConcepto_salarialInput
    detalle_nomina_concepto?: detalle_nomina_conceptoUncheckedCreateNestedManyWithoutConcepto_salarialInput
  }

  export type concepto_salarialCreateOrConnectWithoutTipo_concepto_salarialInput = {
    where: concepto_salarialWhereUniqueInput
    create: XOR<concepto_salarialCreateWithoutTipo_concepto_salarialInput, concepto_salarialUncheckedCreateWithoutTipo_concepto_salarialInput>
  }

  export type concepto_salarialCreateManyTipo_concepto_salarialInputEnvelope = {
    data: concepto_salarialCreateManyTipo_concepto_salarialInput | concepto_salarialCreateManyTipo_concepto_salarialInput[]
    skipDuplicates?: boolean
  }

  export type concepto_salarialUpsertWithWhereUniqueWithoutTipo_concepto_salarialInput = {
    where: concepto_salarialWhereUniqueInput
    update: XOR<concepto_salarialUpdateWithoutTipo_concepto_salarialInput, concepto_salarialUncheckedUpdateWithoutTipo_concepto_salarialInput>
    create: XOR<concepto_salarialCreateWithoutTipo_concepto_salarialInput, concepto_salarialUncheckedCreateWithoutTipo_concepto_salarialInput>
  }

  export type concepto_salarialUpdateWithWhereUniqueWithoutTipo_concepto_salarialInput = {
    where: concepto_salarialWhereUniqueInput
    data: XOR<concepto_salarialUpdateWithoutTipo_concepto_salarialInput, concepto_salarialUncheckedUpdateWithoutTipo_concepto_salarialInput>
  }

  export type concepto_salarialUpdateManyWithWhereWithoutTipo_concepto_salarialInput = {
    where: concepto_salarialScalarWhereInput
    data: XOR<concepto_salarialUpdateManyMutationInput, concepto_salarialUncheckedUpdateManyWithoutTipo_concepto_salarialInput>
  }

  export type concepto_salarialScalarWhereInput = {
    AND?: concepto_salarialScalarWhereInput | concepto_salarialScalarWhereInput[]
    OR?: concepto_salarialScalarWhereInput[]
    NOT?: concepto_salarialScalarWhereInput | concepto_salarialScalarWhereInput[]
    id_concepto?: IntFilter<"concepto_salarial"> | number
    nombre?: StringFilter<"concepto_salarial"> | string
    recurrente?: BoolFilter<"concepto_salarial"> | boolean
    afecta_IPS?: BoolFilter<"concepto_salarial"> | boolean
    afecta_aguinaldo?: BoolFilter<"concepto_salarial"> | boolean
    id_concepto_salarial?: IntFilter<"concepto_salarial"> | number
  }

  export type detalle_nominaCreateWithoutUsuarioInput = {
    total_descuentos: Decimal | DecimalJsLike | number | string
    total_bonificaciones: Decimal | DecimalJsLike | number | string
    neto_a_cobrar: number
    empleado: empleadoCreateNestedOneWithoutDetalle_nominaInput
    nomina: nominaCreateNestedOneWithoutDetalle_nominaInput
    detalle_nomina_concepto?: detalle_nomina_conceptoCreateNestedManyWithoutDetalle_nominaInput
  }

  export type detalle_nominaUncheckedCreateWithoutUsuarioInput = {
    id_detalle?: number
    total_descuentos: Decimal | DecimalJsLike | number | string
    total_bonificaciones: Decimal | DecimalJsLike | number | string
    neto_a_cobrar: number
    id_nomina: number
    id_empleado: number
    detalle_nomina_concepto?: detalle_nomina_conceptoUncheckedCreateNestedManyWithoutDetalle_nominaInput
  }

  export type detalle_nominaCreateOrConnectWithoutUsuarioInput = {
    where: detalle_nominaWhereUniqueInput
    create: XOR<detalle_nominaCreateWithoutUsuarioInput, detalle_nominaUncheckedCreateWithoutUsuarioInput>
  }

  export type detalle_nominaCreateManyUsuarioInputEnvelope = {
    data: detalle_nominaCreateManyUsuarioInput | detalle_nominaCreateManyUsuarioInput[]
    skipDuplicates?: boolean
  }

  export type registro_accesoCreateWithoutUsuarioInput = {
    ip_origen: string
    accion: string
    fecha_hora: Date | string
  }

  export type registro_accesoUncheckedCreateWithoutUsuarioInput = {
    id_registro?: number
    ip_origen: string
    accion: string
    fecha_hora: Date | string
  }

  export type registro_accesoCreateOrConnectWithoutUsuarioInput = {
    where: registro_accesoWhereUniqueInput
    create: XOR<registro_accesoCreateWithoutUsuarioInput, registro_accesoUncheckedCreateWithoutUsuarioInput>
  }

  export type registro_accesoCreateManyUsuarioInputEnvelope = {
    data: registro_accesoCreateManyUsuarioInput | registro_accesoCreateManyUsuarioInput[]
    skipDuplicates?: boolean
  }

  export type empleadoCreateWithoutUsuarioInput = {
    nombre: string
    cedula: string
    apellido: string
    fecha_nacimiento: Date | string
    correo: string
    fecha_ingreso: Date | string
    telefono: string
    fecha_egreso?: Date | string | null
    direccion: string
    afiliado_IPS: boolean
    concepto_empleado?: concepto_empleadoCreateNestedManyWithoutEmpleadoInput
    detalle_nomina?: detalle_nominaCreateNestedManyWithoutEmpleadoInput
    estado_civil: estado_civilCreateNestedOneWithoutEmpleadoInput
    hijo?: hijoCreateNestedManyWithoutEmpleadoInput
    historial_cargo?: historial_cargoCreateNestedManyWithoutEmpleadoInput
  }

  export type empleadoUncheckedCreateWithoutUsuarioInput = {
    id_empleado?: number
    nombre: string
    cedula: string
    apellido: string
    fecha_nacimiento: Date | string
    correo: string
    fecha_ingreso: Date | string
    telefono: string
    fecha_egreso?: Date | string | null
    direccion: string
    afiliado_IPS: boolean
    id_estado_civil: number
    concepto_empleado?: concepto_empleadoUncheckedCreateNestedManyWithoutEmpleadoInput
    detalle_nomina?: detalle_nominaUncheckedCreateNestedManyWithoutEmpleadoInput
    hijo?: hijoUncheckedCreateNestedManyWithoutEmpleadoInput
    historial_cargo?: historial_cargoUncheckedCreateNestedManyWithoutEmpleadoInput
  }

  export type empleadoCreateOrConnectWithoutUsuarioInput = {
    where: empleadoWhereUniqueInput
    create: XOR<empleadoCreateWithoutUsuarioInput, empleadoUncheckedCreateWithoutUsuarioInput>
  }

  export type rol_usuarioCreateWithoutUsuarioInput = {
    nombre: string
    descripcion_rol: string
  }

  export type rol_usuarioUncheckedCreateWithoutUsuarioInput = {
    id_rol_usuario?: number
    nombre: string
    descripcion_rol: string
  }

  export type rol_usuarioCreateOrConnectWithoutUsuarioInput = {
    where: rol_usuarioWhereUniqueInput
    create: XOR<rol_usuarioCreateWithoutUsuarioInput, rol_usuarioUncheckedCreateWithoutUsuarioInput>
  }

  export type detalle_nominaUpsertWithWhereUniqueWithoutUsuarioInput = {
    where: detalle_nominaWhereUniqueInput
    update: XOR<detalle_nominaUpdateWithoutUsuarioInput, detalle_nominaUncheckedUpdateWithoutUsuarioInput>
    create: XOR<detalle_nominaCreateWithoutUsuarioInput, detalle_nominaUncheckedCreateWithoutUsuarioInput>
  }

  export type detalle_nominaUpdateWithWhereUniqueWithoutUsuarioInput = {
    where: detalle_nominaWhereUniqueInput
    data: XOR<detalle_nominaUpdateWithoutUsuarioInput, detalle_nominaUncheckedUpdateWithoutUsuarioInput>
  }

  export type detalle_nominaUpdateManyWithWhereWithoutUsuarioInput = {
    where: detalle_nominaScalarWhereInput
    data: XOR<detalle_nominaUpdateManyMutationInput, detalle_nominaUncheckedUpdateManyWithoutUsuarioInput>
  }

  export type registro_accesoUpsertWithWhereUniqueWithoutUsuarioInput = {
    where: registro_accesoWhereUniqueInput
    update: XOR<registro_accesoUpdateWithoutUsuarioInput, registro_accesoUncheckedUpdateWithoutUsuarioInput>
    create: XOR<registro_accesoCreateWithoutUsuarioInput, registro_accesoUncheckedCreateWithoutUsuarioInput>
  }

  export type registro_accesoUpdateWithWhereUniqueWithoutUsuarioInput = {
    where: registro_accesoWhereUniqueInput
    data: XOR<registro_accesoUpdateWithoutUsuarioInput, registro_accesoUncheckedUpdateWithoutUsuarioInput>
  }

  export type registro_accesoUpdateManyWithWhereWithoutUsuarioInput = {
    where: registro_accesoScalarWhereInput
    data: XOR<registro_accesoUpdateManyMutationInput, registro_accesoUncheckedUpdateManyWithoutUsuarioInput>
  }

  export type registro_accesoScalarWhereInput = {
    AND?: registro_accesoScalarWhereInput | registro_accesoScalarWhereInput[]
    OR?: registro_accesoScalarWhereInput[]
    NOT?: registro_accesoScalarWhereInput | registro_accesoScalarWhereInput[]
    id_registro?: IntFilter<"registro_acceso"> | number
    id_usuario?: IntFilter<"registro_acceso"> | number
    ip_origen?: StringFilter<"registro_acceso"> | string
    accion?: StringFilter<"registro_acceso"> | string
    fecha_hora?: DateTimeFilter<"registro_acceso"> | Date | string
  }

  export type empleadoUpsertWithoutUsuarioInput = {
    update: XOR<empleadoUpdateWithoutUsuarioInput, empleadoUncheckedUpdateWithoutUsuarioInput>
    create: XOR<empleadoCreateWithoutUsuarioInput, empleadoUncheckedCreateWithoutUsuarioInput>
    where?: empleadoWhereInput
  }

  export type empleadoUpdateToOneWithWhereWithoutUsuarioInput = {
    where?: empleadoWhereInput
    data: XOR<empleadoUpdateWithoutUsuarioInput, empleadoUncheckedUpdateWithoutUsuarioInput>
  }

  export type empleadoUpdateWithoutUsuarioInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    cedula?: StringFieldUpdateOperationsInput | string
    apellido?: StringFieldUpdateOperationsInput | string
    fecha_nacimiento?: DateTimeFieldUpdateOperationsInput | Date | string
    correo?: StringFieldUpdateOperationsInput | string
    fecha_ingreso?: DateTimeFieldUpdateOperationsInput | Date | string
    telefono?: StringFieldUpdateOperationsInput | string
    fecha_egreso?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    direccion?: StringFieldUpdateOperationsInput | string
    afiliado_IPS?: BoolFieldUpdateOperationsInput | boolean
    concepto_empleado?: concepto_empleadoUpdateManyWithoutEmpleadoNestedInput
    detalle_nomina?: detalle_nominaUpdateManyWithoutEmpleadoNestedInput
    estado_civil?: estado_civilUpdateOneRequiredWithoutEmpleadoNestedInput
    hijo?: hijoUpdateManyWithoutEmpleadoNestedInput
    historial_cargo?: historial_cargoUpdateManyWithoutEmpleadoNestedInput
  }

  export type empleadoUncheckedUpdateWithoutUsuarioInput = {
    id_empleado?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    cedula?: StringFieldUpdateOperationsInput | string
    apellido?: StringFieldUpdateOperationsInput | string
    fecha_nacimiento?: DateTimeFieldUpdateOperationsInput | Date | string
    correo?: StringFieldUpdateOperationsInput | string
    fecha_ingreso?: DateTimeFieldUpdateOperationsInput | Date | string
    telefono?: StringFieldUpdateOperationsInput | string
    fecha_egreso?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    direccion?: StringFieldUpdateOperationsInput | string
    afiliado_IPS?: BoolFieldUpdateOperationsInput | boolean
    id_estado_civil?: IntFieldUpdateOperationsInput | number
    concepto_empleado?: concepto_empleadoUncheckedUpdateManyWithoutEmpleadoNestedInput
    detalle_nomina?: detalle_nominaUncheckedUpdateManyWithoutEmpleadoNestedInput
    hijo?: hijoUncheckedUpdateManyWithoutEmpleadoNestedInput
    historial_cargo?: historial_cargoUncheckedUpdateManyWithoutEmpleadoNestedInput
  }

  export type rol_usuarioUpsertWithoutUsuarioInput = {
    update: XOR<rol_usuarioUpdateWithoutUsuarioInput, rol_usuarioUncheckedUpdateWithoutUsuarioInput>
    create: XOR<rol_usuarioCreateWithoutUsuarioInput, rol_usuarioUncheckedCreateWithoutUsuarioInput>
    where?: rol_usuarioWhereInput
  }

  export type rol_usuarioUpdateToOneWithWhereWithoutUsuarioInput = {
    where?: rol_usuarioWhereInput
    data: XOR<rol_usuarioUpdateWithoutUsuarioInput, rol_usuarioUncheckedUpdateWithoutUsuarioInput>
  }

  export type rol_usuarioUpdateWithoutUsuarioInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion_rol?: StringFieldUpdateOperationsInput | string
  }

  export type rol_usuarioUncheckedUpdateWithoutUsuarioInput = {
    id_rol_usuario?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion_rol?: StringFieldUpdateOperationsInput | string
  }

  export type historial_cargoCreateManyCargoInput = {
    id_historial?: number
    id_empleado: number
    Fecha_Inicio: Date | string
    fecha_fin?: Date | string | null
    Salario_Asignado: number
  }

  export type historial_cargoUpdateWithoutCargoInput = {
    Fecha_Inicio?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_fin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    Salario_Asignado?: IntFieldUpdateOperationsInput | number
    empleado?: empleadoUpdateOneRequiredWithoutHistorial_cargoNestedInput
  }

  export type historial_cargoUncheckedUpdateWithoutCargoInput = {
    id_historial?: IntFieldUpdateOperationsInput | number
    id_empleado?: IntFieldUpdateOperationsInput | number
    Fecha_Inicio?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_fin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    Salario_Asignado?: IntFieldUpdateOperationsInput | number
  }

  export type historial_cargoUncheckedUpdateManyWithoutCargoInput = {
    id_historial?: IntFieldUpdateOperationsInput | number
    id_empleado?: IntFieldUpdateOperationsInput | number
    Fecha_Inicio?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_fin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    Salario_Asignado?: IntFieldUpdateOperationsInput | number
  }

  export type cargoCreateManyCategoria_salarialInput = {
    id_cargo?: number
    nombre_cargo: string
    departamento_nombre: string
    id_departamento: number
    Activo: boolean
  }

  export type cargoUpdateWithoutCategoria_salarialInput = {
    nombre_cargo?: StringFieldUpdateOperationsInput | string
    departamento_nombre?: StringFieldUpdateOperationsInput | string
    Activo?: BoolFieldUpdateOperationsInput | boolean
    departamento_ref?: departamentoUpdateOneRequiredWithoutCargoNestedInput
    historial_cargo?: historial_cargoUpdateManyWithoutCargoNestedInput
  }

  export type cargoUncheckedUpdateWithoutCategoria_salarialInput = {
    id_cargo?: IntFieldUpdateOperationsInput | number
    nombre_cargo?: StringFieldUpdateOperationsInput | string
    departamento_nombre?: StringFieldUpdateOperationsInput | string
    id_departamento?: IntFieldUpdateOperationsInput | number
    Activo?: BoolFieldUpdateOperationsInput | boolean
    historial_cargo?: historial_cargoUncheckedUpdateManyWithoutCargoNestedInput
  }

  export type cargoUncheckedUpdateManyWithoutCategoria_salarialInput = {
    id_cargo?: IntFieldUpdateOperationsInput | number
    nombre_cargo?: StringFieldUpdateOperationsInput | string
    departamento_nombre?: StringFieldUpdateOperationsInput | string
    id_departamento?: IntFieldUpdateOperationsInput | number
    Activo?: BoolFieldUpdateOperationsInput | boolean
  }

  export type concepto_empleadoCreateManyConcepto_salarialInput = {
    id_concepto_empleado?: number
    monto: Decimal | DecimalJsLike | number | string
    id_empleado: number
    observacion: string
    activo: boolean
  }

  export type detalle_nomina_conceptoCreateManyConcepto_salarialInput = {
    id_detalle_conceptos: number
    monto: Decimal | DecimalJsLike | number | string
    id_detalle: number
    origen: string
  }

  export type concepto_empleadoUpdateWithoutConcepto_salarialInput = {
    monto?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    observacion?: StringFieldUpdateOperationsInput | string
    activo?: BoolFieldUpdateOperationsInput | boolean
    empleado?: empleadoUpdateOneRequiredWithoutConcepto_empleadoNestedInput
  }

  export type concepto_empleadoUncheckedUpdateWithoutConcepto_salarialInput = {
    id_concepto_empleado?: IntFieldUpdateOperationsInput | number
    monto?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    id_empleado?: IntFieldUpdateOperationsInput | number
    observacion?: StringFieldUpdateOperationsInput | string
    activo?: BoolFieldUpdateOperationsInput | boolean
  }

  export type concepto_empleadoUncheckedUpdateManyWithoutConcepto_salarialInput = {
    id_concepto_empleado?: IntFieldUpdateOperationsInput | number
    monto?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    id_empleado?: IntFieldUpdateOperationsInput | number
    observacion?: StringFieldUpdateOperationsInput | string
    activo?: BoolFieldUpdateOperationsInput | boolean
  }

  export type detalle_nomina_conceptoUpdateWithoutConcepto_salarialInput = {
    id_detalle_conceptos?: IntFieldUpdateOperationsInput | number
    monto?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    origen?: StringFieldUpdateOperationsInput | string
    detalle_nomina?: detalle_nominaUpdateOneRequiredWithoutDetalle_nomina_conceptoNestedInput
  }

  export type detalle_nomina_conceptoUncheckedUpdateWithoutConcepto_salarialInput = {
    id_detalle_conceptos?: IntFieldUpdateOperationsInput | number
    monto?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    id_detalle?: IntFieldUpdateOperationsInput | number
    origen?: StringFieldUpdateOperationsInput | string
  }

  export type detalle_nomina_conceptoUncheckedUpdateManyWithoutConcepto_salarialInput = {
    id_detalle_conceptos?: IntFieldUpdateOperationsInput | number
    monto?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    id_detalle?: IntFieldUpdateOperationsInput | number
    origen?: StringFieldUpdateOperationsInput | string
  }

  export type cargoCreateManyDepartamento_refInput = {
    id_cargo?: number
    nombre_cargo: string
    departamento_nombre: string
    Activo: boolean
    id_categoria_salarial: number
  }

  export type cargoUpdateWithoutDepartamento_refInput = {
    nombre_cargo?: StringFieldUpdateOperationsInput | string
    departamento_nombre?: StringFieldUpdateOperationsInput | string
    Activo?: BoolFieldUpdateOperationsInput | boolean
    categoria_salarial?: categoria_salarialUpdateOneRequiredWithoutCargoNestedInput
    historial_cargo?: historial_cargoUpdateManyWithoutCargoNestedInput
  }

  export type cargoUncheckedUpdateWithoutDepartamento_refInput = {
    id_cargo?: IntFieldUpdateOperationsInput | number
    nombre_cargo?: StringFieldUpdateOperationsInput | string
    departamento_nombre?: StringFieldUpdateOperationsInput | string
    Activo?: BoolFieldUpdateOperationsInput | boolean
    id_categoria_salarial?: IntFieldUpdateOperationsInput | number
    historial_cargo?: historial_cargoUncheckedUpdateManyWithoutCargoNestedInput
  }

  export type cargoUncheckedUpdateManyWithoutDepartamento_refInput = {
    id_cargo?: IntFieldUpdateOperationsInput | number
    nombre_cargo?: StringFieldUpdateOperationsInput | string
    departamento_nombre?: StringFieldUpdateOperationsInput | string
    Activo?: BoolFieldUpdateOperationsInput | boolean
    id_categoria_salarial?: IntFieldUpdateOperationsInput | number
  }

  export type detalle_nomina_conceptoCreateManyDetalle_nominaInput = {
    id_detalle_conceptos: number
    monto: Decimal | DecimalJsLike | number | string
    id_concepto: number
    origen: string
  }

  export type detalle_nomina_conceptoUpdateWithoutDetalle_nominaInput = {
    id_detalle_conceptos?: IntFieldUpdateOperationsInput | number
    monto?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    origen?: StringFieldUpdateOperationsInput | string
    concepto_salarial?: concepto_salarialUpdateOneRequiredWithoutDetalle_nomina_conceptoNestedInput
  }

  export type detalle_nomina_conceptoUncheckedUpdateWithoutDetalle_nominaInput = {
    id_detalle_conceptos?: IntFieldUpdateOperationsInput | number
    monto?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    id_concepto?: IntFieldUpdateOperationsInput | number
    origen?: StringFieldUpdateOperationsInput | string
  }

  export type detalle_nomina_conceptoUncheckedUpdateManyWithoutDetalle_nominaInput = {
    id_detalle_conceptos?: IntFieldUpdateOperationsInput | number
    monto?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    id_concepto?: IntFieldUpdateOperationsInput | number
    origen?: StringFieldUpdateOperationsInput | string
  }

  export type concepto_empleadoCreateManyEmpleadoInput = {
    id_concepto_empleado?: number
    monto: Decimal | DecimalJsLike | number | string
    observacion: string
    activo: boolean
    id_concepto: number
  }

  export type detalle_nominaCreateManyEmpleadoInput = {
    id_detalle?: number
    total_descuentos: Decimal | DecimalJsLike | number | string
    total_bonificaciones: Decimal | DecimalJsLike | number | string
    neto_a_cobrar: number
    creado_por: number
    id_nomina: number
  }

  export type hijoCreateManyEmpleadoInput = {
    id_hijo?: number
    nombre: string
    certificado_vida_residencia: string
    fecha_vencimiento_certificado: Date | string
    discapacidad: boolean
    fecha_nacimiento: Date | string
    certificado_nacimiento: string
  }

  export type historial_cargoCreateManyEmpleadoInput = {
    id_historial?: number
    Fecha_Inicio: Date | string
    fecha_fin?: Date | string | null
    Salario_Asignado: number
    id_cargo: number
  }

  export type concepto_empleadoUpdateWithoutEmpleadoInput = {
    monto?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    observacion?: StringFieldUpdateOperationsInput | string
    activo?: BoolFieldUpdateOperationsInput | boolean
    concepto_salarial?: concepto_salarialUpdateOneRequiredWithoutConcepto_empleadoNestedInput
  }

  export type concepto_empleadoUncheckedUpdateWithoutEmpleadoInput = {
    id_concepto_empleado?: IntFieldUpdateOperationsInput | number
    monto?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    observacion?: StringFieldUpdateOperationsInput | string
    activo?: BoolFieldUpdateOperationsInput | boolean
    id_concepto?: IntFieldUpdateOperationsInput | number
  }

  export type concepto_empleadoUncheckedUpdateManyWithoutEmpleadoInput = {
    id_concepto_empleado?: IntFieldUpdateOperationsInput | number
    monto?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    observacion?: StringFieldUpdateOperationsInput | string
    activo?: BoolFieldUpdateOperationsInput | boolean
    id_concepto?: IntFieldUpdateOperationsInput | number
  }

  export type detalle_nominaUpdateWithoutEmpleadoInput = {
    total_descuentos?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    total_bonificaciones?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    neto_a_cobrar?: IntFieldUpdateOperationsInput | number
    usuario?: usuarioUpdateOneRequiredWithoutDetalle_nominaNestedInput
    nomina?: nominaUpdateOneRequiredWithoutDetalle_nominaNestedInput
    detalle_nomina_concepto?: detalle_nomina_conceptoUpdateManyWithoutDetalle_nominaNestedInput
  }

  export type detalle_nominaUncheckedUpdateWithoutEmpleadoInput = {
    id_detalle?: IntFieldUpdateOperationsInput | number
    total_descuentos?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    total_bonificaciones?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    neto_a_cobrar?: IntFieldUpdateOperationsInput | number
    creado_por?: IntFieldUpdateOperationsInput | number
    id_nomina?: IntFieldUpdateOperationsInput | number
    detalle_nomina_concepto?: detalle_nomina_conceptoUncheckedUpdateManyWithoutDetalle_nominaNestedInput
  }

  export type detalle_nominaUncheckedUpdateManyWithoutEmpleadoInput = {
    id_detalle?: IntFieldUpdateOperationsInput | number
    total_descuentos?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    total_bonificaciones?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    neto_a_cobrar?: IntFieldUpdateOperationsInput | number
    creado_por?: IntFieldUpdateOperationsInput | number
    id_nomina?: IntFieldUpdateOperationsInput | number
  }

  export type hijoUpdateWithoutEmpleadoInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    certificado_vida_residencia?: StringFieldUpdateOperationsInput | string
    fecha_vencimiento_certificado?: DateTimeFieldUpdateOperationsInput | Date | string
    discapacidad?: BoolFieldUpdateOperationsInput | boolean
    fecha_nacimiento?: DateTimeFieldUpdateOperationsInput | Date | string
    certificado_nacimiento?: StringFieldUpdateOperationsInput | string
  }

  export type hijoUncheckedUpdateWithoutEmpleadoInput = {
    id_hijo?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    certificado_vida_residencia?: StringFieldUpdateOperationsInput | string
    fecha_vencimiento_certificado?: DateTimeFieldUpdateOperationsInput | Date | string
    discapacidad?: BoolFieldUpdateOperationsInput | boolean
    fecha_nacimiento?: DateTimeFieldUpdateOperationsInput | Date | string
    certificado_nacimiento?: StringFieldUpdateOperationsInput | string
  }

  export type hijoUncheckedUpdateManyWithoutEmpleadoInput = {
    id_hijo?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    certificado_vida_residencia?: StringFieldUpdateOperationsInput | string
    fecha_vencimiento_certificado?: DateTimeFieldUpdateOperationsInput | Date | string
    discapacidad?: BoolFieldUpdateOperationsInput | boolean
    fecha_nacimiento?: DateTimeFieldUpdateOperationsInput | Date | string
    certificado_nacimiento?: StringFieldUpdateOperationsInput | string
  }

  export type historial_cargoUpdateWithoutEmpleadoInput = {
    Fecha_Inicio?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_fin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    Salario_Asignado?: IntFieldUpdateOperationsInput | number
    cargo?: cargoUpdateOneRequiredWithoutHistorial_cargoNestedInput
  }

  export type historial_cargoUncheckedUpdateWithoutEmpleadoInput = {
    id_historial?: IntFieldUpdateOperationsInput | number
    Fecha_Inicio?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_fin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    Salario_Asignado?: IntFieldUpdateOperationsInput | number
    id_cargo?: IntFieldUpdateOperationsInput | number
  }

  export type historial_cargoUncheckedUpdateManyWithoutEmpleadoInput = {
    id_historial?: IntFieldUpdateOperationsInput | number
    Fecha_Inicio?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_fin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    Salario_Asignado?: IntFieldUpdateOperationsInput | number
    id_cargo?: IntFieldUpdateOperationsInput | number
  }

  export type empleadoCreateManyEstado_civilInput = {
    id_empleado?: number
    nombre: string
    cedula: string
    apellido: string
    fecha_nacimiento: Date | string
    correo: string
    fecha_ingreso: Date | string
    telefono: string
    fecha_egreso?: Date | string | null
    direccion: string
    afiliado_IPS: boolean
  }

  export type empleadoUpdateWithoutEstado_civilInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    cedula?: StringFieldUpdateOperationsInput | string
    apellido?: StringFieldUpdateOperationsInput | string
    fecha_nacimiento?: DateTimeFieldUpdateOperationsInput | Date | string
    correo?: StringFieldUpdateOperationsInput | string
    fecha_ingreso?: DateTimeFieldUpdateOperationsInput | Date | string
    telefono?: StringFieldUpdateOperationsInput | string
    fecha_egreso?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    direccion?: StringFieldUpdateOperationsInput | string
    afiliado_IPS?: BoolFieldUpdateOperationsInput | boolean
    concepto_empleado?: concepto_empleadoUpdateManyWithoutEmpleadoNestedInput
    detalle_nomina?: detalle_nominaUpdateManyWithoutEmpleadoNestedInput
    hijo?: hijoUpdateManyWithoutEmpleadoNestedInput
    historial_cargo?: historial_cargoUpdateManyWithoutEmpleadoNestedInput
    usuario?: usuarioUpdateOneWithoutEmpleadoNestedInput
  }

  export type empleadoUncheckedUpdateWithoutEstado_civilInput = {
    id_empleado?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    cedula?: StringFieldUpdateOperationsInput | string
    apellido?: StringFieldUpdateOperationsInput | string
    fecha_nacimiento?: DateTimeFieldUpdateOperationsInput | Date | string
    correo?: StringFieldUpdateOperationsInput | string
    fecha_ingreso?: DateTimeFieldUpdateOperationsInput | Date | string
    telefono?: StringFieldUpdateOperationsInput | string
    fecha_egreso?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    direccion?: StringFieldUpdateOperationsInput | string
    afiliado_IPS?: BoolFieldUpdateOperationsInput | boolean
    concepto_empleado?: concepto_empleadoUncheckedUpdateManyWithoutEmpleadoNestedInput
    detalle_nomina?: detalle_nominaUncheckedUpdateManyWithoutEmpleadoNestedInput
    hijo?: hijoUncheckedUpdateManyWithoutEmpleadoNestedInput
    historial_cargo?: historial_cargoUncheckedUpdateManyWithoutEmpleadoNestedInput
    usuario?: usuarioUncheckedUpdateOneWithoutEmpleadoNestedInput
  }

  export type empleadoUncheckedUpdateManyWithoutEstado_civilInput = {
    id_empleado?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    cedula?: StringFieldUpdateOperationsInput | string
    apellido?: StringFieldUpdateOperationsInput | string
    fecha_nacimiento?: DateTimeFieldUpdateOperationsInput | Date | string
    correo?: StringFieldUpdateOperationsInput | string
    fecha_ingreso?: DateTimeFieldUpdateOperationsInput | Date | string
    telefono?: StringFieldUpdateOperationsInput | string
    fecha_egreso?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    direccion?: StringFieldUpdateOperationsInput | string
    afiliado_IPS?: BoolFieldUpdateOperationsInput | boolean
  }

  export type detalle_nominaCreateManyNominaInput = {
    id_detalle?: number
    total_descuentos: Decimal | DecimalJsLike | number | string
    total_bonificaciones: Decimal | DecimalJsLike | number | string
    neto_a_cobrar: number
    creado_por: number
    id_empleado: number
  }

  export type detalle_nominaUpdateWithoutNominaInput = {
    total_descuentos?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    total_bonificaciones?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    neto_a_cobrar?: IntFieldUpdateOperationsInput | number
    usuario?: usuarioUpdateOneRequiredWithoutDetalle_nominaNestedInput
    empleado?: empleadoUpdateOneRequiredWithoutDetalle_nominaNestedInput
    detalle_nomina_concepto?: detalle_nomina_conceptoUpdateManyWithoutDetalle_nominaNestedInput
  }

  export type detalle_nominaUncheckedUpdateWithoutNominaInput = {
    id_detalle?: IntFieldUpdateOperationsInput | number
    total_descuentos?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    total_bonificaciones?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    neto_a_cobrar?: IntFieldUpdateOperationsInput | number
    creado_por?: IntFieldUpdateOperationsInput | number
    id_empleado?: IntFieldUpdateOperationsInput | number
    detalle_nomina_concepto?: detalle_nomina_conceptoUncheckedUpdateManyWithoutDetalle_nominaNestedInput
  }

  export type detalle_nominaUncheckedUpdateManyWithoutNominaInput = {
    id_detalle?: IntFieldUpdateOperationsInput | number
    total_descuentos?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    total_bonificaciones?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    neto_a_cobrar?: IntFieldUpdateOperationsInput | number
    creado_por?: IntFieldUpdateOperationsInput | number
    id_empleado?: IntFieldUpdateOperationsInput | number
  }

  export type usuarioCreateManyRol_usuarioInput = {
    id_usuario?: number
    nombre_usuario: string
    estado: boolean
    clave: string
    id_empleado: number
  }

  export type usuarioUpdateWithoutRol_usuarioInput = {
    nombre_usuario?: StringFieldUpdateOperationsInput | string
    estado?: BoolFieldUpdateOperationsInput | boolean
    clave?: StringFieldUpdateOperationsInput | string
    detalle_nomina?: detalle_nominaUpdateManyWithoutUsuarioNestedInput
    registro_acceso?: registro_accesoUpdateManyWithoutUsuarioNestedInput
    empleado?: empleadoUpdateOneRequiredWithoutUsuarioNestedInput
  }

  export type usuarioUncheckedUpdateWithoutRol_usuarioInput = {
    id_usuario?: IntFieldUpdateOperationsInput | number
    nombre_usuario?: StringFieldUpdateOperationsInput | string
    estado?: BoolFieldUpdateOperationsInput | boolean
    clave?: StringFieldUpdateOperationsInput | string
    id_empleado?: IntFieldUpdateOperationsInput | number
    detalle_nomina?: detalle_nominaUncheckedUpdateManyWithoutUsuarioNestedInput
    registro_acceso?: registro_accesoUncheckedUpdateManyWithoutUsuarioNestedInput
  }

  export type usuarioUncheckedUpdateManyWithoutRol_usuarioInput = {
    id_usuario?: IntFieldUpdateOperationsInput | number
    nombre_usuario?: StringFieldUpdateOperationsInput | string
    estado?: BoolFieldUpdateOperationsInput | boolean
    clave?: StringFieldUpdateOperationsInput | string
    id_empleado?: IntFieldUpdateOperationsInput | number
  }

  export type concepto_salarialCreateManyTipo_concepto_salarialInput = {
    id_concepto?: number
    nombre: string
    recurrente: boolean
    afecta_IPS: boolean
    afecta_aguinaldo: boolean
  }

  export type concepto_salarialUpdateWithoutTipo_concepto_salarialInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    recurrente?: BoolFieldUpdateOperationsInput | boolean
    afecta_IPS?: BoolFieldUpdateOperationsInput | boolean
    afecta_aguinaldo?: BoolFieldUpdateOperationsInput | boolean
    concepto_empleado?: concepto_empleadoUpdateManyWithoutConcepto_salarialNestedInput
    detalle_nomina_concepto?: detalle_nomina_conceptoUpdateManyWithoutConcepto_salarialNestedInput
  }

  export type concepto_salarialUncheckedUpdateWithoutTipo_concepto_salarialInput = {
    id_concepto?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    recurrente?: BoolFieldUpdateOperationsInput | boolean
    afecta_IPS?: BoolFieldUpdateOperationsInput | boolean
    afecta_aguinaldo?: BoolFieldUpdateOperationsInput | boolean
    concepto_empleado?: concepto_empleadoUncheckedUpdateManyWithoutConcepto_salarialNestedInput
    detalle_nomina_concepto?: detalle_nomina_conceptoUncheckedUpdateManyWithoutConcepto_salarialNestedInput
  }

  export type concepto_salarialUncheckedUpdateManyWithoutTipo_concepto_salarialInput = {
    id_concepto?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    recurrente?: BoolFieldUpdateOperationsInput | boolean
    afecta_IPS?: BoolFieldUpdateOperationsInput | boolean
    afecta_aguinaldo?: BoolFieldUpdateOperationsInput | boolean
  }

  export type detalle_nominaCreateManyUsuarioInput = {
    id_detalle?: number
    total_descuentos: Decimal | DecimalJsLike | number | string
    total_bonificaciones: Decimal | DecimalJsLike | number | string
    neto_a_cobrar: number
    id_nomina: number
    id_empleado: number
  }

  export type registro_accesoCreateManyUsuarioInput = {
    id_registro?: number
    ip_origen: string
    accion: string
    fecha_hora: Date | string
  }

  export type detalle_nominaUpdateWithoutUsuarioInput = {
    total_descuentos?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    total_bonificaciones?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    neto_a_cobrar?: IntFieldUpdateOperationsInput | number
    empleado?: empleadoUpdateOneRequiredWithoutDetalle_nominaNestedInput
    nomina?: nominaUpdateOneRequiredWithoutDetalle_nominaNestedInput
    detalle_nomina_concepto?: detalle_nomina_conceptoUpdateManyWithoutDetalle_nominaNestedInput
  }

  export type detalle_nominaUncheckedUpdateWithoutUsuarioInput = {
    id_detalle?: IntFieldUpdateOperationsInput | number
    total_descuentos?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    total_bonificaciones?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    neto_a_cobrar?: IntFieldUpdateOperationsInput | number
    id_nomina?: IntFieldUpdateOperationsInput | number
    id_empleado?: IntFieldUpdateOperationsInput | number
    detalle_nomina_concepto?: detalle_nomina_conceptoUncheckedUpdateManyWithoutDetalle_nominaNestedInput
  }

  export type detalle_nominaUncheckedUpdateManyWithoutUsuarioInput = {
    id_detalle?: IntFieldUpdateOperationsInput | number
    total_descuentos?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    total_bonificaciones?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    neto_a_cobrar?: IntFieldUpdateOperationsInput | number
    id_nomina?: IntFieldUpdateOperationsInput | number
    id_empleado?: IntFieldUpdateOperationsInput | number
  }

  export type registro_accesoUpdateWithoutUsuarioInput = {
    ip_origen?: StringFieldUpdateOperationsInput | string
    accion?: StringFieldUpdateOperationsInput | string
    fecha_hora?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type registro_accesoUncheckedUpdateWithoutUsuarioInput = {
    id_registro?: IntFieldUpdateOperationsInput | number
    ip_origen?: StringFieldUpdateOperationsInput | string
    accion?: StringFieldUpdateOperationsInput | string
    fecha_hora?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type registro_accesoUncheckedUpdateManyWithoutUsuarioInput = {
    id_registro?: IntFieldUpdateOperationsInput | number
    ip_origen?: StringFieldUpdateOperationsInput | string
    accion?: StringFieldUpdateOperationsInput | string
    fecha_hora?: DateTimeFieldUpdateOperationsInput | Date | string
  }



  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}